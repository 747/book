{"version":3,"sources":["webpack://Wenyan/webpack/universalModuleDefinition","webpack://Wenyan/webpack/bootstrap","webpack://Wenyan/./src/utils.ts","webpack://Wenyan/./src/transpilers/base.ts","webpack://Wenyan/./src/parser.ts","webpack://Wenyan/./src/reader.ts","webpack://Wenyan/./node_modules/process/browser.js","webpack://Wenyan/./src/converts/hanzi2num.ts","webpack://Wenyan/./src/converts/hanzi2pinyin.ts","webpack://Wenyan/./src/macro.ts","webpack://Wenyan/./src/version.ts","webpack://Wenyan/./src/keywords.ts","webpack://Wenyan/./src/stdlib.ts","webpack://Wenyan/./lib sync .*\\.wy$","webpack://Wenyan/./lib/js/位經.wy","webpack://Wenyan/./lib/js/格物.wy","webpack://Wenyan/./lib/js/畫譜.wy","webpack://Wenyan/./lib/js/西曆法.wy","webpack://Wenyan/./lib/py/位經.wy","webpack://Wenyan/./lib/py/西曆法.wy","webpack://Wenyan/./lib/列經.wy","webpack://Wenyan/./lib/易經.wy","webpack://Wenyan/./lib/曆法.wy","webpack://Wenyan/./lib/曆表.wy","webpack://Wenyan/./lib/渾沌經.wy","webpack://Wenyan/./lib/算經.wy","webpack://Wenyan/./lib/籌經.wy","webpack://Wenyan/./src/typecheck.ts","webpack://Wenyan/./src/types.ts","webpack://Wenyan/./src/transpilers/index.ts","webpack://Wenyan/./src/transpilers/js.ts","webpack://Wenyan/./src/transpilers/py.ts","webpack://Wenyan/./src/transpilers/rb.ts","webpack://Wenyan/./src/execute.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","src","startAt","target","length","defaultAssertLogger","console","log","defaultAssert","logger","msg","pos","b","x","replace","asc","tmpVarCnt","randVarCnt","lib","randVar","currTmpVar","nextTmpVar","transpile","options","Error","wrapModule","moduleName","scopeName","split","slice","markerStart","markerEnd","moduleWrapper","BaseTranspiler","hanzi2num","hanzi2numstr","num2hanzi","bool2hanzi","hanzi2pinyin","version","NUMBER_KEYWORDS","KEYWORDS","STDLIB","evalCompiled","defaultTrustedHosts","IGNORE_SYMBOLS","wy2tokens","txt","assert","tokens","tok","idt","num","litlvl","data","enddata","push","endnum","numStr","includes","match","is_sin","ok","k","kinfo","idenMap","defaultLogCallback","dir","depth","maxArrayLength","defaultErrorCallback","e","error","process","exit","tokens2asc","gettok","cmd","idx","jdx","undefined","typeassert","good","reason","typ","join","op","count","type","values","public","names","arity","args","cnt","Number","isSafeInteger","j","test","not","elseif","lhs","rhs","fun","pop","container","iden","containers","iterator","lhssubs","del","rhssubs","file","message","compile","lang","romanizeIdentifiers","resetVarCnt","logCallback","errorCallback","strict","entryFilepath","importPaths","importCache","importContext","allowHttp","trustedHosts","requestTimeout","importOptions","txtlines","errmsg","macros","extractMacros","expandMacros","system","noDup","token","isRoman","tokenRomanize","printSignature","typecheck","transpiler","imports","targ","result","Array","from","Set","bundleImports","forEach","entry","compiledModule","execute","source","isLangSupportedForEval","compiled","INDEX_FILENAME","isHostTrusted","url","host","startsWith","isHttpURL","uri","fetchTextSync","timeout","XHR","window","XMLHttpRequest","eval","xmlHttp","open","send","status","responseText","URIError","fetchSync","cache","readFileSync","importReader","context","SyntaxError","pathes","entries","endsWith","encodeURIComponent","ReferenceError","map","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","arguments","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","NumberTokenType","NUM_TOKENS","負","SIGN","sign","DECIMAL","exp","又","DELIM","有","零","ZERO","digit","一","DIGIT","二","三","四","五","六","七","八","九","十","INT_MULT","百","千","萬","億","兆","京","垓","秭","穰","溝","澗","正","載","極","分","FRAC_MULT","釐","毫","絲","忽","微","纖","沙","塵","埃","渺","漠","NEG_WORD","INF_WORD","NAN_WORD","DECIMAL_WORD","readout","DIGIT_WORDS","0","1","2","3","4","5","6","7","8","9","MULT_WORDS","str","eMultState","NONE","FRAC","INT","DONE","eDigitState","MULT","MULT_AMBIG","DIGIT_WITH_ZERO","ZERO_MULT_AMBIG","RESULT_2_TO_63","digits","reverse","getDigit","BEGIN","tokenStr","charAt","END","tokenize","digitState","multStack","isEmpty","_exps","total","_expAdd","top","state","Infinity","clear","markDone","_sign","_exp","_digits","applySign","newSign","isArray","fillZeros","newExp","fill","resetExp","currExp","parse","isFinite","toString","printAsInt","resultA","resultB","getMaxExp","Math","max","digitA","digitB","compareMagnitude","rend","findIndex","rendExp","rbegin","rbeginExp","expStr","printAsScientific","scientificExp","abs","fixedLen","NaN","format","precision","parseNumStr","myIndexOf","val","indexOf","digitIndex","expIndex","substring","decimalIndex","intDigits","fracDigits","min","multWords","digitWords","decimalWord","toFixed","signStr","minMultExp","pendingZero","intToReadout","expBias","hasOutput","mult","find","hasInt","fracToReadout","hanzi2unicodeEntry","y","charCodeAt","toUpperCase","a","tab","pinyin","baxter","qlvl","imp","getImports","grabLit","lvl","s0","s1","stripQuotes","ins","ous","ii","RegExp","getMacros","moduleMacros","to","re","expand","ntxt","starts","level","calcBracketStarts","search","nxtend","KEYWORDS_DEFINE","吾有","今有","物之","數","列","言","術","爻","物","元","書之","名之曰","施","以施","曰","噫","取","昔之","今","是矣","不復存矣","其","乃得","乃得矣","乃歸空無","是謂","之術也","必先得","是術曰","乃行是術曰","欲行是術","也","云云","凡","中之","恆為是","為是","遍","乃止","乃止是遍","若非","若","者","若其然者","若其不然者","或若","其物如是","之物也","夫","等於","不等於","不大於","不小於","大於","小於","加","減","乘","除","中有陽乎","中無陰乎","變","所餘幾何","以","於","之長","之","充","銜","其餘","陰","陽","吾嘗觀","中","之書","方悟","之義","嗚呼","之禍","姑妄行此","如事不諧","豈","之禍歟","不知何禍歟","乃作罷","或云","蓋謂","注曰","疏曰","批曰","ke","sort","fromEntries","keys","parts","default","sublib","part","loadStdlib","webpackContext","req","id","webpackContextResolve","code","resolve","printType","abc","floor","element","in","out","fields","signature","filter","repeat","imported","strayvar","scope","scopestarts","funstack","funretcnt","prevobj","took","checkscopei","inittype","gettype","checkscopeall","objfield","isarg","scopepush","node","scopepop","ss","acceptScopeStartOps","typeEqual","who","want","got","ut","f","ptr","ty","assign","isASCNodeOperator","otype","unshift","ta","olt","typy","tl","tlv","tls","tr","trv","trs","名","文","蹤","transpilers","js","py","rb","prevfun","prevfunpublic","prevobjpublic","previsfun","curlvl","errcurlvls","getval","ans","arg","_a","vname","jj","v","ec","lop","funcurlvls","funcurnames","globals","locals","funargs","rename","toLowerCase","lowerAllPinYinAndMakeItGlobal","item","condition","lambdaList","methodIndex","argsStr","hanzinizeOuput","outputHanziWrapper","outputHanzi","compiledCode","scoped","output","_console_log"],"mappings":"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","file":"core/index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Wenyan\"] = factory();\n\telse\n\t\troot[\"Wenyan\"] = factory();\n})((typeof self !== \"undefined\" ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * To check match of a part of string\n */\nexport function match(src: string, startAt: number, target: string) {\n  let length = target.length;\n  for (let i = 0; i < length; i++) {\n    if (src[startAt + i] !== target[i]) return false;\n  }\n  return true;\n}\n\nexport const defaultAssertLogger: (...messages: any[]) => void = console.log;\n\nexport const defaultAssert = (logger = defaultAssertLogger) => (\n  msg: string,\n  pos: number,\n  b: any\n) => {\n  if (!b) logger(`ERROR@${pos}: ${msg}`);\n};\n\nexport function isRoman(x: string) {\n  return x.replace(/[ -~]/g, \"\").length == 0;\n}\n","import { ASCNode, TranspilerOptions } from \"../types\";\n\nexport interface ModuleWrapperOptions {\n  src: string;\n  moduleName: string;\n  scopeName: string;\n  markerStart: string;\n  markerEnd: string;\n}\n\nexport class BaseTranspiler {\n  asc: ASCNode[];\n  tmpVarCnt = 0;\n  randVarCnt = 0;\n  lib = \"\";\n\n  constructor(asc: ASCNode[]) {\n    this.asc = asc;\n  }\n\n  randVar() {\n    return `_rand${++this.randVarCnt}`;\n  }\n\n  currTmpVar() {\n    return `_ans${this.tmpVarCnt}`;\n  }\n\n  nextTmpVar() {\n    return `_ans${++this.tmpVarCnt}`;\n  }\n\n  transpile(\n    options: Partial<TranspilerOptions> = {}\n  ): { result: string; imports: string[] } {\n    throw Error(\"No Implementation\");\n  }\n\n  wrapModule(name: string, src: string): string {\n    const moduleName = name.replace(/\\//g, \"_\");\n    const scopeName = name.split(\"/\").slice(-1)[0];\n    const markerStart = `/*___wenyan_module_${moduleName}_start___*/`;\n    const markerEnd = `/*___wenyan_module_${moduleName}_end___*/`;\n    return this.moduleWrapper({\n      src,\n      moduleName,\n      scopeName,\n      markerStart,\n      markerEnd\n    });\n  }\n\n  protected moduleWrapper({ src }: ModuleWrapperOptions) {\n    return src;\n  }\n}\n","import {\n  CompileOptions,\n  ASCNode,\n  Token,\n  TokenType,\n  RomanizeSystem,\n  ExecuteOptions\n} from \"./types\";\nimport {\n  hanzi2num,\n  hanzi2numstr,\n  num2hanzi,\n  bool2hanzi\n} from \"./converts/hanzi2num\";\nimport { hanzi2pinyin } from \"./converts/hanzi2pinyin\";\nimport { bundleImports } from \"./reader\";\nimport { expandMacros, extractMacros } from \"./macro\";\nimport { version } from \"./version\";\nimport { NUMBER_KEYWORDS, KEYWORDS } from \"./keywords\";\nimport { STDLIB } from \"./stdlib\";\nimport { typecheck, printSignature } from \"./typecheck\";\nimport transpilers from \"./transpilers\";\nimport { match, defaultAssert, isRoman } from \"./utils\";\nimport { evalCompiled, isLangSupportedForEval } from \"./execute\";\n\nconst defaultTrustedHosts = [\n  \"https://raw.githubusercontent.com/LingDong-/wenyan-lang/master\"\n];\n\nconst IGNORE_SYMBOLS = \"。、\\n\\r\\t \";\n\nfunction wy2tokens(txt: string, assert = defaultAssert()) {\n  var tokens: Token[] = [];\n  var tok = \"\";\n  var idt = false;\n  var num = false;\n  var litlvl = 0;\n  var data = false;\n\n  var i = 0;\n\n  function enddata() {\n    if (data) {\n      tokens.push([\"data\", tok, i]);\n      data = false;\n      tok = \"\";\n    }\n  }\n  function endnum() {\n    if (num) {\n      const numStr = hanzi2numstr(tok);\n      assert(`Invalid number \"${tok}\".`, i, numStr != null);\n      tokens.push([\"num\", numStr, i]);\n      tok = \"\";\n      num = false;\n    }\n  }\n\n  while (i < txt.length) {\n    if (IGNORE_SYMBOLS.includes(txt[i])) {\n      if (idt || data) {\n        tok += txt[i];\n      }\n    } else if (match(txt, i, \"「「\") || txt[i] == \"『\") {\n      var is_sin = txt[i] == \"「\";\n      if (litlvl == 0) {\n        enddata();\n        endnum();\n        idt = true;\n        tok = \"\";\n      } else {\n        tok += txt[i];\n        if (is_sin) {\n          tok += txt[i + 1];\n        }\n      }\n      litlvl++;\n      if (is_sin) {\n        i++;\n      }\n    } else if (\n      (txt[i] == \"」\" &&\n        txt[i + 1] == \"」\" &&\n        (txt[i + 2] != \"」\" || txt[i + 3] == \"」\")) ||\n      txt[i] == \"』\"\n    ) {\n      var is_sin = txt[i] == \"」\";\n      litlvl--;\n      if (litlvl == 0) {\n        // escape double quote\n        tok = tok.replace(/\"/g, '\\\\\"');\n        tokens.push([\"lit\", `\"${tok}\"`, i + 1]);\n        idt = false;\n        tok = \"\";\n      } else {\n        tok += txt[i];\n        if (is_sin) {\n          tok += txt[i + 1];\n        }\n      }\n      if (is_sin) {\n        i++;\n      }\n    } else if (litlvl > 0) {\n      tok += txt[i];\n    } else {\n      if (txt[i] == \"「\") {\n        enddata();\n        endnum();\n        idt = true;\n        tok = \"\";\n      } else if (txt[i] == \"」\") {\n        tokens.push([\"iden\", tok, i]);\n        idt = false;\n        tok = \"\";\n      } else {\n        if (idt) {\n          tok += txt[i];\n        } else if (num) {\n          if (NUMBER_KEYWORDS.includes(txt[i])) {\n            tok += txt[i];\n          } else {\n            endnum();\n            i--;\n          }\n        } else {\n          var ok = false;\n          for (var k in KEYWORDS) {\n            ok = match(txt, i, k);\n            if (ok) {\n              enddata();\n              var kinfo = KEYWORDS[k];\n              i += k.length - 1;\n              tokens.push([...kinfo, i] as Token);\n              break;\n            }\n          }\n          if (!ok) {\n            if (NUMBER_KEYWORDS.includes(txt[i])) {\n              num = true;\n              tok = txt[i];\n            } else {\n              tok += txt[i];\n              data = true;\n            }\n          }\n        }\n      }\n    }\n    i++;\n  }\n  if (tok.length) {\n    if (num) {\n      const numStr = hanzi2numstr(tok);\n      assert(`Invalid number \"${tok}\".`, i, numStr != null);\n      tokens.push([\"num\", numStr, i]);\n    } else if (data) {\n      tokens.push([\"data\", tok, i]);\n    } else {\n      assert(\"Unterminated identifier.\", i, false);\n    }\n  }\n  return tokens;\n}\n\nlet idenMap = {};\n\nfunction tokenRomanize(tokens: Token[], system: RomanizeSystem) {\n  function noDup(x: string) {\n    for (var k in idenMap) {\n      if (idenMap[k] == x) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  for (const token of tokens) {\n    if (token[0] == \"iden\" && !isRoman(token[1])) {\n      var r = idenMap[token[1]];\n      var key = token[1];\n      if (r !== undefined) {\n        token[1] = r;\n      } else {\n        r = hanzi2pinyin(token[1], system);\n        while (!noDup(r)) {\n          r += \"_\";\n        }\n        token[1] = r;\n      }\n      idenMap[key] = r;\n    }\n  }\n}\n\nfunction defaultLogCallback(x: any) {\n  return typeof x == \"string\"\n    ? console.log(x)\n    : console.dir(x, { depth: null, maxArrayLength: null });\n}\n\nfunction defaultErrorCallback(e: any) {\n  console.error(e);\n  process.exit(e);\n}\n\nfunction tokens2asc(tokens: Token[], assert = defaultAssert()) {\n  var asc: ASCNode[] = [];\n  var i = 0;\n  while (i < tokens.length) {\n    var pos = gettok(i, 2);\n    var cmd = gettok(i, 0);\n\n    // @ts-ignore\n    function gettok(idx: number, jdx: 0): TokenType;\n    // @ts-ignore\n    function gettok(idx: number, jdx: 1): string | undefined;\n    // @ts-ignore\n    function gettok(idx: number, jdx: 2): number;\n    // @ts-ignore\n    function gettok(idx: number, jdx: number) {\n      if (tokens[idx] === undefined) {\n        assert(`Unexpected EOF`, pos, false);\n      }\n      return tokens[idx][jdx];\n    }\n\n    const typeassert = (idx: number, good, reason?: string) => {\n      var typ = gettok(idx, 0);\n      assert(\n        `<${cmd}> Expecting ${good.join(\"/\")}${\n          reason ? \" for \" + reason : \"\"\n        }, found ${typ}`,\n        pos,\n        good.includes(typ)\n      );\n    };\n\n    if (\n      gettok(i, 0) == \"decl\" &&\n      (gettok(i, 1) == \"uninit\" || gettok(i, 1) == \"public\")\n    ) {\n      typeassert(i + 1, [\"num\"], \"variable count\");\n      typeassert(i + 2, [\"type\"], \"variable type\");\n      const cnt = Number(gettok(i + 1, 1));\n      assert(\n        `Invalid variable count ${cnt}`,\n        pos,\n        Number.isSafeInteger(cnt) && cnt > 0\n      );\n\n      var x: ASCNode = {\n        op: \"var\",\n        count: cnt,\n        type: gettok(i + 2, 1),\n        values: [],\n        names: [],\n        public: gettok(i, 1) == \"public\",\n        pos\n      };\n      i += 3;\n      while (tokens[i] && gettok(i, 0) == \"assgn\") {\n        x.values.push(tokens[i + 1]);\n        i += 2;\n      }\n      if (tokens[i] && gettok(i, 0) == \"name\") {\n        x.names.push(gettok(i + 1, 1));\n        i += 2;\n      }\n      while (tokens[i] && gettok(i, 0) == \"assgn\") {\n        x.names.push(gettok(i + 1, 1));\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"decl\" && gettok(i, 1) == \"init\") {\n      typeassert(i + 1, [\"type\"], \"variable type\");\n      typeassert(\n        i + 2,\n        [\"data\", \"num\", \"lit\", \"iden\", \"bool\", \"any\"],\n        \"variable initialization\"\n      );\n\n      var x: ASCNode = {\n        op: \"var\",\n        count: 1,\n        type: gettok(i + 1, 1),\n        values: [tokens[i + 2]],\n        public: false,\n        pos\n      };\n      i += 3;\n      if (tokens[i] !== undefined && gettok(i, 0) == \"name\") {\n        x.names = [gettok(i + 1, 1)];\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"decl\" && gettok(i, 1) == \"prop\") {\n      typeassert(i + 1, [\"lit\"], \"property key\");\n      typeassert(i + 3, [\"type\"], \"property type\");\n      typeassert(i + 4, [\"assgn\"], \"property value\");\n      var x: ASCNode = {\n        op: \"prop\",\n        type: gettok(i + 3, 1),\n        name: tokens[i + 1][1],\n        value: tokens[i + 5],\n        pos\n      };\n      i += 6;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"print\") {\n      asc.push({ op: \"print\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funstart\") {\n      var x: ASCNode = { op: \"fun\", arity: 0, args: [], pos };\n      i++;\n      if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funarg\") {\n        i++;\n        while (!(gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funbody\")) {\n          typeassert(i, [\"num\"], \"argument count\");\n          typeassert(i + 1, [\"type\"], \"argument type\");\n          var typ = gettok(i + 1, 1);\n          var cnt = Number(gettok(i, 1));\n          assert(\n            `Invalid argument count ${cnt}.`,\n            pos,\n            Number.isSafeInteger(cnt) && cnt > 0\n          );\n          x.arity += cnt;\n          i += 2;\n          for (var j = 0; j < cnt; j++) {\n            typeassert(i + j * 2, [\"assgn\"], \"another argument\");\n            typeassert(i + j * 2 + 1, [\"iden\"], \"argument\");\n            x.args.push({ name: tokens[i + j * 2 + 1][1], type: typ });\n          }\n          i += cnt * 2;\n        }\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"funbody\") {\n      asc.push({ op: \"funbody\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"bigend\") {\n      assert(\n        `<${cmd}> Incorrect function/object end`,\n        pos,\n        gettok(i + 2, 0) == \"ctrl\" && gettok(i + 1, 0) == \"iden\"\n      );\n      asc.push({ op: gettok(i + 2, 1) as \"objend\", pos });\n      i += 3;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"objbody\") {\n      asc.push({ op: \"objbody\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"if\") {\n      var x: ASCNode = { op: \"if\", test: [], pos };\n      i++;\n      while (!(gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"conj\")) {\n        x.test.push(tokens[i]);\n        i++;\n      }\n      i++;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"iftrue\") {\n      asc.push({ op: \"if\", test: [[\"ans\"]], pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"iffalse\") {\n      asc.push({ op: \"if\", test: [[\"ans\"]], not: true, pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"elseif\") {\n      var x: ASCNode = { op: \"if\", test: [], elseif: true, pos };\n      i++;\n      while (!(gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"conj\")) {\n        x.test.push(tokens[i]);\n        i++;\n      }\n      i++;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"end\") {\n      asc.push({ op: \"end\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"ret\") {\n      asc.push({ op: \"return\", value: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"retprev\") {\n      asc.push({ op: \"return\", value: [\"ans\"], pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"retvoid\") {\n      asc.push({ op: \"return\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"break\") {\n      asc.push({ op: \"break\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"continue\") {\n      asc.push({ op: \"continue\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"else\") {\n      asc.push({ op: \"else\", pos });\n      i += 1;\n    } else if (gettok(i, 0) == \"op\") {\n      typeassert(i + 2, [\"opord\"]);\n      var x: ASCNode = { op: \"op+\", pos };\n      if (gettok(i + 2, 1) == \"l\") {\n        x.lhs = tokens[i + 1];\n        x.rhs = tokens[i + 3];\n      } else {\n        x.lhs = tokens[i + 3];\n        x.rhs = tokens[i + 1];\n      }\n      if (gettok(i, 1) == \"/\" && gettok(i + 4, 0) == \"mod\") {\n        x.op = \"op%\";\n        i += 5;\n      } else {\n        x.op = (\"op\" + gettok(i, 1)) as \"op+\";\n        i += 4;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"not\") {\n      asc.push({ op: \"not\", value: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"name\") {\n      typeassert(i + 1, [\"iden\"]);\n      var x: ASCNode = { op: \"name\", names: [gettok(i + 1, 1)], pos };\n      i += 2;\n      while (tokens[i] && gettok(i, 0) == \"assgn\") {\n        x.names.push(gettok(i + 1, 1));\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"call\" && gettok(i, 1) == \"r\") {\n      var x: ASCNode = { op: \"call\", fun: tokens[i + 1], args: [], pos };\n      i += 2;\n      while (tokens[i] && gettok(i, 0) == \"opord\" && gettok(i, 1) == \"r\") {\n        typeassert(i + 1, [\"data\", \"num\", \"lit\", \"iden\", \"bool\", \"ans\"]);\n        x.args.push(tokens[i + 1]);\n        i += 2;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"call\" && gettok(i, 1) == \"l\") {\n      asc.push({ op: \"call\", pop: true, fun: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"ctnr\" && gettok(i, 1) == \"push\") {\n      typeassert(i + 2, [\"opord\"]);\n      assert(`<${cmd}> Only opord l allowed`, pos, gettok(i + 2, 1) == \"l\");\n      var x: ASCNode = {\n        op: \"push\",\n        container: tokens[i + 1],\n        values: [tokens[i + 3]],\n        pos\n      };\n      i += 4;\n      while (tokens[i] && gettok(i, 0) == \"opord\" && gettok(i, 1) == \"l\") {\n        x.values.push(tokens[i + 1]);\n        i += 2;\n      }\n      asc.push(x);\n    } else if (\n      gettok(i, 0) == \"expr\" &&\n      tokens[i + 2] &&\n      gettok(i + 2, 0) == \"ctnr\" &&\n      gettok(i + 2, 1) == \"subs\"\n    ) {\n      typeassert(i + 1, [\"iden\", \"lit\", \"ans\"]);\n      var x: ASCNode = {\n        op: \"subscript\",\n        container: tokens[i + 1],\n        value: tokens[i + 3],\n        pos\n      };\n      asc.push(x);\n      i += 4;\n    } else if (\n      gettok(i, 0) == \"expr\" &&\n      tokens[i + 2] &&\n      gettok(i + 2, 0) == \"ctnr\" &&\n      gettok(i + 2, 1) == \"len\"\n    ) {\n      typeassert(i + 1, [\"iden\", \"lit\", \"subs\"]);\n      var x: ASCNode = { op: \"length\", container: tokens[i + 1], pos };\n      asc.push(x);\n      i += 3;\n    } else if (\n      gettok(i, 0) == \"expr\" &&\n      tokens[i + 3] &&\n      gettok(i + 3, 0) == \"lop\"\n    ) {\n      var x: ASCNode = {\n        op: (\"op\" + gettok(i + 3, 1)) as \"op+\",\n        lhs: tokens[i + 1],\n        rhs: tokens[i + 2],\n        pos\n      };\n      asc.push(x);\n      i += 4;\n    } else if (gettok(i, 0) == \"expr\") {\n      asc.push({ op: \"temp\", iden: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"ctnr\" && gettok(i, 1) == \"cat\") {\n      var x: ASCNode = { op: \"cat\", containers: [tokens[i + 1]], pos };\n      i += 2;\n      while (gettok(i, 0) == \"opord\" && gettok(i, 1) == \"l\") {\n        x.containers.push(tokens[i + 1]);\n        i += 2;\n      }\n      asc.push(x);\n    } else if (\n      gettok(i, 0) == \"ctrl\" &&\n      gettok(i, 1) == \"for\" &&\n      gettok(i + 2, 0) == \"ctrl\" &&\n      gettok(i + 2, 1) == \"forin\"\n    ) {\n      var x: ASCNode = {\n        op: \"for\",\n        container: tokens[i + 1],\n        iterator: gettok(i + 3, 1),\n        pos\n      };\n      i += 4;\n      asc.push(x);\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"whiletrue\") {\n      asc.push({ op: \"whiletrue\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"ctrl\" && gettok(i, 1) == \"whilen0\") {\n      assert(\n        `<${cmd}> Incorrect loop start`,\n        pos,\n        gettok(i + 2, 1) == \"whilen1\"\n      );\n      asc.push({ op: \"whilen\", value: tokens[i + 1], pos });\n      i += 3;\n    } else if (gettok(i, 0) == \"rassgn\" && gettok(i, 1) == \"a\") {\n      var x: ASCNode = { op: \"reassign\", lhs: tokens[i + 1], pos };\n      if (gettok(i + 2, 0) == \"ctnr\" && gettok(i + 2, 1) == \"subs\") {\n        x.lhssubs = tokens[i + 3];\n        if (gettok(i + 6, 0) == \"rassgn\" && gettok(i + 6, 1) == \"delete\") {\n          x.rhs = undefined;\n          x.del = true;\n          i += 7;\n        } else {\n          x.rhs = tokens[i + 6];\n          if (\n            tokens[i + 7] &&\n            gettok(i + 7, 0) == \"ctnr\" &&\n            gettok(i + 7, 1) == \"subs\"\n          ) {\n            x.rhssubs = tokens[i + 8];\n            i += 10;\n          } else {\n            i += 8;\n          }\n        }\n      } else {\n        assert(\n          `<${cmd}> Missing conj`,\n          pos,\n          gettok(i + 2, 0) == \"ctrl\" && gettok(i + 2, 1) == \"conj\"\n        );\n        x.rhs = tokens[i + 4];\n        if (\n          tokens[i + 5] &&\n          gettok(i + 5, 0) == \"ctnr\" &&\n          gettok(i + 5, 1) == \"subs\"\n        ) {\n          x.rhssubs = tokens[i + 6];\n          i += 8;\n        } else {\n          i += 6;\n        }\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"discard\") {\n      asc.push({ op: \"discard\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"take\") {\n      typeassert(i + 1, [\"num\"], \"argument count\");\n      const cnt = Number(gettok(i + 1, 1));\n      assert(\n        `Invalid argument count ${cnt}`,\n        pos,\n        Number.isSafeInteger(cnt) && cnt > 0\n      );\n      asc.push({ op: \"take\", count: cnt, pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"import\" && gettok(i, 1) == \"file\") {\n      var x: ASCNode = { op: \"import\", file: gettok(i + 1, 1), iden: [], pos };\n      i += 2;\n      while (gettok(i, 0) == \"import\" && gettok(i, 1) == \"in\") {\n        x.file += \"/\" + gettok(i + 1, 1);\n        i += 2;\n      }\n      i += 1;\n      if (tokens[i] && gettok(i, 0) == \"import\" && gettok(i, 1) == \"iden\") {\n        i++;\n        while (!(gettok(i, 0) == \"import\" && gettok(i, 1) == \"idenend\")) {\n          typeassert(i, [\"iden\"]);\n          x.iden.push(gettok(i, 1));\n          i++;\n        }\n        i++;\n      }\n      asc.push(x);\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"try\") {\n      asc.push({ op: \"try\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"catch\") {\n      asc.push({ op: \"catch\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"catcherr0\") {\n      typeassert(i + 2, [\"try\"]);\n      if (tokens[i + 3] && gettok(i + 3, 0) == \"name\") {\n        asc.push({\n          op: \"catcherr\",\n          error: tokens[i + 1],\n          name: gettok(i + 4, 1),\n          pos\n        });\n        i += 5;\n      } else {\n        asc.push({\n          op: \"catcherr\",\n          error: tokens[i + 1],\n          name: undefined,\n          pos\n        });\n        i += 3;\n      }\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"catchall\") {\n      if (tokens[i + 1] && gettok(i + 1, 0) == \"name\") {\n        asc.push({\n          op: \"catcherr\",\n          error: undefined,\n          name: gettok(i + 2, 1),\n          pos\n        });\n        i += 3;\n      } else {\n        asc.push({ op: \"catcherr\", error: undefined, name: undefined, pos });\n        i++;\n      }\n    } else if (gettok(i, 0) == \"try\" && gettok(i, 1) == \"end\") {\n      asc.push({ op: \"tryend\", pos });\n      i++;\n    } else if (gettok(i, 0) == \"throw\" && gettok(i, 1) == \"a\") {\n      typeassert(i + 2, [\"throw\"]);\n      if (tokens[i + 3] && gettok(i + 3, 0) == \"assgn\") {\n        asc.push({\n          op: \"throw\",\n          error: tokens[i + 1],\n          message: tokens[i + 4],\n          pos\n        });\n        i += 5;\n      } else {\n        asc.push({ op: \"throw\", error: tokens[i + 1], pos });\n        i += 3;\n      }\n    } else if (gettok(i, 0) == \"comment\") {\n      asc.push({ op: \"comment\", value: tokens[i + 1], pos });\n      i += 2;\n    } else if (gettok(i, 0) == \"macro\") {\n      i += 2;\n    } else {\n      //console.log(\"Unrecognized\",tokens[i])\n      i++;\n    }\n  }\n\n  return asc;\n}\n\nfunction compile(txt: string, options?: Partial<CompileOptions>): string {\n  const {\n    lang = \"js\",\n    romanizeIdentifiers = \"none\",\n    resetVarCnt = true,\n    logCallback = defaultLogCallback,\n    errorCallback = defaultErrorCallback,\n    lib = STDLIB,\n    strict = false,\n\n    // import options\n    entryFilepath = undefined,\n    importPaths = [],\n    importCache = {},\n    importContext = {},\n    allowHttp = false,\n    trustedHosts = [],\n    requestTimeout = 2000\n  } = options;\n\n  trustedHosts.push(...defaultTrustedHosts);\n\n  const importOptions = {\n    entryFilepath,\n    importPaths,\n    importCache,\n    importContext,\n    allowHttp,\n    trustedHosts,\n    requestTimeout\n  };\n\n  if (resetVarCnt) idenMap = {};\n  txt = (txt || \"\").replace(/\\r\\n/g, \"\\n\");\n\n  var txtlines = txt.split(\"\\n\");\n\n  function assert(msg: string, pos: number, b: any) {\n    var errmsg = \"\";\n    if (!b) {\n      errmsg += `[Syntax Error] ${msg}\\n`;\n      var l = 0;\n      for (var i = 0; i < txtlines.length; i++) {\n        l += txtlines[i].length + 1;\n        if (l > pos) {\n          errmsg += `Line ${1 + i}, Character ${1 +\n            pos -\n            (l - txtlines[i].length)}:${txtlines[i]}`;\n          break;\n        }\n      }\n      logCallback(errmsg);\n    }\n    if (errmsg.length) {\n      if (errorCallback) {\n        errorCallback(errmsg);\n      }\n      return errmsg;\n    }\n    return 0;\n  }\n\n  var macros = extractMacros(txt, {\n    lib,\n    lang,\n    importOptions\n  });\n  txt = expandMacros(txt, macros);\n\n  logCallback(\"\\n\\n=== [PASS 0] EXPAND-MACROS ===\");\n  logCallback(macros);\n  // logCallback(txt);\n\n  var tokens = wy2tokens(txt, assert);\n\n  logCallback(\"\\n\\n=== [PASS 1] TOKENIZER ===\");\n  logCallback(tokens);\n\n  if (romanizeIdentifiers != \"none\") {\n    tokenRomanize(tokens, romanizeIdentifiers);\n  }\n\n  var asc = tokens2asc(tokens, assert);\n\n  logCallback(\"\\n\\n=== [PASS 2] ABSTRACT SYNTAX CHAIN ===\");\n  logCallback(asc);\n\n  if (strict) {\n    logCallback(\"\\n\\n=== [PASS 2.5] TYPECHECK ===\");\n    logCallback(printSignature(typecheck(asc, assert)));\n  }\n\n  logCallback(\"\\n\\n=== [PASS 3] COMPILER ===\");\n  if (!transpilers[lang]) {\n    new Error(\"Target language not supported.\");\n  }\n  var transpiler = new transpilers[lang](asc);\n  var { imports, result } = transpiler.transpile({ imports });\n  var targ = result;\n  logCallback(targ);\n  imports = imports || [];\n  imports = Array.from(new Set(imports));\n  logCallback(\"Loading imports \" + imports.join(\", \"));\n\n  bundleImports(imports, { lib, lang }, importOptions).forEach(\n    ({ src, moduleName, entry }) => {\n      const compiledModule = compile(src, {\n        ...options,\n        entryFilepath: entry,\n        resetVarCnt: false,\n        strict: false\n      });\n\n      targ = transpiler.wrapModule(moduleName, compiledModule) + targ;\n    }\n  );\n\n  return targ;\n}\n\nfunction execute(\n  source: string,\n  options: Partial<ExecuteOptions & CompileOptions> = {}\n) {\n  const { lang = \"js\" } = options;\n  isLangSupportedForEval(lang);\n  const compiled = compile(source, options);\n  evalCompiled(compiled, options);\n}\n\nexport {\n  compile,\n  evalCompiled,\n  execute,\n  version,\n  wy2tokens,\n  tokens2asc,\n  hanzi2num,\n  hanzi2numstr,\n  num2hanzi,\n  bool2hanzi,\n  hanzi2pinyin,\n  KEYWORDS,\n  NUMBER_KEYWORDS,\n  STDLIB\n};\n","import {\n  ImportOptions,\n  CacheObject,\n  CompileOptions,\n  ImportedModule\n} from \"./types\";\n\nconst INDEX_FILENAME = \"序\";\n\nfunction isHostTrusted(url: string, trustedHosts: string[]) {\n  for (const host of trustedHosts) {\n    // FIXME: it can be bypassed by relative path resolving,\n    // for examples: https://trusted.com/a/../../hijack.com/a/\n    if (url.startsWith(host)) return true;\n  }\n  return false;\n}\n\nfunction isHttpURL(uri: string) {\n  return !!uri.match(/^https?\\:\\/\\//);\n}\n\nfunction fetchTextSync(url: string, timeout: number) {\n  let XHR;\n  if (typeof window !== \"undefined\" && \"XMLHttpRequest\" in window)\n    XHR = window.XMLHttpRequest;\n  else XHR = eval(\"require\")(\"xmlhttprequest\").XMLHttpRequest;\n\n  var xmlHttp = new XHR();\n  // xmlHttp.timeout = timeout;\n  xmlHttp.open(\"GET\", url, false); // false for synchronous request\n  xmlHttp.send(null);\n\n  if (xmlHttp.status >= 200 && xmlHttp.status < 300)\n    return xmlHttp.responseText;\n\n  throw new URIError(xmlHttp.responseText);\n}\n\nfunction fetchSync(uri: string, cache: CacheObject, requestTimeout: number) {\n  if (cache[uri]) return cache[uri];\n\n  const data = isHttpURL(uri)\n    ? fetchTextSync(uri, requestTimeout)\n    : eval(\"require\")(\"fs\").readFileSync(uri, \"utf-8\");\n\n  cache[uri] = data;\n\n  return data;\n}\n\nexport function importReader(\n  moduleName: string,\n  importOptions: Partial<ImportOptions> = {}\n): ImportedModule {\n  const {\n    allowHttp = false,\n    entryFilepath,\n    importPaths = [],\n    importCache = {},\n    importContext = {},\n    trustedHosts = [],\n    requestTimeout = 2000\n  } = importOptions;\n\n  const context = importContext[moduleName];\n  if (context) {\n    if (typeof context === \"string\") {\n      return {\n        src: context,\n        moduleName\n      };\n    }\n\n    if (context.entry) {\n      return {\n        moduleName,\n        entry: context.entry,\n        src: context.src\n          ? context.src\n          : fetchSync(context.entry, importCache, requestTimeout)\n      };\n    }\n\n    throw new SyntaxError(\"Failed to parse context: \" + context);\n  }\n\n  const pathes: string[] = [];\n\n  if (typeof importPaths === \"string\") {\n    pathes.push(importPaths);\n  } else {\n    pathes.push(...importPaths);\n  }\n\n  if (entryFilepath)\n    pathes.push(\n      entryFilepath\n        .replace(/\\\\/g, \"/\")\n        .split(\"/\")\n        .slice(0, -1)\n        .join(\"/\")\n    );\n\n  for (const dir of pathes) {\n    let uri = dir;\n    let entries = [];\n    let src;\n\n    if (uri.endsWith(\"/\")) uri = uri.slice(0, -1);\n\n    if (isHttpURL(uri)) {\n      if (!allowHttp && !isHostTrusted(uri, trustedHosts)) {\n        throw new URIError(\n          `URL request \"${uri}\" is blocked by default for security purpose. ` +\n            `You can turn it on by specify the \"allowHttp\" option.`\n        );\n      }\n      entries = [\n        `${uri}/${encodeURIComponent(moduleName)}.wy`,\n        `${uri}/${encodeURIComponent(moduleName)}/${encodeURIComponent(\n          INDEX_FILENAME\n        )}.wy`\n      ];\n    } else {\n      entries = [\n        `${uri}/${moduleName}.wy`,\n        `${uri}/${moduleName}/${INDEX_FILENAME}.wy`\n      ];\n    }\n\n    for (const entry of entries) {\n      try {\n        src = fetchSync(entry, importCache, requestTimeout);\n        return { src, entry, moduleName };\n      } catch (e) {}\n    }\n  }\n\n  throw new ReferenceError(\n    `Module \"${moduleName}\" is not found. Searched in ${importPaths}`\n  );\n}\n\nexport function bundleImports(\n  imports: string[],\n  options: { lib: CompileOptions[\"lib\"]; lang: CompileOptions[\"lang\"] },\n  importOptions: ImportOptions\n): ImportedModule[] {\n  const { lib, lang } = options;\n\n  return imports.map(moduleName => {\n    if (lib[lang][moduleName]) {\n      return {\n        moduleName,\n        src: lib[lang][moduleName]\n      };\n    }\n\n    if (lib[moduleName]) {\n      return {\n        moduleName,\n        src: lib[moduleName]\n      };\n    }\n\n    return importReader(moduleName, importOptions);\n  });\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export enum NumberTokenType {\n  SIGN, // 負\n  DIGIT, // 一二三...\n  DECIMAL, // ·\n  INT_MULT, // 十百千萬億...\n  FRAC_MULT, // 分釐毫...\n  DELIM, // 又\n  ZERO, // 零\n\n  // pseudo tokens\n  BEGIN, // <BEGIN>\n  END // <END>\n}\nexport type Digit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n\nexport type NumberToken =\n  | {\n      type: NumberTokenType.ZERO | NumberTokenType.DIGIT;\n      digit: Digit;\n    }\n  | {\n      type: NumberTokenType.SIGN;\n      sign: number;\n    }\n  | {\n      type:\n        | NumberTokenType.DECIMAL\n        | NumberTokenType.INT_MULT\n        | NumberTokenType.FRAC_MULT;\n      exp: number;\n    }\n  | {\n      type: NumberTokenType.DELIM | NumberTokenType.BEGIN | NumberTokenType.END;\n    };\n\nexport interface ParseResult {\n  sign: number;\n  exp: number;\n  digits: Digit[];\n}\n\nconst NUM_TOKENS = {\n  負: { type: NumberTokenType.SIGN, sign: -1 },\n  \"·\": { type: NumberTokenType.DECIMAL, exp: 0 }, // U+00B7 Middle Dot\n  又: { type: NumberTokenType.DELIM },\n  有: { type: NumberTokenType.DELIM },\n  零: { type: NumberTokenType.ZERO, digit: \"0\" },\n  一: { type: NumberTokenType.DIGIT, digit: \"1\" },\n  二: { type: NumberTokenType.DIGIT, digit: \"2\" },\n  三: { type: NumberTokenType.DIGIT, digit: \"3\" },\n  四: { type: NumberTokenType.DIGIT, digit: \"4\" },\n  五: { type: NumberTokenType.DIGIT, digit: \"5\" },\n  六: { type: NumberTokenType.DIGIT, digit: \"6\" },\n  七: { type: NumberTokenType.DIGIT, digit: \"7\" },\n  八: { type: NumberTokenType.DIGIT, digit: \"8\" },\n  九: { type: NumberTokenType.DIGIT, digit: \"9\" },\n  十: { type: NumberTokenType.INT_MULT, exp: 1 },\n  百: { type: NumberTokenType.INT_MULT, exp: 2 },\n  千: { type: NumberTokenType.INT_MULT, exp: 3 },\n  萬: { type: NumberTokenType.INT_MULT, exp: 4 },\n  億: { type: NumberTokenType.INT_MULT, exp: 8 },\n  兆: { type: NumberTokenType.INT_MULT, exp: 12 },\n  京: { type: NumberTokenType.INT_MULT, exp: 16 },\n  垓: { type: NumberTokenType.INT_MULT, exp: 20 },\n  秭: { type: NumberTokenType.INT_MULT, exp: 24 },\n  穰: { type: NumberTokenType.INT_MULT, exp: 28 },\n  溝: { type: NumberTokenType.INT_MULT, exp: 32 },\n  澗: { type: NumberTokenType.INT_MULT, exp: 36 },\n  正: { type: NumberTokenType.INT_MULT, exp: 40 },\n  載: { type: NumberTokenType.INT_MULT, exp: 44 },\n  極: { type: NumberTokenType.INT_MULT, exp: 48 },\n  分: { type: NumberTokenType.FRAC_MULT, exp: -1 },\n  釐: { type: NumberTokenType.FRAC_MULT, exp: -2 },\n  毫: { type: NumberTokenType.FRAC_MULT, exp: -3 },\n  絲: { type: NumberTokenType.FRAC_MULT, exp: -4 },\n  忽: { type: NumberTokenType.FRAC_MULT, exp: -5 },\n  微: { type: NumberTokenType.FRAC_MULT, exp: -6 },\n  纖: { type: NumberTokenType.FRAC_MULT, exp: -7 },\n  沙: { type: NumberTokenType.FRAC_MULT, exp: -8 },\n  塵: { type: NumberTokenType.FRAC_MULT, exp: -9 },\n  埃: { type: NumberTokenType.FRAC_MULT, exp: -10 },\n  渺: { type: NumberTokenType.FRAC_MULT, exp: -11 },\n  漠: { type: NumberTokenType.FRAC_MULT, exp: -12 },\n  // eslint-disable-next-line no-useless-computed-key\n  [\"〇\"]: { type: NumberTokenType.DIGIT, digit: \"0\" } // U+3007 Ideographic Number Zero\n} as Record<string, NumberToken>;\n\nconst NEG_WORD = \"負\";\nconst INF_WORD = \"無限大數\";\nconst NAN_WORD = \"不可算數\";\n\nconst DECIMAL_WORD = {\n  readout: \"又\"\n};\n\nconst DIGIT_WORDS = {\n  readout: {\n    0: \"零\",\n    1: \"一\",\n    2: \"二\",\n    3: \"三\",\n    4: \"四\",\n    5: \"五\",\n    6: \"六\",\n    7: \"七\",\n    8: \"八\",\n    9: \"九\"\n  }\n};\n\nconst MULT_WORDS = {\n  readout: [\n    { str: \"極\", exp: 48 },\n    { str: \"載\", exp: 44 },\n    { str: \"正\", exp: 40 },\n    { str: \"澗\", exp: 36 },\n    { str: \"溝\", exp: 32 },\n    { str: \"穰\", exp: 28 },\n    { str: \"秭\", exp: 24 },\n    { str: \"垓\", exp: 20 },\n    { str: \"京\", exp: 16 },\n    { str: \"兆\", exp: 12 },\n    { str: \"億\", exp: 8 },\n    { str: \"萬\", exp: 4 },\n    { str: \"千\", exp: 3 },\n    { str: \"百\", exp: 2 },\n    { str: \"十\", exp: 1 },\n    { str: \"\", exp: 0 },\n    { str: \"分\", exp: -1 },\n    { str: \"釐\", exp: -2 },\n    { str: \"毫\", exp: -3 },\n    { str: \"絲\", exp: -4 },\n    { str: \"忽\", exp: -5 },\n    { str: \"微\", exp: -6 },\n    { str: \"纖\", exp: -7 },\n    { str: \"沙\", exp: -8 },\n    { str: \"塵\", exp: -9 },\n    { str: \"埃\", exp: -10 },\n    { str: \"渺\", exp: -11 },\n    { str: \"漠\", exp: -12 }\n  ]\n};\n\nconst eMultState = {\n  NONE: \"NONE\", // <END>, 一 (ambiguous: 一萬一 or 一十一 or 一·一 or 一絲一)\n  FRAC: \"FRAC\", // ...微\n  INT: \"INT\", // ...萬, ...·,\n  DONE: \"DONE\", // 負一,\n  SIGN: \"SIGN\"\n};\n\nconst eDigitState = {\n  NONE: \"NONE\", // <END>, ·\n  MULT: \"MULT\", // 微\n  MULT_AMBIG: \"MULT_AMBIG\", // 十 (ambiguous: ...十 or 一十)\n  DIGIT: \"DIGIT\", // 一\n  DIGIT_WITH_ZERO: \"DIGIT_WITH_ZERO\", // 一...零, 零零， 零一...零,\n  DELIM: \"DELIM\", // 又\n  ZERO: \"ZERO\", // 零<END>, 零·, 零又, 零微, 零一\n  SIGN: \"SIGN\", // 負\n  ZERO_MULT_AMBIG: \"ZERO_MULT_AMBIG\" // 零十 (ambiguous: 零一十 or 零十 or 〇十)\n};\n\nconst RESULT_2_TO_63 = {\n  sign: 1,\n  exp: 0,\n  digits: \"9223372036854775808\".split(\"\").reverse() as Digit[]\n};\n\nexport function hanzi2numstr(s: string): string | null {\n  // returns array of tokens on success, null on invalid string\n  function tokenize(s: string) {\n    const result: NumberToken[] = [{ type: NumberTokenType.BEGIN }];\n    for (let i = 0; i < s.length; ++i) {\n      const tokenStr = s.charAt(i);\n      if (!NUM_TOKENS[tokenStr]) {\n        return null;\n      }\n\n      result.push(NUM_TOKENS[tokenStr]);\n    }\n    result.push({ type: NumberTokenType.END });\n    return result;\n  }\n\n  // returns:\n  //   on success: {\n  //     sign:   +1/-1/+Infinity/-Infinity/NaN,\n  //     exp:    power of 10,\n  //     digits: array of digit chars from lowest to highest, with leading and trailing zeros\n  //   }\n  //   on invalid string: null\n  // result = sign * {digits[length-1..0]} * 10^exp\n  // e.g. 負零又五毫零絲 = { sign: -1, exp: -4, digits: [\"0\", \"5\", \"0\", \"0, \"0\"] } = -00050e-4 = -0.005\n  function parse(tokens: NumberToken[]): ParseResult | null {\n    // parses the number string backwards, from lowest to highest digit\n    // parser state\n    let digitState = eDigitState.NONE;\n\n    // multiplier stack, keep track of all active multiplier exponents\n    const multStack = {\n      isEmpty() {\n        return this._exps.length === 0;\n      },\n      total() {\n        return this._expAdd;\n      },\n      top() {\n        return this._exps[this._exps.length - 1];\n      },\n      state() {\n        if (this.isEmpty()) {\n          return eMultState.NONE;\n        } else if (this._exps[0] < 0) {\n          return eMultState.FRAC;\n        } else if (this._exps[0] < Infinity) {\n          return eMultState.INT;\n        } else {\n          return eMultState.DONE;\n        }\n      },\n\n      push(exp: number) {\n        this._expAdd += exp;\n        this._exps.push(exp);\n      },\n      pop() {\n        this._expAdd -= this.top();\n        this._exps.pop();\n      },\n      clear() {\n        this._expAdd = 0;\n        this._exps = [];\n      },\n      markDone() {\n        this.clear();\n        this.push(Infinity);\n      },\n\n      _exps: [] as number[],\n      _expAdd: 0\n    };\n\n    // result, with different convension of exp for internal use\n    const result = {\n      sign() {\n        return this._sign;\n      },\n      exp() {\n        return this._exp;\n      },\n      digits() {\n        return this._digits;\n      },\n\n      applySign(newSign: number) {\n        this._sign *= newSign;\n      },\n      // digit: number or array of numbers\n      push(digit: Digit[] | Digit) {\n        if (Array.isArray(digit)) {\n          this._digits = this._digits.concat(digit);\n          this._exp += digit.length;\n        } else {\n          this._digits.push(digit);\n          ++this._exp;\n        }\n      },\n      fillZeros(newExp: number) {\n        this.push(Array(newExp - this._exp).fill(\"0\"));\n      },\n      resetExp(newExp: number) {\n        this._exp = newExp;\n      },\n\n      // the result is sign * 0.{digits[length-1..0]} * 10^exp\n      _sign: 1, // +1/-1\n      _exp: 0, // one plus exponent of the highest digit\n      _digits: [] as Digit[] // lowest to highest\n    };\n\n    // parses the number string backwards, discarding <END>\n    for (let i = tokens.length - 1; i > 0; --i) {\n      const token = tokens[i - 1];\n\n      // sign should be the first char\n      if (\n        multStack.state() === eMultState.SIGN &&\n        token.type !== NumberTokenType.BEGIN\n      ) {\n        return null;\n      }\n\n      // disambiguate omitted 一\n      switch (digitState) {\n        case eDigitState.MULT_AMBIG:\n          switch (token.type) {\n            // <BEGIN>(一?)十 -> <BEGIN>一十\n            // 負(一?)十 -> 負一十\n            // 又(一?)十 -> 又一十\n            // ·(一?)十 -> ·一十\n            // 分(一?)十絲 -> 分一十絲\n            case NumberTokenType.BEGIN:\n            case NumberTokenType.SIGN:\n            case NumberTokenType.DELIM:\n            case NumberTokenType.DECIMAL:\n            case NumberTokenType.FRAC_MULT:\n              result.push(\"1\");\n              digitState = eDigitState.DIGIT;\n              break;\n\n            // 一(一?)十 -> 一十\n            case NumberTokenType.DIGIT:\n              digitState = eDigitState.MULT;\n              break;\n\n            // 百(一?)十 -> 百一十\n            // 千(一?)十 -> 千一十\n            // 百(一?)萬 -> 百萬\n            case NumberTokenType.INT_MULT:\n              if (multStack.top() < (token.exp || 1)) {\n                result.push(\"1\");\n                digitState = eDigitState.DIGIT;\n              } else {\n                digitState = eDigitState.MULT;\n              }\n              break;\n\n            // 零(一?)十 -> 零(一?)十\n            case NumberTokenType.ZERO:\n              digitState = eDigitState.MULT_AMBIG;\n              break;\n\n            default:\n              break;\n          }\n          break;\n\n        case eDigitState.ZERO_MULT_AMBIG:\n          switch (token.type) {\n            // <BEGIN>(零一|零|〇)十 -> <BEGIN>〇十\n            // 負(零一|零|〇)十 -> 負〇十\n            // 一(零一|零|〇)十 -> 一〇十\n            // 又(零一|零|〇)十 -> 又〇十\n            // 零(零一|零|〇)十 -> 〇〇十\n            case NumberTokenType.BEGIN:\n            case NumberTokenType.SIGN:\n            case NumberTokenType.DIGIT:\n            case NumberTokenType.DELIM:\n            case NumberTokenType.ZERO:\n              result.push(\"0\");\n              digitState = eDigitState.DIGIT_WITH_ZERO;\n              break;\n\n            // ·(零一|零|〇)十絲 -> ·零一十絲\n            // ·(零一|零|〇)十釐 -> ·〇十釐\n            // ·(零一|零|〇)十分 -> error\n            // ·(零一|零|〇)百分 -> error\n            // 分(零一|零|〇)十絲 -> 分零一十絲\n            // 分(零一|零|〇)十毫 -> 分〇十絲\n            // 分(零一|零|〇)十釐 -> error\n            // 分(零一|零|〇)十分 -> error\n            case NumberTokenType.DECIMAL:\n            case NumberTokenType.FRAC_MULT:\n              if (multStack.total() + 1 < token.exp) {\n                result.push(\"1\");\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              } else if (multStack.total() + 1 === token.exp) {\n                result.push(\"0\");\n                digitState = eDigitState.DIGIT_WITH_ZERO;\n              } else {\n                return null;\n              }\n              break;\n\n            // 千(零一|零|〇)十 -> 千零一十\n            // 百(零一|零|〇)十 -> 百〇十\n            // 萬(零一|零|〇)萬 -> 萬零萬\n            // 百(零一|零|〇)萬 -> 百零萬\n            case NumberTokenType.INT_MULT:\n              if (token.exp == null) {\n                return null;\n              }\n\n              if (multStack.top() + 1 < token.exp) {\n                result.push(\"1\");\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              } else if (multStack.top() + 1 === token.exp) {\n                result.push(\"0\");\n                digitState = eDigitState.DIGIT_WITH_ZERO;\n              } else {\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              }\n              break;\n\n            default:\n              break;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      // determine the exponent of tail digits\n      if (multStack.state() === eMultState.NONE) {\n        switch (token.type) {\n          case NumberTokenType.INT_MULT:\n            // exponent is correct\n            break;\n\n          case NumberTokenType.DECIMAL:\n          case NumberTokenType.FRAC_MULT:\n            if (token.exp != null) {\n              result.resetExp(token.exp);\n            }\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      // determine the current exponent and update exponent stack\n      const currExp = (function() {\n        switch (token.type) {\n          case NumberTokenType.BEGIN:\n          case NumberTokenType.SIGN:\n            switch (digitState) {\n              // <BEGIN>微 -> error\n              // 負微 -> error\n              case eDigitState.MULT:\n                return null;\n\n              default:\n                multStack.markDone();\n                return multStack.total();\n            }\n\n          case NumberTokenType.DIGIT:\n          case NumberTokenType.ZERO:\n            switch (digitState) {\n              // 一又 -> 一·\n              // 零又 -> 零·\n              case eDigitState.DELIM:\n                multStack.clear();\n                multStack.push(0);\n                return multStack.total();\n\n              default:\n                return result.exp();\n            }\n\n          case NumberTokenType.DELIM:\n            switch (digitState) {\n              // 又又 -> error\n              case eDigitState.DELIM:\n                return null;\n\n              default:\n                return result.exp();\n            }\n\n          // ·...絲 -> ·\n          // 釐...絲 -> 釐\n          // ·絲 -> error\n          // 釐絲 -> error\n          case NumberTokenType.DECIMAL:\n          case NumberTokenType.FRAC_MULT:\n            if (digitState === eDigitState.MULT) {\n              return null;\n            } else {\n              multStack.clear();\n              multStack.push(token.exp);\n              return multStack.total();\n            }\n\n          case NumberTokenType.INT_MULT:\n            switch (digitState) {\n              // 百又...絲 -> 百\n              // 萬又...百萬億 -> 萬萬億\n              case eDigitState.DELIM:\n                if (multStack.state() === eMultState.FRAC) {\n                  multStack.clear();\n                  multStack.push(token.exp);\n                } else {\n                  while (!multStack.isEmpty() && multStack.top() < token.exp) {\n                    multStack.pop();\n                  }\n\n                  multStack.push(token.exp);\n                }\n                break;\n\n              // 萬...百萬億 -> 萬萬億\n              // 萬零...百萬億 -> 萬萬億\n              // 百...十絲 -> 百絲\n              // 千零...十絲 -> 千絲\n              case eDigitState.NONE:\n              case eDigitState.MULT:\n              case eDigitState.MULT_AMBIG:\n              case eDigitState.DIGIT:\n              case eDigitState.DIGIT_WITH_ZERO:\n              case eDigitState.ZERO:\n              case eDigitState.ZERO_MULT_AMBIG:\n                while (\n                  !multStack.isEmpty() &&\n                  multStack.top() < token.exp &&\n                  multStack.top() >= 0\n                ) {\n                  multStack.pop();\n                }\n\n                multStack.push(token.exp);\n                break;\n            }\n            return multStack.total();\n        }\n      })();\n      if (currExp == null) {\n        return null;\n      }\n\n      // check for overlapping decimal places\n      if (currExp < result.exp()) {\n        return null;\n      }\n\n      // check for disallowed missing decimal places\n      if (currExp > result.exp()) {\n        const check = function() {\n          if (\n            token.type === NumberTokenType.BEGIN ||\n            token.type === NumberTokenType.SIGN\n          ) {\n            return true;\n          }\n\n          if (\n            digitState === eDigitState.DELIM ||\n            digitState === eDigitState.ZERO\n          ) {\n            return true;\n          }\n\n          if (token.type === NumberTokenType.INT_MULT) {\n            return true;\n          }\n\n          if (\n            token.type === NumberTokenType.FRAC_MULT ||\n            token.type === NumberTokenType.DECIMAL\n          ) {\n            return true;\n          }\n\n          return false;\n        };\n\n        if (!check()) {\n          return null;\n        }\n\n        if (multStack.state() !== eMultState.DONE) {\n          result.fillZeros(currExp);\n        }\n      }\n\n      // push the digit, update parser state\n      switch (token.type) {\n        case NumberTokenType.BEGIN:\n          break;\n\n        case NumberTokenType.SIGN:\n          result.applySign(token.sign);\n          digitState = eDigitState.SIGN;\n          break;\n\n        case NumberTokenType.DIGIT:\n          result.push(token.digit);\n          if (\n            digitState === eDigitState.ZERO ||\n            digitState === eDigitState.DIGIT_WITH_ZERO\n          ) {\n            digitState = eDigitState.DIGIT_WITH_ZERO;\n          } else {\n            digitState = eDigitState.DIGIT;\n          }\n\n          break;\n\n        case NumberTokenType.DECIMAL:\n          digitState = eDigitState.NONE;\n          break;\n\n        case NumberTokenType.INT_MULT:\n          digitState = eDigitState.MULT_AMBIG;\n          break;\n\n        case NumberTokenType.FRAC_MULT:\n          digitState = eDigitState.MULT;\n          break;\n\n        case NumberTokenType.DELIM:\n          digitState = eDigitState.DELIM;\n          break;\n\n        case NumberTokenType.ZERO:\n          switch (digitState) {\n            case eDigitState.NONE:\n            case eDigitState.MULT:\n            case eDigitState.DIGIT:\n            case eDigitState.DELIM:\n              result.push(token.digit);\n              digitState = eDigitState.ZERO;\n              break;\n\n            case eDigitState.DIGIT_WITH_ZERO:\n            case eDigitState.ZERO:\n              result.push(token.digit);\n              digitState = eDigitState.ZERO;\n              break;\n\n            case eDigitState.MULT_AMBIG:\n              digitState = eDigitState.ZERO_MULT_AMBIG;\n              break;\n          }\n          break;\n      }\n    }\n\n    if (result.digits().length === 0) {\n      return null;\n    }\n\n    return {\n      sign: result.sign(),\n      exp: result.exp() - result.digits().length,\n      digits: result.digits()\n    };\n  }\n\n  function getDigit(result: any, exp: number) {\n    const idx = exp - result.exp;\n    if (idx >= 0 && idx < result.digits.length) {\n      return result.digits[idx];\n    } else {\n      return \"0\";\n    }\n  }\n\n  function compareMagnitude(resultA: ParseResult, resultB: ParseResult) {\n    const getMaxExp = (result: ParseResult) =>\n      result.exp + (result.digits.length - 1);\n\n    const maxExp = Math.max(getMaxExp(resultA), getMaxExp(resultB));\n    for (let i = maxExp; i >= resultA.exp || i >= resultB.exp; --i) {\n      const digitA = Number(getDigit(resultA, i));\n      const digitB = Number(getDigit(resultB, i));\n      if (digitA > digitB) {\n        return 1;\n      } else if (digitA < digitB) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  // parse\n  const tokens = tokenize(s);\n  if (tokens == null) {\n    return null;\n  }\n\n  const result = parse(tokens);\n  if (result == null) {\n    return null;\n  }\n\n  // build decimal string\n  if (!Number.isFinite(result.sign)) {\n    // infinity/NaN\n    return result.sign.toString();\n  }\n  let str = result.sign < 0 ? \"-\" : \"\";\n\n  // no fractional digits (including zero) and fits in int64?\n  const printAsInt = (function() {\n    if (result.exp < 0) {\n      return false;\n    }\n\n    const c = compareMagnitude(result, RESULT_2_TO_63);\n    return result.sign < 0 ? c <= 0 : c < 0;\n  })();\n\n  // digit range, leading and trailing zeros trimmed\n  const rend = result.digits.findIndex(x => x !== \"0\");\n  if (rend < 0) {\n    str += \"0\";\n    return str;\n  }\n  const rendExp = result.exp + rend;\n\n  let rbegin = result.digits.length;\n  while (result.digits[rbegin - 1] === \"0\") {\n    --rbegin;\n  }\n\n  const rbeginExp = result.exp + rbegin;\n\n  // compute length of fixed and scientific format\n  let expStr = \"\";\n  let printAsScientific = false;\n  if (!printAsInt) {\n    const scientificExp = result.exp + (rbegin - 1);\n    expStr =\n      (scientificExp < 0 ? \"e-\" : \"e+\") + Math.abs(scientificExp).toString();\n    const fixedLen =\n      rendExp < 0 ? Math.max(rbeginExp, 1) - rendExp + 1 : rbeginExp;\n    const scientificMagLen = rbegin - rend > 1 ? rbegin - rend + 1 : 1;\n    if (scientificMagLen + expStr.length < fixedLen) {\n      printAsScientific = true;\n    }\n  }\n\n  if (printAsScientific) {\n    str += result.digits[rbegin - 1];\n    if (rbegin - 1 > rend) {\n      str += \".\";\n      for (let i = rbegin - 1; i > rend; --i) {\n        str += result.digits[i - 1];\n      }\n    }\n    str += expStr;\n    return str;\n  } else {\n    for (let i = Math.max(rbeginExp, 1); i > 0; --i) {\n      str += getDigit(result, i - 1);\n    }\n\n    if (rendExp < 0) {\n      str += \".\";\n      for (let i = 0; i > rendExp; --i) {\n        str += getDigit(result, i - 1);\n      }\n    }\n    return str;\n  }\n}\n\nexport function hanzi2num(s: string): number {\n  const str = hanzi2numstr(s);\n  if (str == null) {\n    return NaN;\n  } else {\n    return Number(str);\n  }\n}\n\nexport function num2hanzi(\n  n: number,\n  format = \"\",\n  precision = undefined\n): string {\n  if (!Number.isFinite(n)) {\n    if (n === Infinity) {\n      return INF_WORD;\n    } else if (n === -Infinity) {\n      return NEG_WORD + INF_WORD;\n    } else {\n      return NAN_WORD;\n    }\n  }\n\n  // the same format as hanzi2numstr.parse\n  function parseNumStr(str: string): ParseResult {\n    function myIndexOf(str: string, val: string) {\n      const idx = str.indexOf(val);\n      return idx < 0 ? str.length : idx;\n    }\n    const sign = str.charAt(0) === \"-\" ? -1 : 1;\n    const digitIndex = \"+-\".includes(str.charAt(0)) ? 1 : 0;\n    const expIndex = myIndexOf(str, \"e\");\n    const scientificExp =\n      expIndex === str.length ? 0 : Number(str.substring(expIndex + 1));\n    const decimalIndex = myIndexOf(str.substring(0, expIndex), \".\");\n    const intStr = str.substring(digitIndex, decimalIndex);\n    const intDigits = intStr.split(\"\").reverse() as Digit[];\n    const fracStr = str.substring(\n      Math.min(decimalIndex + 1, expIndex),\n      expIndex\n    );\n    const fracDigits = fracStr.split(\"\").reverse() as Digit[];\n    return {\n      sign,\n      exp: scientificExp - fracDigits.length,\n      digits: fracDigits.concat(intDigits)\n    };\n  }\n\n  // reserved for future extension\n  const chineseFormat = \"readout\";\n  const multWords = MULT_WORDS[chineseFormat];\n  const digitWords = DIGIT_WORDS[chineseFormat];\n  const decimalWord = DECIMAL_WORD[chineseFormat];\n\n  let numStr = precision === undefined ? n.toString() : n.toFixed(precision);\n  let result = parseNumStr(numStr);\n  let signStr = result.sign < 0 ? NEG_WORD : \"\";\n  let rend = result.digits.findIndex(x => x !== \"0\");\n  if (rend < 0) {\n    return signStr + digitWords[\"0\"];\n  }\n\n  let rbegin = result.digits.length;\n  while (result.digits[rbegin - 1] === \"0\") {\n    --rbegin;\n  }\n\n  // is this beyond the lowest fractional unit we can represent?\n  const minMultExp = multWords[multWords.length - 1].exp;\n  if (result.exp + rend < minMultExp) {\n    // cap to lowest fractional unit and retry\n    numStr = n.toFixed(-minMultExp);\n    result = parseNumStr(numStr);\n    signStr = result.sign < 0 ? NEG_WORD : \"\";\n    rend = result.digits.findIndex(x => x !== \"0\");\n    if (rend < 0) {\n      return signStr + digitWords[\"0\"];\n    }\n\n    rbegin = result.digits.length;\n    while (result.digits[rbegin - 1] === \"0\") {\n      --rbegin;\n    }\n  }\n\n  // convert digits to readout format\n  let str = signStr;\n  let pendingZero = false;\n  let i = rbegin;\n  const intToReadout = function(expBias = 0) {\n    let hasOutput = false;\n    while (i !== rend) {\n      const mult = multWords.find(x => x.exp + expBias <= result.exp + (i - 1));\n      if (mult === undefined || mult.exp < 0) {\n        // done with int part\n        break;\n      } else if (mult.exp > 0) {\n        // needs higher multiplier\n        if (intToReadout(expBias + mult.exp)) {\n          // 零 is omitted here (100 0000 -> 一百萬)\n          pendingZero = false;\n          // write the multiplier\n          str += mult.str;\n          hasOutput = true;\n        }\n      } else if (mult.exp === 0) {\n        if (result.digits[i - 1] !== \"0\") {\n          // insert 零 if necessary\n          if (pendingZero) {\n            str += digitWords[\"0\"];\n            pendingZero = false;\n          }\n          // write the digit\n          str += digitWords[result.digits[i - 1]];\n          hasOutput = true;\n        } else {\n          // mark that there are zero(s) not written yet\n          // 零 will be added later if necessary\n          pendingZero = true;\n        }\n        --i;\n        break;\n      }\n    }\n    return hasOutput;\n  };\n  const fracToReadout = function() {\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (i !== rend) {\n      const mult = multWords.find(x => x.exp <= result.exp + (i - 1));\n      if (mult === undefined) {\n        break;\n      }\n\n      if (intToReadout(mult.exp)) {\n        str += mult.str;\n        pendingZero = false;\n      }\n    }\n  };\n\n  const hasInt = intToReadout();\n  pendingZero = false;\n  if (i !== rend) {\n    if (hasInt) {\n      str += decimalWord;\n    }\n\n    // avoid 又零\n    while (i !== rend && result.digits[i - 1] === \"0\") {\n      --i;\n    }\n\n    fracToReadout();\n  }\n  return str;\n}\n\nexport function bool2hanzi(b: boolean): string {\n  return b ? \"陽\" : \"陰\";\n}\n","import { RomanizeSystem } from \"../types\";\nimport pinyin from \"./hanzi2roman-map-pinyin.json\";\nimport baxter from \"./hanzi2roman-map-baxter.json\";\n\nexport function hanzi2unicodeEntry(s: string) {\n  var y = \"\";\n  for (var c of s) {\n    y += \"U\";\n    y += c\n      .charCodeAt(0)\n      .toString(16)\n      .toUpperCase();\n  }\n  return y;\n}\n\nexport function hanzi2pinyin(a: string, system: RomanizeSystem = \"pinyin\") {\n  if (system === \"unicode\") return hanzi2unicodeEntry(a);\n\n  var tab = { pinyin, baxter }[system];\n  var s = \"\";\n  for (const x of a) {\n    var key = x\n      .charCodeAt(0)\n      .toString(16)\n      .toUpperCase();\n    var r = tab[key];\n    if (r == undefined) {\n      r = \"_\";\n    }\n    s += r.split(\" \")[0];\n  }\n  return s;\n}\n","import { MarcoOptions, MacroDefinition } from \"./types\";\nimport { bundleImports } from \"./reader\";\nimport { match } from \"./utils\";\n\nexport function extractMacros(src: string, options: MarcoOptions) {\n  const { lib, lang, importOptions } = options;\n\n  function getImports(): string[] {\n    var imports = [];\n    var qlvl = 0;\n    for (var i = 0; i < src.length; i++) {\n      if (src[i] == \"「\") {\n        qlvl++;\n      } else if (src[i] == \"」\") {\n        qlvl--;\n      } else if (src[i] == \"『\") {\n        qlvl += 2;\n      } else if (src[i] == \"』\") {\n        qlvl -= 2;\n      }\n      if (qlvl != 0) {\n        continue;\n      }\n      if (match(src, i, \"吾嘗觀\")) {\n        var imp = src\n          .slice(i + 3)\n          .split(\"之書\")[0]\n          .split(\"中\")\n          .map(x => x.replace(/[「」『』]/g, \"\"))\n          .join(\"/\");\n        imports.push(imp);\n      }\n    }\n    return imports;\n  }\n  function getMacros() {\n    var macros: MacroDefinition[] = [];\n    var qlvl = 0;\n    for (var i = 0; i < src.length; i++) {\n      if (src[i] == \"「\") {\n        qlvl++;\n      } else if (src[i] == \"」\") {\n        qlvl--;\n      } else if (src[i] == \"『\") {\n        qlvl += 2;\n      } else if (src[i] == \"』\") {\n        qlvl -= 2;\n      }\n      if (qlvl != 0) {\n        continue;\n      }\n      if (src[i] == \"或\" && src[i + 1] == \"云\") {\n        const grabLit = () => {\n          var lvl = 0;\n          var s = \"\";\n          while (true) {\n            if (src[j] == \"「\") {\n              lvl++;\n            } else if (src[j] == \"」\") {\n              lvl--;\n            } else if (src[j] == \"『\") {\n              lvl += 2;\n            } else if (src[j] == \"』\") {\n              lvl -= 2;\n            }\n            s += src[j];\n            j++;\n            if (lvl == 0) {\n              break;\n            }\n            if (j >= src.length) {\n              return s;\n            }\n          }\n          return s;\n        };\n        var j = i + 2;\n        var s0 = grabLit();\n        while (!(src[j] == \"蓋\" && src[j + 1] == \"謂\")) {\n          j++;\n          if (j >= src.length) {\n            return macros;\n          }\n        }\n        j += 2;\n        var s1 = grabLit();\n\n        const stripQuotes = s => {\n          if (s[0] == \"「\") {\n            s = s.slice(2);\n          } else {\n            s = s.slice(1);\n          }\n          if (s[s.length - 1] == \"」\") {\n            s = s.slice(0, -2);\n          } else {\n            s = s.slice(0, -1);\n          }\n          return s;\n        };\n        s0 = stripQuotes(s0);\n        s1 = stripQuotes(s1);\n        var ins = s0.match(/「[甲乙丙丁戊己庚辛壬癸]」/g);\n        var ous = s1.match(/「[甲乙丙丁戊己庚辛壬癸]」/g);\n\n        if (ins !== null && ous !== null) {\n          for (var k = 0; k < ous.length; k++) {\n            var ii = ins.indexOf(ous[k]);\n            if (ii >= 0) {\n              s1 = s1.replace(new RegExp(ous[k], \"g\"), `\\$${ii + 1}`);\n            }\n          }\n        }\n        s0 = s0.replace(/「[甲乙丙丁戊己庚辛壬癸]」/g, \"(.+?)\");\n        macros.push([s0, s1]);\n        i = j;\n      }\n    }\n    return macros;\n  }\n  const imports = getImports();\n  const macros = getMacros();\n\n  bundleImports(imports, { lib, lang }, importOptions).forEach(\n    ({ src, entry }) => {\n      const moduleMacros = extractMacros(src, {\n        ...options,\n        importOptions: {\n          ...importOptions,\n          entryFilepath: entry\n        }\n      });\n      macros.push(...moduleMacros);\n    }\n  );\n\n  return macros;\n}\n\nfunction calcBracketStarts(src: string) {\n  const starts: number[] = [];\n  let level = 0;\n  for (var i = 0; i < src.length; i++) {\n    let c = src[i];\n    if (c == \"「\") {\n      level++;\n    } else if (c == \"」\") {\n      level--;\n    } else if (c == \"『\") {\n      level += 2;\n    } else if (c == \"』\") {\n      level -= 2;\n    }\n    if (level > 0) starts.push(i);\n  }\n  return starts;\n}\n\nexport function expandMacros(src: string, macros: MacroDefinition[]) {\n  for (const [from, to] of macros) {\n    let re = new RegExp(from);\n    const expand = ntxt => {\n      let starts = calcBracketStarts(ntxt);\n      let idx = ntxt.search(re);\n      if (idx == -1) {\n        return ntxt;\n      }\n      if (starts.includes(idx)) {\n        // console.log(\"refused to expand macro inside string\")\n        let nxtend = idx + 1;\n        while (starts.includes(nxtend) && nxtend < starts.length) {\n          nxtend++;\n        }\n        nxtend++;\n        ntxt = ntxt.slice(0, nxtend) + expand(ntxt.slice(nxtend));\n      } else {\n        ntxt = expand(ntxt.replace(re, to));\n      }\n      return ntxt;\n    };\n    src = expand(src);\n  }\n  return src;\n}\n","const { version }: { version: string } = require(\"../package.json\");\n\nexport { version };\n","import { TokenType } from \"./types\";\n\nexport const NUMBER_KEYWORDS = Array.from(\n  \"負·又零〇一二三四五六七八九十百千萬億兆京垓秭穰溝澗正載極分釐毫絲忽微纖沙塵埃渺漠\"\n);\n\nexport const KEYWORDS_DEFINE: Record<\n  string,\n  [TokenType, string | undefined]\n> = {\n  吾有: [\"decl\", \"uninit\"],\n  今有: [\"decl\", \"public\"],\n  物之: [\"decl\", \"prop\"],\n  有: [\"decl\", \"init\"],\n  數: [\"type\", \"num\"],\n  列: [\"type\", \"arr\"],\n  言: [\"type\", \"str\"],\n  術: [\"type\", \"fun\"],\n  爻: [\"type\", \"bol\"],\n  物: [\"type\", \"obj\"],\n  元: [\"type\", \"any\"],\n  書之: [\"print\", undefined],\n  名之曰: [\"name\", undefined],\n  施: [\"call\", \"r\"],\n  以施: [\"call\", \"l\"],\n  曰: [\"assgn\", undefined],\n  噫: [\"discard\", undefined],\n  取: [\"take\", undefined],\n\n  昔之: [\"rassgn\", \"a\"],\n  今: [\"rassgn\", \"b\"],\n  是矣: [\"rassgn\", \"c\"],\n  不復存矣: [\"rassgn\", \"delete\"],\n  其: [\"ans\", undefined],\n\n  乃得: [\"ctrl\", \"ret\"],\n  乃得矣: [\"ctrl\", \"retprev\"],\n  乃歸空無: [\"ctrl\", \"retvoid\"],\n  是謂: [\"ctrl\", \"bigend\"],\n  之術也: [\"ctrl\", \"funend\"],\n  必先得: [\"ctrl\", \"funarg\"],\n  是術曰: [\"ctrl\", \"funbody\"],\n  乃行是術曰: [\"ctrl\", \"funbody\"],\n  欲行是術: [\"ctrl\", \"funstart\"],\n  也: [\"ctrl\", \"end\"],\n  云云: [\"ctrl\", \"end\"],\n  凡: [\"ctrl\", \"for\"],\n  中之: [\"ctrl\", \"forin\"],\n  恆為是: [\"ctrl\", \"whiletrue\"],\n  為是: [\"ctrl\", \"whilen0\"],\n  遍: [\"ctrl\", \"whilen1\"],\n  乃止: [\"ctrl\", \"break\"],\n  乃止是遍: [\"ctrl\", \"continue\"],\n\n  若非: [\"ctrl\", \"else\"],\n  若: [\"ctrl\", \"if\"],\n  者: [\"ctrl\", \"conj\"],\n  若其然者: [\"ctrl\", \"iftrue\"],\n  若其不然者: [\"ctrl\", \"iffalse\"],\n  或若: [\"ctrl\", \"elseif\"],\n\n  其物如是: [\"ctrl\", \"objbody\"],\n  之物也: [\"ctrl\", \"objend\"],\n\n  夫: [\"expr\", undefined],\n\n  等於: [\"cmp\", \"==\"],\n  不等於: [\"cmp\", \"!=\"],\n  不大於: [\"cmp\", \"<=\"],\n  不小於: [\"cmp\", \">=\"],\n  大於: [\"cmp\", \">\"],\n  小於: [\"cmp\", \"<\"],\n\n  加: [\"op\", \"+\"],\n  減: [\"op\", \"-\"],\n  乘: [\"op\", \"*\"],\n  除: [\"op\", \"/\"],\n  中有陽乎: [\"lop\", \"||\"],\n  中無陰乎: [\"lop\", \"&&\"],\n  變: [\"not\", undefined],\n  所餘幾何: [\"mod\", undefined],\n\n  以: [\"opord\", \"l\"],\n  於: [\"opord\", \"r\"],\n\n  之長: [\"ctnr\", \"len\"],\n  之: [\"ctnr\", \"subs\"],\n  充: [\"ctnr\", \"push\"],\n  銜: [\"ctnr\", \"cat\"],\n  其餘: [\"ctnr\", \"rest\"],\n\n  陰: [\"bool\", \"false\"],\n  陽: [\"bool\", \"true\"],\n\n  吾嘗觀: [\"import\", \"file\"],\n  中: [\"import\", \"in\"],\n  之書: [\"import\", \"fileend\"],\n  方悟: [\"import\", \"iden\"],\n  之義: [\"import\", \"idenend\"],\n\n  嗚呼: [\"throw\", \"a\"],\n  之禍: [\"throw\", \"b\"],\n  姑妄行此: [\"try\", \"try\"],\n  如事不諧: [\"try\", \"catch\"],\n  豈: [\"try\", \"catcherr0\"],\n  之禍歟: [\"try\", \"catcherr1\"],\n  不知何禍歟: [\"try\", \"catchall\"],\n  乃作罷: [\"try\", \"end\"],\n\n  或云: [\"macro\", \"from\"],\n  蓋謂: [\"macro\", \"to\"],\n\n  注曰: [\"comment\", undefined],\n  疏曰: [\"comment\", undefined],\n  批曰: [\"comment\", undefined]\n};\n\nvar ke = Object.entries(KEYWORDS_DEFINE);\nke.sort((a, b) => b[0].length - a[0].length);\nif (!Object.fromEntries) {\n  Object.fromEntries = l => {\n    var o = {};\n    l.map(x => (o[x[0]] = x[1]));\n    return o;\n  };\n}\n\nexport const KEYWORDS = Object.fromEntries(ke);\n","import { StandardLibraryObject } from \"./types\";\n\nfunction loadStdlib() {\n  const STDLIB = {};\n\n  try {\n    const raw = require.context(\"../lib\", true, /.*\\.wy$/);\n\n    raw.keys().forEach(key => {\n      const parts = key.slice(2, -3).split(\"/\");\n      const data = raw(key).default;\n      let sublib = STDLIB;\n      for (const part of parts.slice(0, -1)) {\n        if (!sublib[part]) sublib[part] = {};\n        sublib = sublib[part];\n      }\n      sublib[parts[parts.length - 1]] = data;\n    });\n  } catch (e) {} // ignore \"require.context\" error for testing\n\n  return STDLIB as StandardLibraryObject;\n}\n\nexport const STDLIB = loadStdlib();\n","var map = {\n\t\"./js/位經.wy\": 15,\n\t\"./js/格物.wy\": 16,\n\t\"./js/畫譜.wy\": 17,\n\t\"./js/西曆法.wy\": 18,\n\t\"./py/位經.wy\": 19,\n\t\"./py/西曆法.wy\": 20,\n\t\"./列經.wy\": 21,\n\t\"./易經.wy\": 22,\n\t\"./曆法.wy\": 23,\n\t\"./曆表.wy\": 24,\n\t\"./渾沌經.wy\": 25,\n\t\"./算經.wy\": 26,\n\t\"./籌經.wy\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","export default \"疏曰「「左移。同犀之x<<y也。」」\\n今有一術。名之曰「左移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x<<y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「左移」之術也。\\n\\n疏曰「「右移。同犀之x>>y也。」」\\n今有一術。名之曰「右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x>>y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「右移」之術也。\\n\\n疏曰「「補零右移。同犀之x>>>y也。」」\\n今有一術。名之曰「補零右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x>>>y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「補零右移」之術也。\\n\\n疏曰「「位與。同犀之x&y也。」」\\n今有一術。名之曰「位與」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x&y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位与」之術也。\\n\\n疏曰「「位或。同犀之x|y也。」」\\n今有一術。名之曰「位或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x|y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位或」之術也。\\n\\n疏曰「「異或。同犀之x^y也。」」\\n今有一術。名之曰「異或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(x^y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「异或」之術也。\\n\\n疏曰「「與非。同犀之~(x&y)也。」」\\n今有一術。名之曰「與非」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(x=>y=>(~(x&y)))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「与非」之術也。\\n\\n疏曰「「位變。同犀之~x也。」」\\n今有一術。名之曰「位變」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「(x=>(~x))」於「甲」。名之曰「乙」。乃得「乙」。\\n是謂「位變」之術也。\\n\";","export default \"\\n今有一術。名之曰「取物」。欲行是術。必先得一物曰「物」。一言曰「端」。乃行是術曰。\\n\\t施「(obj=>x=>obj[x])」於「物」於「端」。乃得矣。\\n是謂「取物」之術也。\\n\\n今有一術。名之曰「置物」。欲行是術。必先得一物曰「物」。一言曰「端」。一元曰「實」。乃行是術曰。\\n\\t施「(obj=>x=>v=>{obj[x]=v})」於「物」於「端」於「實」。\\n是謂「置物」之術也。\\n\\n今有一術。名之曰「列物之端」。欲行是術。必先得一物曰「物」。乃行是術曰。\\n\\t施「Object.keys」於「物」乃得矣。\\n是謂「列物之端」之術也。\\n\\n今有一術。名之曰「識類」。欲行是術。必先得一元曰「元」。乃行是術曰。\\n\\t施「(x=>((x instanceof Array)?\\\"列\\\":({\\\"number\\\":\\\"數\\\",\\\"boolean\\\":\\\"爻\\\",\\\"string\\\":\\\"言\\\",\\\"function\\\":\\\"術\\\",\\\"object\\\":\\\"物\\\"}[(typeof x)])))」於「元」乃得矣。\\n是謂「識類」之術也。\\n\";","export default \"吾有一列。名之曰「色表」。充「色表」\\n以「「黑」」。\\t以「「#000000」」。\\n以「「鈦白」」。\\t以「「#ffffff」」。\\n以「「藤黃」」。\\t以「「#faea56」」。\\n以「「硃磦」」。\\t以「「#d44906」」。\\n以「「硃砂」」。\\t以「「#c0927b」」。\\n以「「胭脂」」。\\t以「「#491817」」。\\n以「「曙紅」」。\\t以「「#c72c35」」。\\n以「「赭石」」。\\t以「「#522d14」」。\\n以「「大紅」」。\\t以「「#b91c1b」」。\\n以「「花青」」。\\t以「「#141931」」。\\n以「「三綠」」。\\t以「「#afceb5」」。\\n以「「酞青藍」」。\\t以「「#1e2867」」。\\n以「「三青」」。\\t以「「#acc8d4」」。\\n\\n\\n今有一術。名之曰「備紙」。欲行是術。必先得二數。曰「寬」。曰「高」。乃行是術曰。\\n\\t施「document.createElement」於「「canvas」」。名之曰「canv」。\\n\\t施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t昔之「canv」之「「width」」者。今「寬」是矣。\\n\\t昔之「canv」之「「height」」者。今「高」是矣。\\n\\t昔之「ctx.lineJoin」者。今「「round」」是矣。\\n\\t昔之「ctx.lineCap」者。今「「round」」是矣。\\n\\t乃得「canv」。\\n是謂「備紙」之術也。\\n\\n今有一術。名之曰「裱畫」。欲行是術。必先得一物。曰「紙」。一言。曰「壁」。乃行是術曰。\\n\\t施「document.getElementById」於「壁」。名之曰「div」。\\n\\t施「div.appendChild」於「紙」。\\n是謂「裱畫」之術也。\\n\\n\\n今有一術。名之曰「落筆」。欲行是術。必先得一物。曰「紙」。二數。曰「東」曰「南」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「ctx.beginPath」。\\n\\t施「(x=>y=>ctx.moveTo(x,y))」於「東」於「南」。\\n是謂「落筆」之術也。\\n\\n今有一術。名之曰「運筆」。欲行是術。必先得一物。曰「紙」。二數。曰「東」曰「南」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「(x=>y=>ctx.lineTo(x,y))」於「東」於「南」。\\n是謂「運筆」之術也。\\n\\n今有一術。名之曰「蘸色」。欲行是術。必先得一物。曰「紙」。一數。曰「色」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t吾有一言。名之曰「十六進制色」。\\n\\t有數一。名之曰「戊」。恆為是。若「戊」大於「色表」之長者乃止也。\\n\\t\\t若「色表」之「戊」等於「色」者。\\n\\t\\t\\t加「戊」以一。名之曰「色數」。\\n\\t\\t\\t夫「色表」之「色數」者。昔之「十六進制色」者。今其是矣。\\n\\t\\t\\t乃止。\\n\\t\\t云云。\\n\\t加二以「戊」。昔之「戊」者。今其是矣。云云。\\n\\t昔之「ctx.strokeStyle」者。今「十六進制色」是矣。\\n\\t昔之「ctx.fillStyle」者。今「十六進制色」是矣。\\n是謂「蘸色」之術也。\\n\\n今有一術。名之曰「擇筆」。欲行是術。必先得一物。曰「紙」。一數。曰「號」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t昔之「ctx.lineWidth」者。今「號」是矣。\\n是謂「擇筆」之術也。\\n\\n今有一術。名之曰「提筆」。欲行是術。必先得一物。曰「紙」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「ctx.stroke」。\\n是謂「提筆」之術也。\\n\\n今有一術。名之曰「設色」。欲行是術。必先得一物。曰「紙」。乃行是術曰。\\n\\t有物「紙」。名之曰「canv」。施「canv.getContext」於「「2d」」。名之曰「ctx」。\\n\\t施「ctx.fill」。\\n是謂「設色」之術也。\";","export default \"今有一術。名之曰「紀元時」。是術曰。\\n\\t施「(()=>new Date().getTime()/1000)」。乃得矣。\\n是謂「紀元時」之術也。\\n\\n今有一術。名之曰「時差」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「(x => 0 - new Date(x * 1000).getTimezoneOffset() * 60)」於「時」。乃得矣。\\n是謂「時差」之術也。\\n\";","export default \"今有一術。名之曰「左移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t吾有一術。名之曰\\n\\t施「(lambda x: lambda y : x<<y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「左移」之術也。\\n\\n今有一術。名之曰「右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x>>y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「右移」之術也。\\n\\n今有一術。名之曰「補零右移」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : return (x % 0x100000000) >> y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「補零右移」之術也。\\n\\n今有一術。名之曰「位与」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x&y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位与」之術也。\\n\\n今有一術。名之曰「位或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x|y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「位或」之術也。\\n\\n今有一術。名之曰「异或」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : x^y)」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「异或」之術也。\\n\\n今有一術。名之曰「与非」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t施「(lambda x: lambda y : ~(x&y))」於「甲」。於「乙」。名之曰「丙」。乃得「丙」。\\n是謂「与非」之術也。\\n\\n今有一術。名之曰「位變」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「(lambda x: ~x」於「甲」。名之曰「乙」。乃得「乙」。\\n是謂「位變」之術也。\\n\";","export default \"\\n今有一術。名之曰「紀元時」。是術曰。\\n\\t施「__import__」於「「time」」。名之曰「time」。\\n\\t施「time.time」。乃得矣。\\n是謂「紀元時」之術也。\\n\\n今有一術。名之曰「時差」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「__import__」於「「time」」。名之曰「time」。\\n\\t施「(lambda x: time.localtime(x).tm_gmtoff)」於「時」。乃得矣。\\n是謂「時差」之術也。\\n\";","export default \"或云「「凡「甲」皆「乙」其上者」」。\\n蓋謂「「施「遍施」於「乙」於「甲」」」\\n\\n或云「「唯「甲」中得「乙」者」」\\n蓋謂「「施「篩剔」於「乙」於「甲」」」\\n\\n或云「「併「甲」於「乙」以「丙」者」」\\n蓋謂「「施「左併」於「丙」於「乙」於「甲」」」\\n\\n注曰「「遍施。同Javascript之Array.forEach也。」」\\n今有一術。名之曰「遍施」。欲行是術。必先得一術。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\t吾有一列。名之曰「丙」。\\n\\t凡「乙」中之「丁」。\\n\\t\\t施「甲」於「丁」。充「丙」以其也。\\n\\t乃得「丙」。\\n是謂「遍施」之術也。\\n\\n注曰「「篩剔。同Javascript之Array.filter也。」」\\n今有一術。名之曰「篩剔」。欲行是術。必先得一術。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\t吾有一列。名之曰「丙」。\\n\\t凡「乙」中之「丁」。\\n\\t\\t施「甲」於「丁」。\\n\\t\\t若其者。充「丙」以「丁」也。\\n\\t云云。\\n\\t乃得「丙」。\\n是謂「篩剔」之術也。\\n\\n今有一術。名之曰「左併」。欲行是術。必先得一術。曰「甲」。一元。曰「乙」。一列。曰「丙」。乃行是術曰。\\n\\t吾有一元曰「乙」。名之曰「丁」。\\n\\t凡「丙」中之「戊」。\\n\\t\\t施「甲」於「丁」於「戊」。\\n\\t\\t昔之「丁」者。今其是矣。\\n\\t云云。\\n\\t乃得「丁」。\\n是謂「左併」之術也。\\n\\n\\n今有一術。名之曰「右併」。欲行是術。必先得一術。曰「甲」。一元。曰「乙」。一列。曰「丙」。乃行是術曰。\\n\\t吾有一元曰「乙」。名之曰「丁」。\\n\\t夫「丙」之長。名之曰「戊」。\\n\\t恆為是。若「戊」小於一者乃止也。\\n\\t\\t夫「丙」之「戊」。夫「丁」。取二以施「甲」。\\n\\t\\t昔之「丁」者。今其是矣。\\n\\t減「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「丁」。\\n是謂「右併」之術也。\\n\\n注曰「「排序。同Javascript之Array.sort也。」」\\n今有一術。名之曰「排序」。欲行是術。必先得一術。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\n\\t若「乙」之長不大於一者。乃得「乙」也。\\n\\t吾有三列。名之曰「首」。曰「頷」。曰「尾」。\\n\\n\\t夫「乙」之一。名之曰「乙一」。\\n\\t充「頷」以「乙一」。\\n\\t夫「乙」之其餘。名之曰「乙餘」。\\n\\n\\t凡「乙餘」中之「丁」。\\n\\t\\t施「甲」於「丁」於「乙一」。\\n\\t\\t若其小於零者。\\n\\t\\t\\t充「首」以「丁」。\\n\\t\\t若非。\\n\\t\\t\\t充「尾」以「丁」\\n\\t\\t也。\\n\\t云云。\\n\\t施「排序」於「甲」於「首」。昔之「首」者。今其是矣。\\n\\t施「排序」於「甲」於「尾」。昔之「尾」者。今其是矣。\\n\\n\\t銜「首」以「頷」以「尾」。名之曰「丙」。\\n\\t乃得「丙」。\\n\\n是謂「排序」之術也。\\n\\n注曰「「倒序。同Javascript之Array.reverse也。」」\\n今有一術。名之曰「倒序」。欲行是術。必先得一列。曰「甲」。乃行是術曰。\\n\\t吾有一列。名之曰「乙」。\\n\\t夫「甲」之長。名之曰「戊」。\\n\\t恆為是。若「戊」小於一者乃止也。\\n\\t\\t夫「甲」之「戊」。充「乙」以其。\\n\\t減「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「乙」。\\n是謂「倒序」之術也。\\n\\n注曰「「擷取。同Javascript之Array.slice也。」」\\n今有一術。名之曰「擷取」。欲行是術。必先得一列。曰「甲」。二數。曰「乙」曰「丙」。乃行是術曰。\\n\\t吾有一列。名之曰「丁」。\\n\\t吾有一數。曰「乙」。名之曰「戊」。\\n\\t若「丙」小於零者。夫「甲」之長。加其以「丙」。昔之「丙」者。今其是矣。云云。\\n\\n\\t恆為是。若「戊」大於「丙」者乃止也。\\n\\t\\t夫「甲」之「戊」。充「丁」以其。\\n\\t加「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「丁」。\\n是謂「擷取」之術也。\\n\\n\\n今有一術。名之曰「製列」。欲行是術。必先得一數。曰「甲」。一術。曰「乙」。一列。曰「丙」。乃行是術曰。\\n\\t吾有一列。名之曰「丁」。\\n\\t吾有一數曰一。名之曰「戊」。\\n\\n\\t恆為是。若「戊」大於「甲」者乃止也。\\n\\t\\t施「乙」於「戊」。充「丁」以其。\\n\\t加「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得「丁」。\\n是謂「製列」之術也。\\n\\n\\n今有一術。名之曰「索一」。欲行是術。必先得一列。曰「甲」。一元。曰「乙」。乃行是術曰。\\n\\t吾有一數曰一。名之曰「戊」。\\n\\t恆為是。若「戊」大於「甲」之長者乃止也。\\n\\t\\t若「乙」等於「甲」之「戊」者。乃得「戊」也。\\n\\t加「戊」以一。昔之「戊」者。今其是矣。云云。\\n\\t乃得負一。\\n是謂「索一」之術也。\\n\\n\\n\\n\";","export default \"吾有一數。曰四十二。名之曰「運數」。\\n\\n今有一術。名之曰「運」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「運者。隨機種子也」」\\n\\t昔之「運數」者。今「甲」是矣。\\n是謂「運」之術也。\\n\\n今有一術。名之曰「占」。是術曰。\\n\\t注曰「「線性同餘方法所得隨機數也」」\\n\\t有數四十二億九千四百九十六萬七千二百九十六。名之曰「模」。\\n\\t注曰「「有數二千二百六十九萬五千四百七十七。名之曰「倍」。」」\\n\\t有數二千二百六十七萬五千四百五十六。名之曰「上倍」。有數二萬零二十一。名之曰「下倍」。\\n\\t有數一。名之曰「增」。\\n\\t乘「上倍」於「運數」。除其以「模」。所餘幾何。名之曰「上餘」。\\n\\t乘「下倍」於「運數」。加其於「上餘」。加其以「增」。除其以「模」。所餘幾何。昔之「運數」者。今其是矣。\\n\\t除「運數」以「模」。名之曰「卦」。\\n\\t乃得「卦」。\\n是謂「占」之術也。\\n\";","export default \"吾嘗觀「「西曆法」」之書。方悟「紀元時」「時差」之義。\\n吾嘗觀「「曆表」」之書。方悟「始曆月」「曆月表」「始閏月」「閏月表」之義。\\n吾嘗觀「「算經」」之書。方悟「取底除」「取整除」「取底」「取頂」「取整」之義。\\n\\n注曰「「今之年月日時刻者。當以紀元時(Unix timestamp)推算之。」」\\n疏曰「「格林威治平時西曆一九七〇年一月一日木曜日〇時即西元一九六九年己酉年十一月二十四日辛巳日子正起所積秒數也。」」\\n疏曰「「日八萬六千四百秒。」」\\n\\n注曰「「今何紀元時。同Javascript之Date.now() / 1000也。」」\\n今有一術。名之曰「今何紀元時」。是術曰。\\n\\t施「紀元時」。乃得矣。\\n是謂「今何紀元時」之術也。\\n\\n注曰「「言今之日時。同Javascript之new Date().toString(), in Chinese calendar也。」」\\n今有一術。名之曰「言今之日時」。是術曰。\\n\\t施「紀元時」。取一以施「言彼之日時」。乃得矣。\\n是謂「言今之日時」之術也。\\n\\n注曰「「言今之年月日。同Javascript之new Date().toDateString(), in Chinese calendar也。」」\\n今有一術。名之曰「言今之年月日」。是術曰。\\n\\t施「紀元時」。取一以施「言彼之年月日」。乃得矣。\\n是謂「言今之年月日」之術也。\\n\\n注曰「「言今之時刻。同Javascript之new Date().toTimeString(), in Chinese calendar也。」」\\n今有一術。名之曰「言今之時刻」。是術曰。\\n\\t施「紀元時」。取一以施「言彼之時刻」。乃得矣。\\n是謂「言今之時刻」之術也。\\n\\n注曰「「今年何年號。同Javascript之\\\"西元\\\" for modern dates也。」」\\n今有一術。名之曰「今年何年號」。是術曰。\\n\\t施「紀元時」。取一以施「彼年何年號」。乃得矣。\\n是謂「今年何年號」之術也。\\n\\n注曰「「今年何年。同Javascript之new Date().getFullYear() for modern dates, in Chinese calendar也。」」\\n今有一術。名之曰「今年何年」。是術曰。\\n\\t注曰「「年者。或以西元。或以帝王年號紀之。」」\\n\\t施「紀元時」。取一以施「彼年何年」。乃得矣。\\n是謂「今年何年」之術也。\\n\\n注曰「「今年何干支。同Javascript之Get index (1 to 60) of this year in the 60-year cycle也。」」\\n今有一術。名之曰「今年何干支」。是術曰。\\n\\t注曰「「甲子得一。乙丑得二。乃至癸亥得六十也。」」\\n\\t施「紀元時」。取一以施「彼年何干支」。乃得矣。\\n是謂「今年何干支」之術也。\\n\\n注曰「「今年積何年。同Javascript之new Date().getFullYear() + 2697, in Chinese calendar也。」」\\n今有一術。名之曰「今年積何年」。是術曰。\\n\\t注曰「「米制公約訂立年積四千五百七十二年。」」\\n\\t注曰「「紀元年積四千六百六十六年。」」\\n\\t施「紀元時」。取一以施「彼年積何年」。乃得矣。\\n是謂「今年積何年」之術也。\\n\\n注曰「「今月何月。同Javascript之new Date().getMonth() + 1, N + 0.5 for leap months, in Chinese calendar也。」」\\n今有一術。名之曰「今月何月」。是術曰。\\n\\t注曰「「月者。正月至臘月也。」」\\n\\t注曰「「正月得一。二月得二。乃至十二月得十二也。閏月者。加半於前月數。」」\\n\\t施「紀元時」。取一以施「彼月何月」。乃得矣。\\n是謂「今月何月」之術也。\\n\\n注曰「「今月積何月。同Javascript之Get continuously counting month number of this month也。」」\\n今有一術。名之曰「今月積何月」。是術曰。\\n\\t注曰「「米制公約訂立月積五萬六千五百五十一月。」」\\n\\t注曰「「紀元月積五萬七千七百二十一月。」」\\n\\t施「紀元時」。取一以施「彼月積何月」。乃得矣。\\n是謂「今月積何月」之術也。\\n\\n注曰「「今日何日。同Javascript之new Date().getDate(), in Chinese calendar也。」」\\n今有一術。名之曰「今日何日」。是術曰。\\n\\t批曰「「古有越人歌。曰。今日何日兮，得與王子同舟。」」\\n\\t注曰「「初一日得一。初二日得二。乃至三十日得三十也。」」\\n\\t施「紀元時」。取一以施「彼日何日」。乃得矣。\\n是謂「今日何日」之術也。\\n\\n注曰「「今日何干支。同Javascript之Get index (1 to 60) of today in the 60-day cycle也。」」\\n今有一術。名之曰「今日何干支」。是術曰。\\n\\t注曰「「甲子得一。乙丑得二。乃至癸亥得六十也。」」\\n\\t施「紀元時」。取一以施「彼日何干支」。乃得矣。\\n是謂「今日何干支」之術也。\\n\\n注曰「「今日積何日。同Javascript之Get continuously counting day number of today也。」」\\n今有一術。名之曰「今日積何日」。是術曰。\\n\\t注曰「「米制公約訂立日積一百六十六萬九千九百九十九日。」」\\n\\t注曰「「紀元日積一百七十〇萬四千五百五十八日。」」\\n\\t施「紀元時」。取一以施「彼日積何日」。乃得矣。\\n是謂「今日積何日」之術也。\\n\\n注曰「「今時何時。同Javascript之Get index (1 to 12) of current time in the 12 divisions of day也。」」\\n今有一術。名之曰「今時何時」。是術曰。\\n\\t注曰「「時者。子丑寅卯辰巳午未申酉戌亥。」」\\n\\t注曰「「子時得一。丑時得二。乃至亥時得十二也。」」\\n\\t施「紀元時」。取一以施「彼時何時」。乃得矣。\\n是謂「今時何時」之術也。\\n\\n注曰「「今時何小時。同Javascript之new Date().getHours()也。」」\\n今有一術。名之曰「今時何小時」。是術曰。\\n\\t注曰「「小時者。子丑寅卯辰巳午未申酉戌亥。各分初正。」」\\n\\t注曰「「子正得〇。丑初得一。乃至子初得二十三也。」」\\n\\t施「紀元時」。取一以施「彼時何小時」。乃得矣。\\n是謂「今時何小時」之術也。\\n\\n注曰「「今刻何刻。同Javascript之Math.floor(new Date().getMinutes() / 15)也。」」\\n今有一術。名之曰「今刻何刻」。是術曰。\\n\\t注曰「「說文解字曰。晝夜百刻。後世改為九十六、百八、百二十刻。未知孰為可法。」」\\n\\t注曰「「初刻得〇。一刻得一。二刻得二。三刻得三。古法四刻得四。」」\\n\\t施「紀元時」。取一以施「彼刻何刻」。乃得矣。\\n是謂「今刻何刻」之術也。\\n\\n注曰「「今分何分。同Javascript之new Date().getMinutes() % 15也。」」\\n今有一術。名之曰「今分何分」。是術曰。\\n\\t施「紀元時」。取一以施「彼分何分」。乃得矣。\\n是謂「今分何分」之術也。\\n\\n注曰「「今秒何秒。同Javascript之new Date().getSeconds()也。」」\\n今有一術。名之曰「今秒何秒」。是術曰。\\n\\t施「紀元時」。取一以施「彼秒何秒」。乃得矣。\\n是謂「今秒何秒」之術也。\\n\\n注曰「「既知某一紀元時。乃得其年月日時刻。故謂之彼。」」\\n\\n吾有一列。名之曰「天干」。充「天干」。\\n\\t以「「甲」」以「「乙」」以「「丙」」以「「丁」」以「「戊」」。\\n\\t以「「己」」以「「庚」」以「「辛」」以「「壬」」以「「癸」」。\\n吾有一列。名之曰「地支」。充「地支」。\\n\\t以「「子」」以「「丑」」以「「寅」」以「「卯」」以「「辰」」以「「巳」」。\\n\\t以「「午」」以「「未」」以「「申」」以「「酉」」以「「戌」」以「「亥」」。\\n吾有一列。名之曰「數字」。充「數字」。\\n\\t以「「〇」」以「「一」」以「「二」」以「「三」」以「「四」」。\\n\\t以「「五」」以「「六」」以「「七」」以「「八」」以「「九」」。\\n\\n吾有一術。名之曰「言序數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t夫「甲」。夫十。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。名之曰「數」。\\n\\t恆為是。\\n\\t\\t夫「乙」之「「商」」。夫十。取二以施「取底除」。昔之「乙」者。今其是矣。\\n\\t\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。加其以「數」。昔之「數」者。今其是矣。\\n\\t\\t若「乙」之「「商」」等於零者。\\n\\t\\t\\t乃得「數」也。\\n\\t云云。\\n是謂「言序數」之術也。\\n\\n吾有一術。名之曰「言百內數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t夫「甲」。夫十。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。若其等於零者。\\n\\t\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。乃得矣。云云。\\n\\t吾有一言。名之曰「數」。\\n\\t夫「乙」之「「商」」。若其等於一者。\\n\\t\\t昔之「數」者。今「「十」」是矣。\\n\\t若非\\n\\t\\t夫「乙」之「「商」」。加其以一。夫「數字」之其。加其以「「十」」。昔之「數」者。今其是矣。云云。\\n\\t夫「乙」之「「餘」」。若其大於零者。\\n\\t\\t夫「乙」之「「餘」」。加其以一。夫「數字」之其。加「數」以其。昔之「數」者。今其是矣。云云。\\n\\t乃得「數」。\\n是謂「言百內數」之術也。\\n\\n吾有一術。名之曰「言年月日」。欲行是術。必先得一數。曰「積日」。乃行是術曰。\\n\\t夫「積日」。取一以施「日積何月」。名之曰「積月」。\\n\\t夫「積月」。取一以施「月積何閏月」。名之曰「積閏月」。\\n\\t減「積月」以「積閏月」。除其以十二。取一以施「取底」。名之曰「積年」。\\n\\t有言「「西元」」。名之曰「年號」。\\n\\t減「積年」以二六九七。名之曰「年」。\\n\\t減「積月」以「積閏月」。除其以十二。所餘幾何。加其於一。名之曰「月」。\\n\\t有爻陰。名之曰「閏」。\\n\\t夫「積閏月」。取一以施「閏月積何月」。若其等於「積月」者。\\n\\t\\t昔之「閏」者。今陽是矣。云云。\\n\\t夫「積月」。取一以施「月積何日」。減其於「積日」。加其以一。名之曰「日」。\\n\\n\\t有言「年號」。名之曰「年月日」。\\n\\t若「年」不大於零者。\\n\\t\\t加「年號」以「「前」」。昔之「年月日」者。今其是矣。\\n\\t\\t減「年」於一。昔之「年」者。今其是矣。\\n\\t云云。\\n\\t若「年」不大於一百者。\\n\\t\\t夫「年」。取一以施「言百內數」。加其以「「年」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t若非。\\n\\t\\t夫「年」。取一以施「言序數」。加其以「「年」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t云云。\\n\\t減一於「積年」。除其以十。所餘幾何。加其以一。夫「天干」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t減一於「積年」。除其以十二。所餘幾何。加其以一。夫「地支」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t加「年月日」以「「年」」。昔之「年月日」者。今其是矣。\\n\\n\\t若「閏」者。\\n\\t\\t加「年月日」以「「閏」」。昔之「年月日」者。今其是矣。云云。\\n\\t若「月」等於一者。\\n\\t\\t加「年月日」以「「正月」」。昔之「年月日」者。今其是矣。\\n\\t若非。\\n\\t\\t夫「月」。取一以施「言百內數」。加其以「「月」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t云云。\\n\\n\\t若「日」不大於十者。\\n\\t\\t加「年月日」以「「初」」。昔之「年月日」者。今其是矣。云云。\\n\\t夫「日」。取一以施「言百內數」。加其以「「日」」。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t減一於「積日」。除其以十。所餘幾何。加其以一。夫「天干」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t減一於「積日」。除其以十二。所餘幾何。加其以一。夫「地支」之其。加「年月日」以其。昔之「年月日」者。今其是矣。\\n\\t加「年月日」以「「日」」。昔之「年月日」者。今其是矣。\\n\\t乃得「年月日」。\\n是謂「言年月日」之術也。\\n\\n吾有一術。名之曰「言時刻」。欲行是術。必先得一數。曰「日內秒」。乃行是術曰。\\n\\t夫「日內秒」。夫三千六百。取二以施「取底除」。名之曰「甲」。\\n\\t夫「甲」之「「商」」。除其以二。取一以施「取頂」。加其以一。名之曰「乙」。\\n\\t若「乙」大於十二者。\\n\\t\\t減十二於「乙」。昔之「乙」者。今其是矣。云云。\\n\\t夫「地支」之「乙」。名之曰「時刻」。\\n\\n\\t夫「甲」之「「商」」。除其以二。所餘幾何。若其等於零者。\\n\\t\\t加「時刻」以「「正」」。昔之「時刻」者。今其是矣。\\n\\t若非。\\n\\t\\t加「時刻」以「「初」」。昔之「時刻」者。今其是矣。云云。\\n\\n\\t夫「甲」之「「餘」」。夫九百。取二以施「取底除」。名之曰「丙」。\\n\\t夫「丙」之「「商」」。若其等於零者。\\n\\t\\t加「時刻」以「「初刻」」。昔之「時刻」者。今其是矣。\\n\\t若非。\\n\\t\\t夫「丙」之「「商」」。取一以施「言百內數」。加其以「「刻」」。\\n\\t\\t加「時刻」以其。昔之「時刻」者。今其是矣。\\n\\t云云。\\n\\n\\t夫「丙」之「「餘」」。夫六十。取二以施「取底除」。名之曰「丁」。\\n\\t夫「丁」之「「商」」。若其等於零者。\\n\\t\\t夫「丁」之「「餘」」。若其大於零者。\\n\\t\\t\\t加「時刻」以「「零」」。昔之「時刻」者。今其是矣。云云。\\n\\t若非。\\n\\t\\t夫「丁」之「「商」」。取一以施「言百內數」。加其以「「分」」。\\n\\t\\t加「時刻」以其。昔之「時刻」者。今其是矣。\\n\\t云云。\\n\\n\\t夫「丁」之「「餘」」。若其大於零者。\\n\\t\\t夫「丁」之「「餘」」。取一以施「言百內數」。加其以「「秒」」。\\n\\t\\t加「時刻」以其。昔之「時刻」者。今其是矣。\\n\\t云云。\\n\\t乃得「時刻」。\\n是謂「言時刻」之術也。\\n\\n注曰「「言彼之日時。同Javascript之new Date(x * 1000).toString(), in Chinese calendar也。」」\\n今有一術。名之曰「言彼之日時」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。加其以一七〇四五五八。取一以施「言年月日」。名之曰「年月日」。\\n\\t夫「乙」之「「餘」」。取一以施「取底」。取一以施「言時刻」。名之曰「時刻」。\\n\\t加「年月日」以「時刻」。乃得矣。\\n是謂「言彼之日時」之術也。\\n\\n注曰「「言彼之年月日。同Javascript之new Date(x * 1000).toDateString(), in Chinese calendar也。」」\\n今有一術。名之曰「言彼之年月日」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。加其以一七〇四五五八。取一以施「言年月日」。乃得矣。\\n是謂「言彼之年月日」之術也。\\n\\n注曰「「言彼之時刻。同Javascript之new Date(x * 1000).toTimeString(), in Chinese calendar也。」」\\n今有一術。名之曰「言彼之時刻」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。名之曰「乙」。\\n\\t夫「乙」之「「餘」」。取一以施「取底」。取一以施「言時刻」。乃得矣。\\n是謂「言彼之時刻」之術也。\\n\\n注曰「「彼年何年號。同Javascript之\\\"西元\\\" for modern dates也。」」\\n今有一術。名之曰「彼年何年號」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t乃得「「西元」」。\\n是謂「彼年何年號」之術也。\\n\\n注曰「「彼年何年。同Javascript之new Date(x * 1000).getFullYear() for modern dates, in Chinese calendar也。」」\\n今有一術。名之曰「彼年何年」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼年積何年」於「時」。減其以二六九七。乃得矣。\\n是謂「彼年何年」之術也。\\n\\n注曰「「彼年何干支。同Javascript之Get index (1 to 60) in the 60-year cycle也。」」\\n今有一術。名之曰「彼年何干支」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼年積何年」於「時」。減其以一。夫六十。取二以施「取底除」。\\n\\t夫其之「「餘」」。加其以一。乃得矣。\\n是謂「彼年何干支」之術也。\\n\\n注曰「「彼年積何年。同Javascript之new Date(x * 1000).getFullYear() + 2697, in Chinese calendar也。」」\\n今有一術。名之曰「彼年積何年」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼月積何月」於「時」。名之曰「積月」。\\n\\t夫「積月」。取一以施「月積何閏月」。名之曰「積閏月」。\\n\\t減「積月」以「積閏月」。除其以十二。取一以施「取底」。乃得矣。\\n是謂「彼年積何年」之術也。\\n\\n注曰「「彼月何月。同Javascript之new Date(x * 1000).getMonth() + 1, N + 0.5 for leap months, in Chinese calendar也。」」\\n今有一術。名之曰「彼月何月」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼月積何月」於「時」。名之曰「積月」。\\n\\t夫「積月」。取一以施「月積何閏月」。名之曰「積閏月」。\\n\\t減「積月」以「積閏月」。除其以十二。所餘幾何。加其於一。名之曰「月」。\\n\\t夫「積閏月」。取一以施「閏月積何月」。若其等於「積月」者。\\n\\t\\t加五分於「月」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「月」也。\\n是謂「彼月何月」之術也。\\n\\n注曰「「彼月積何月。同Javascript之Get continuously counting month number也。」」\\n今有一術。名之曰「彼月積何月」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼日積何日」於「時」。取一以施「日積何月」。乃得矣。\\n是謂「彼月積何月」之術也。\\n\\n注曰「「彼日何日。同Javascript之new Date(x * 1000).getDate(), in Chinese calendar也。」」\\n今有一術。名之曰「彼日何日」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼日積何日」於「時」。名之曰「積日」。\\n\\t夫「積日」。取一以施「日積何月」。取一以施「月積何日」。減其於「積日」。加其以一。乃得矣。\\n是謂「彼日何日」之術也。\\n\\n注曰「「彼日何干支。同Javascript之Get index (1 to 60) in the 60-day cycle也。」」\\n今有一術。名之曰「彼日何干支」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼日積何日」於「時」。減其以一。夫六十。取二以施「取底除」。\\n\\t夫其之「「餘」」。加其以一。乃得矣。\\n是謂「彼日何干支」之術也。\\n\\n注曰「「彼日積何日。同Javascript之Get continuously counting day number也。」」\\n今有一術。名之曰「彼日積何日」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。\\n\\t夫其之「「商」」。加其以一七〇四五五八。乃得矣。\\n是謂「彼日積何日」之術也。\\n\\n注曰「「彼時何時。同Javascript之Get index (1 to 12) in the 12 divisions of day也。」」\\n今有一術。名之曰「彼時何時」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「彼時何小時」於「時」。除其以二。取一以施「取頂」。加其以一。名之曰「甲」。\\n\\t若「甲」大於十二者。\\n\\t\\t減十二於「甲」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「彼時何時」之術也。\\n\\n注曰「「彼時何小時。同Javascript之new Date(x * 1000).getHours()也。」」\\n今有一術。名之曰「彼時何小時」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫八萬六千四百。取二以施「取底除」。\\n\\t夫其之「「餘」」。夫三千六百。取二以施「取底除」。\\n\\t夫其之「「商」」。乃得矣。\\n是謂「彼時何小時」之術也。\\n\\n注曰「「彼刻何刻。同Javascript之Math.floor(new Date(x * 1000).getMinutes() / 15)也。」」\\n今有一術。名之曰「彼刻何刻」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫三千六百。取二以施「取底除」。\\n\\t夫其之「「餘」」。夫九百。取二以施「取底除」。\\n\\t夫其之「「商」」。乃得矣。\\n是謂「彼刻何刻」之術也。\\n\\n注曰「「彼分何分。同Javascript之new Date(x * 1000).getMinutes() % 15也。」」\\n今有一術。名之曰「彼分何分」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫九百。取二以施「取底除」。\\n\\t夫其之「「餘」」。夫六十。取二以施「取底除」。\\n\\t夫其之「「商」」。乃得矣。\\n是謂「彼分何分」之術也。\\n\\n注曰「「彼秒何秒。同Javascript之new Date(x * 1000).getSeconds()也。」」\\n今有一術。名之曰「彼秒何秒」。欲行是術。必先得一數。曰「時」。乃行是術曰。\\n\\t施「時差」於「時」。加其於「時」。名之曰「甲」。\\n\\t夫「甲」。夫六十。取二以施「取底除」。\\n\\t夫其之「「餘」」。取一以施「取底」。乃得矣。\\n是謂「彼秒何秒」之術也。\\n\\n吾有一術。名之曰「月積何日」。欲行是術。必先得一數。曰「積月」。乃行是術曰。\\n\\t減「積月」以「始曆月」。加其以一。名之曰「引」。\\n\\t若「引」小於一者。\\n\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t夫「曆月表」之長。若「引」大於其者。\\n\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t夫「曆月表」之「引」。名之曰「校」。\\n\\t乘「積月」以二五一〇一。除其以八五〇。減其以一。取一以施「取頂」。加其以「校」。乃得矣。\\n是謂「月積何日」之術也。\\n\\n吾有一術。名之曰「日積何月」。欲行是術。必先得一數。曰「積日」。乃行是術曰。\\n\\t加「積日」以一。乘其以八五〇。除其以二五一〇一。取一以施「取整」。名之曰「積月」。\\n\\t施「月積何日」於「積月」。名之曰「初日」。\\n\\t若「積日」小於「初日」者。\\n\\t\\t減一於「積月」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「積月」也。\\n是謂「日積何月」之術也。\\n\\n吾有一術。名之曰「閏月積何月」。欲行是術。必先得一數。曰「積閏月」。乃行是術曰。\\n\\t減「積閏月」以「始閏月」。加其以一。名之曰「引」。\\n\\t若「引」小於一者。\\n\\t\\t若「引」等於零者。\\n\\t\\t\\t乃得負一京。\\n\\t\\t若非。\\n\\t\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t云云。\\n\\t夫「閏月表」之長。若「引」大於其者。\\n\\t\\t夫「閏月表」之長。加其以一。若「引」等於其者。\\n\\t\\t\\t乃得一京。\\n\\t\\t若非。\\n\\t\\t\\t嗚呼。「「越界」」之禍。乃歸空無也。\\n\\t云云。\\n\\t夫「閏月表」之「引」。名之曰「校」。\\n\\t乘「積閏月」以三一五七。除其以九四。減其以二七。取一以施「取頂」。加其以「校」。乃得矣。\\n是謂「閏月積何月」之術也。\\n\\n吾有一術。名之曰「月積何閏月」。欲行是術。必先得一數。曰「積月」。乃行是術曰。\\n\\t加「積月」以二七。乘其以九四。除其以三一五七。取一以施「取整」。名之曰「積閏月」。\\n\\t施「閏月積何月」於「積閏月」。名之曰「閏月」。\\n\\t若「積月」小於「閏月」者。\\n\\t\\t減一於「積閏月」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「積閏月」也。\\n是謂「月積何閏月」之術也。\\n\";","export default \"注曰「「此文程式之作文也。勿施以修訂。」」\\n注曰「「程式書於文 tools/make_calendar.js 」」\\n\\n今有一數。曰五七一〇五。名之曰「始曆月」。\\n今有一列。名之曰「曆月表」。\\n今有一數。曰一七〇一。名之曰「始閏月」。\\n今有一列。名之曰「閏月表」。\\n\\n充「曆月表」。\\n\\t以一以一以一以一以〇以一以〇以〇以〇以負一以〇以〇以一以一以一。\\n\\t以一以一以〇以一以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇。\\n\\t以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一。\\n\\t以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以負一以〇以〇以一以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一。\\n\\t以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以二以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇。\\n\\t以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以二以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇。\\n\\t以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以〇以〇以一。\\n\\t以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一。\\n\\t以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇。\\n\\t以一以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以〇以〇以一以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以一以〇以〇以一以〇以一以一以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以一以〇。\\n\\t以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以負一以〇以〇以〇以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以一以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一。\\n\\t以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以一以一以一以〇以一以〇以負一以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一。\\n\\t以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇。\\n\\t以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一。\\n\\t以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以〇以一。\\n\\t以一以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以一以一以〇以一以〇。\\n\\t以一以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以一以〇以〇。\\n\\t以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇。\\n\\t以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一。\\n\\t以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以一以〇。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以一以二以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一。\\n\\t以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一。\\n\\t以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以〇。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一。\\n\\t以一以一以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一。\\n\\t以一以〇以〇以〇以負一以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以一以〇以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以〇以〇以一以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇。\\n\\t以一以〇以一以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇。\\n\\t以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以〇以一以一以一。\\n\\t以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以一。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以一以一以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以一以〇以一以〇以一以一以一以〇以一以〇以一以〇以〇以〇以〇以〇以〇以一。\\n\\t以〇以一以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以一以一以一以一以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以一以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一。\\n\\t以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以一以〇以一以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以〇以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以一以〇以一以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇。\\n\\t以一以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以〇。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇。\\n\\t以〇以〇以〇以一以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以一以〇以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以一以一以〇以一以〇以一以〇以〇。\\n\\t以〇以一以〇以一以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一以一。\\n\\t以一以一以〇以一以〇以一以〇以一以〇以〇以〇以一以〇以一以一以一以一以〇以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇。\\n\\t以〇以一以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以一以〇以一以一以一以一。\\n\\t以一以〇以〇以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以一。\\n\\t以〇以一以一以〇以一以〇以一以〇以一以〇以〇以〇以〇以〇以一以〇以一以一以一以一。\\n\\t以〇以一以〇以一以〇以〇以〇以一以〇以一以〇以一以一以一以一以〇以一以〇以〇以〇。\\n\\t以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一。\\n\\t以一以一以一以一以一以一以〇以一以〇以負一以〇以〇以一以〇以一以一以一以一以一以〇。\\n\\t以一以〇以〇以〇以〇以〇以〇以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一。\\n\\t以一以〇以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一。\\n\\t以〇以〇以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇。\\n\\t以一以〇以一以〇以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以一以一以一以〇以一以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇。\\n\\t以〇以〇以〇以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇。\\n\\t以〇以〇以〇以一以〇以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以〇以一以〇。\\n\\t以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以〇以一以〇以一以〇以一以一以一。\\n\\t以〇以一以〇以一以〇以〇以〇以〇以一以〇以一以一以一以一以一以〇以一以〇以〇以〇。\\n\\t以一以〇以〇以一以一以一以一以一以〇以一以〇以〇以〇以〇以〇以一以一以〇以一以一。\\n\\t以一以〇以一以〇以〇以〇以〇以〇以一以一以一以一以一以一以〇以一以〇以〇以〇以〇。\\n\\t以〇以一以〇以一以一以一以一以一以一以一以〇以〇以〇以〇以〇以〇以一以〇以一以一。\\n\\t以一以一以一以〇以一以〇以〇以〇以〇以一以〇以一以〇以一以〇以一以〇以一以〇以一。\\n\\t以〇以一以〇以〇以〇以〇以一以〇以一以〇以一。\\n\\n充「閏月表」。\\n\\t以負三以負一以一以二以負二以〇以二以負三以〇以一以二以負一以〇以二以負二以負一以一以三以負一。\\n\\t以〇以三以負二以負一以一以負二以負二以〇以一以負二以負二以一以二以負一以〇以二以負一以負一以一以二。\\n\\t以負三以〇以一以一以負一以一以二以負二以〇以一以負二以負一以〇以三以負二以〇以二以負三以負一以〇。\\n\\t以三以負二以〇以二以負三以負一以〇以二以負二以負一以二以負二以負一以〇以三以負二。\\n\";","export default \"吾嘗觀「「格物」」之書。方悟「取物」「置物」「列物之端」「識類」之義。\\n\\n吾有一言。曰「「「」」」。名之曰「引號」。\\n夫「引號」之一。名之曰「引起」。\\n夫「引號」之二。名之曰「引迄」。\\n吾有一列。名之曰「位名」。充「位名」\\n以「「〇」」以「「一」」以「「二」」以「「三」」以「「四」」\\n以「「五」」以「「六」」以「「七」」以「「八」」以「「九」」。\\n\\n吾有一術。名之曰「斬渾沌」。欲行是術。必先得一言。曰「渾沌語」。乃行是術曰。\\n\\t吾有一列。名之曰「諸咒」。充「諸咒」以「「物」」以「「言」」以「「數」」以「「爻」」以「「列」」以「「之」」以「「也」」。\\n\\t吾有一列。名之曰「渾沌碎」。\\n\\t有數一。名之曰「讀」。\\n\\t有數零。名之曰「層」。\\n\\t吾有一言。名之曰「辭」。\\n\\n\\t恆為是。若「讀」大於「渾沌語」之長者乃止也。\\n\\t\\t若「渾沌語」之「讀」等於「引起」者。\\n\\t\\t\\t若「層」不等於零者。\\n\\t\\t\\t\\t夫「渾沌語」之「讀」。加其於「辭」。昔之「辭」者。今其是矣。\\n\\t\\t\\t云云。\\n\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t或若「渾沌語」之「讀」等於「引迄」者。\\n\\t\\t\\t減「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t若「層」等於零者。\\n\\t\\t\\t\\t充「渾沌碎」以「辭」。\\n\\t\\t\\t\\t昔之「辭」者。今「「」」是矣。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t夫「渾沌語」之「讀」。加其於「辭」。昔之「辭」者。今其是矣。\\n\\t\\t\\t云云。\\n\\t\\t或若「層」大於零者。\\n\\t\\t\\t夫「渾沌語」之「讀」。加其於「辭」。昔之「辭」者。今其是矣。\\n\\t\\t若非。\\n\\t\\t\\t凡「諸咒」中之「咒」。\\n\\t\\t\\t\\t若「渾沌語」之「讀」等於「咒」者\\n\\t\\t\\t\\t\\t充「渾沌碎」以「咒」。\\n\\t\\t\\t\\t乃止也。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t加一以「讀」。昔之「讀」者。今其是矣云云。\\n\\t乃得「渾沌碎」。\\n是謂「斬渾沌」之術也。\\n\\n吾有一術。名之曰「食數」。欲行是術。必先得一言。曰「數名」。乃行是術曰。\\n\\t吾有一數。曰一。名之曰「正負」。\\n\\t夫「數名」之一。若其等於「「負」」者。\\n\\t\\t夫「數名」之其餘。昔之「數名」者。今其是矣。\\n\\t\\t昔之「正負」者。今負一是矣。\\n\\t云云。\\n\\t吾有二數。名之曰「整」曰「小」。\\n\\t吾有二數。曰一曰一。名之曰「讀」曰「小長」。\\n\\t有爻陰。名之曰「小耶」。\\n\\t恆為是。若「讀」大於「數名」之長者乃止也。\\n\\t\\t若「讀」等於「「·」」者\\n\\t\\t\\t昔之「小耶」者。今陽是矣。\\n\\t\\t若非。\\n\\t\\t\\t有數一。名之曰「位」\\n\\t\\t\\t恆為是。若「位」大於「位名」之長者乃止也。\\n\\t\\t\\t\\t若「位名」之「位」等於「數名」之「讀」者乃止也。\\n\\t\\t\\t加一以「位」。昔之「位」者。今其是矣云云。\\n\\t\\t\\t減「位」以一。昔之「位」者。今其是矣。\\n\\n\\t\\t\\t若「小耶」者。\\n\\t\\t\\t\\t乘「小」以十。加其以「位」。昔之「小」者。今其是矣。\\n\\t\\t\\t\\t加「小長」以一。昔之「小長」者。今其是矣。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t乘「整」以十。加其以「位」。昔之「整」者。今其是矣。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t加一以「讀」。昔之「讀」者。今其是矣云云。\\n\\t為是「小長」遍。乘「小」以零又一分。昔之「小」者。今其是矣。云云。\\n\\t加「整」以「小」。乘其以「正負」。乃得矣。\\n是謂「食數」之術也。\\n\\n吾有一術名之曰「食列」。欲行是術。必先得一列。曰「渾沌碎」。乃行是術曰。\\n\\t吾有一列。名之曰「渾沌列」。\\n\\t有數一。名之曰「讀」。\\n\\t恆為是。若「讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t夫「渾沌碎」之「讀」。名之曰「類」\\n\\t\\t若「類」等於「「數」」者。\\n\\t\\t\\t加「讀」以一。夫「渾沌碎」之其。取一以施「食數」。充「渾沌列」以其。\\n\\t\\t\\t加「讀」以二。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「言」」者。\\n\\t\\t\\t加「讀」以一。夫「渾沌碎」之其。充「渾沌列」以其。\\n\\t\\t\\t加「讀」以二。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「爻」」者。\\n\\t\\t\\t加「讀」以一。夫「渾沌碎」之其。\\n\\t\\t\\t若其等於「「陰」」者。充「渾沌列」以陰。\\n\\t\\t\\t若非。充「渾沌列」以陽也。\\n\\t\\t\\t加「讀」以二。昔之「讀」者。今其是矣。\\n\\t\\t若非\\n\\t\\t\\t吾有一數。名之曰「層」。\\n\\t\\t\\t加「讀」以一。名之曰「次讀」。\\n\\t\\t\\t吾有一列。名之曰「句」。\\n\\t\\t\\t恆為是。若「次讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t\\t\\t若「渾沌碎」之「次讀」等於「「物」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「列」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「也」」者。\\n\\t\\t\\t\\t\\t若「層」等於零者。\\n\\t\\t\\t\\t\\t\\t若「類」等於「「物」」者。\\n\\t\\t\\t\\t\\t\\t\\t施「食物」於「句」。充「渾沌列」以其。\\n\\t\\t\\t\\t\\t\\t若非。\\n\\t\\t\\t\\t\\t\\t\\t施「食列」於「句」。充「渾沌列」以其。\\n\\t\\t\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t\\t乃止也。\\n\\t\\t\\t\\t\\t減「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t夫「渾沌碎」之「次讀」。充「句」以其。\\n\\t\\t\\t加「次讀」以一。昔之「次讀」者。今其是矣云云。\\n\\t\\t\\t加「次讀」以一。昔之「讀」者。今其是矣\\n\\t\\t云云。\\n\\t云云。\\n\\t乃得「渾沌列」。\\n是謂「食列」之術也。\\n\\n吾有一術名之曰「食物」。欲行是術。必先得一列。曰「渾沌碎」。乃行是術曰。\\n\\t吾有一物。名之曰「渾沌物」。\\n\\t有數二。名之曰「讀」。\\n\\t恆為是。若「讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t夫「渾沌碎」之「讀」。名之曰「端」。\\n\\t\\t加「讀」以一。夫「渾沌碎」之其。名之曰「類」。\\n\\n\\t\\t若「類」等於「「數」」者。\\n\\t\\t\\t加「讀」以二。夫「渾沌碎」之其。取一以施「食數」。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t加「讀」以四。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「言」」者。\\n\\t\\t\\t加「讀」以二。夫「渾沌碎」之其。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t加「讀」以四。昔之「讀」者。今其是矣。\\n\\t\\t或若「類」等於「「爻」」者。\\n\\t\\t\\t加「讀」以二。夫「渾沌碎」之其。\\n\\t\\t\\t若其等於「「陰」」者。施「置物」於「渾沌物」於「端」於陰。\\n\\t\\t\\t若非。施「置物」於「渾沌物」於「端」於陽也。\\n\\t\\t\\t加「讀」以四。昔之「讀」者。今其是矣。\\n\\t\\t若非\\n\\t\\t\\t吾有一數。名之曰「層」。\\n\\t\\t\\t加「讀」以二。名之曰「次讀」。\\n\\t\\t\\t吾有一列。名之曰「句」。\\n\\t\\t\\t恆為是。若「次讀」大於「渾沌碎」之長者乃止也。\\n\\t\\t\\t\\t若「渾沌碎」之「次讀」等於「「物」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「列」」者。\\n\\t\\t\\t\\t\\t加「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t或若「渾沌碎」之「次讀」等於「「也」」者。\\n\\t\\t\\t\\t\\t若「層」等於零者。\\n\\t\\t\\t\\t\\t\\t若「類」等於「「物」」者。\\n\\t\\t\\t\\t\\t\\t\\t施「食物」於「句」。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t\\t\\t\\t若非。\\n\\t\\t\\t\\t\\t\\t\\t施「食列」於「句」。施「置物」於「渾沌物」於「端」於其。\\n\\t\\t\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t\\t乃止也。\\n\\t\\t\\t\\t\\t減「層」以一。昔之「層」者。今其是矣。\\n\\t\\t\\t\\t云云。\\n\\t\\t\\t\\t夫「渾沌碎」之「次讀」。充「句」以其。\\n\\t\\t\\t加「次讀」以一。昔之「次讀」者。今其是矣云云。\\n\\t\\t\\t加「次讀」以二。昔之「讀」者。今其是矣\\n\\t\\t云云。\\n\\t云云。\\n\\t乃得「渾沌物」。\\n是謂「食物」之術也。\\n\\n今有一術。名之曰「食渾沌」。欲行是術。必先得一言。曰「渾沌語」。乃行是術曰。\\n\\t施「斬渾沌」於「渾沌語」。名之曰「渾沌碎」。\\n\\t夫「渾沌碎」之其餘。取一以施「食物」。乃得矣。\\n是謂「食渾沌」之術也。\\n\\n今有一術。名之曰「食諸渾沌」。欲行是術。必先得一言。曰「渾沌語」。乃行是術曰。\\n\\t施「斬渾沌」於「渾沌語」。名之曰「渾沌碎」。\\n\\t夫「渾沌碎」之其餘。取一以施「食列」。乃得矣。\\n是謂「食諸渾沌」之術也。\\n\\n\\n吾有一言。曰「「　」」名之曰「挪符」。\\n吾有一言。曰「「\\\\n」」名之曰「抬符」。\\n吾有一術。名之曰「包數」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t吾有一言。名之曰「正負」。\\n\\t若「甲」小於零者。\\n\\t\\t乘「甲」以負一。昔之「甲」者。今其是矣。\\n\\t\\t昔之「正負」者。今「「負」」是矣。\\n\\t云云。\\n\\t除「甲」以一。所餘幾何。名之曰「小數」\\n\\t減「小數」於「甲」。名之曰「整數」。\\n\\t吾有二言。名之曰「小」曰「整」。\\n\\t恆為是。若「整數」不大於零者乃止也。\\n\\t\\t除「整數」以十。所餘幾何。名之曰「位」。\\n\\t\\t加「位」以一。夫「位名」之其。加其以「整」。昔之「整」者。今其是矣。\\n\\t\\t減「整數」以「位」。除其以十。昔之「整數」者。今其是矣。\\n\\t云云。\\n\\t恆為是。若「小數」不大於零者乃止也。\\n\\t\\t乘「小數」以十。昔之「小數」者。今其是矣。\\n\\t\\t除「小數」以一。所餘幾何。名之曰「位」。\\n\\t\\t加「位」以一。夫「位名」之其。加其於「小」。昔之「小」者。今其是矣。\\n\\t\\t減「小數」以「位」。昔之「小數」者。今其是矣。\\n\\t云云。\\n\\t加「正負」以「整」。昔之「整」者。今其是矣。\\n\\t夫「小」之長。若其然者。\\n\\t\\t加「整」以「「·」」。加其以「小」。乃得矣。\\n\\t云云。\\n\\t乃得「整」。\\n是謂「包數」之術也。\\n\\n吾有一術。名之曰「暗包渾沌」。欲行是術。必先得一言曰「類」。一元曰「實」。一數曰「挪抬」。乃行是術曰。\\n\\t吾有一言。名之曰「渾沌語」。\\n\\t若「類」等於「「物」」者。\\n\\t\\t加「渾沌語」以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t\\t夫「實」。加「挪抬」以一。取二以施「包物」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「「也」」加其以「抬符」。昔之「渾沌語」者。今其是矣。\\n\\n\\t或若「類」等於「「列」」者。\\n\\t\\t加「渾沌語」以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t\\t夫「實」。加「挪抬」以一。取二以施「包列」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「「也」」加其以「抬符」。昔之「渾沌語」者。今其是矣。\\n\\n\\t或若「類」等於「「言」」者。\\n\\t\\t加「渾沌語」以「引起」加其以「實」加其以「引迄」。加其以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t或若「類」等於「「爻」」者。\\n\\t\\t吾有一言。曰「「陽」」。名之曰「爻名」\\n\\t\\t夫「實」。若其不然者。昔之「爻名」者。今「「陰」」是矣也。\\n\\t\\t加「渾沌語」以「引起」加其以「爻名」加其以「引迄」。加其以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t或若「類」等於「「數」」者。\\n\\t\\t施「包數」於「實」。名之曰「數名」。\\n\\t\\t加「渾沌語」以「引起」加其以「數名」加其以「引迄」。加其以「抬符」昔之「渾沌語」者。今其是矣。\\n\\t云云。\\n\\t乃得「渾沌語」\\n是謂「暗包渾沌」之術也。\\n\\n吾有一術。名之曰「包列」。欲行是術。必先得一列曰「渾沌列」。一數曰「挪抬」。乃行是術曰。\\n\\t吾有一言。名之曰「渾沌語」。\\n\\t凡「渾沌列」中之「實」\\n\\t\\t施「識類」於「實」。名之曰「類」。\\n\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「類」。\\n\\t\\t昔之「渾沌語」者。今其是矣。\\n\\n\\t\\t施「暗包渾沌」於「類」於「實」於「挪抬」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t云云。\\n\\t乃得「渾沌語」\\n是謂「包列」之術也。\\n\\n吾有一術。名之曰「包物」。欲行是術。必先得一物曰「渾沌物」。一數曰「挪抬」。乃行是術曰。\\n\\n\\t吾有一言。名之曰「渾沌語」。\\n\\n\\t施「列物之端」於「渾沌物」。名之曰「諸端」。\\n\\n\\t凡「諸端」中之「端」\\n\\t\\t施「取物」於「渾沌物」於「端」。名之曰「實」。\\n\\t\\t施「識類」於「實」。名之曰「類」。\\n\\n\\t\\t為是「挪抬」遍。加「渾沌語」以「挪符」。昔之「渾沌語」者。今其是矣也。\\n\\t\\t加「渾沌語」以「「之」」。加其以「引起」。加其以「端」。加其以「引迄」。加其以「類」。\\n\\t\\t昔之「渾沌語」者。今其是矣。\\n\\n\\t\\t施「暗包渾沌」於「類」於「實」於「挪抬」。加其於「渾沌語」。昔之「渾沌語」者。今其是矣。\\n\\t云云。\\n\\t乃得「渾沌語」\\n是謂「包物」之術也。\\n\\n\\n今有一術。名之曰「包渾沌」。欲行是術。必先得一物。曰「渾沌物」。乃行是術曰。\\n\\t施「包物」於「渾沌物」於一。名之曰「餛飩語」。\\n\\t加「抬符」以「餛飩語」。加其於「「物」」。加其以「「也」」。乃得矣。\\n是謂「包渾沌」之術也。\\n\\n\\n今有一術。名之曰「包諸渾沌」。欲行是術。必先得一列。曰「渾沌列」。乃行是術曰。\\n\\t施「包列」於「渾沌列」於一。名之曰「餛飩語」。\\n\\t加「抬符」以「餛飩語」。加其於「「列」」。加其以「「也」」。乃得矣。\\n是謂「包諸渾沌」之術也。\\n\\n\";","export default \"吾有二數。曰一。曰一。名之曰「進制」。名之曰「退制」。\\n吾有三數。曰零。曰一。曰一。名之曰「總算位」。曰「上位冪」。曰「下位冪」。\\n吾有三數。曰零。曰一。曰一。名之曰「至大指」。曰「巨位冪」。曰「至巨數」。\\n吾有三數。曰零。曰一。曰一。名之曰「至小指」。曰「微位冪」。曰「至微數」。\\n吾有一數。曰一。名之曰「位極差」。\\n吾有二數。曰零。曰一。名之曰「浮點零」。曰「浮點一」。\\n\\n吾有一術。名之曰「試界」。欲行是術。必先得三數。曰「限」。曰「元」。曰「基」。二術。曰「合」。曰「據」。乃行是術曰。\\n\\t吾有一術。名之曰「造表列」。欲行是術。必先得二數。曰「引」。曰「實」。乃行是術曰。\\n\\t\\t吾有一物。名之曰「表列」。其物如是。\\n\\t\\t\\t物之「「引」」者。數曰「引」。\\n\\t\\t\\t物之「「實」」者。數曰「實」。\\n\\t\\t是謂「表列」之物也。\\n\\t\\t乃得「表列」。\\n\\t是謂「造表列」之術也。\\n\\t吾有一術。名之曰「新據」。欲行是術。必先得二數。曰「引」。曰「實」。乃行是術曰。\\n\\t\\t若「引」不小於「限」者。乃得陽也。\\n\\t\\t施「據」於「實」。若其然者。乃得陽也。\\n\\t\\t乃得陰。\\n\\t是謂「新據」之術也。\\n\\n\\t施「新據」於零。於「元」。若其然者。夫零。夫「元」。取二以施「造表列」。乃得矣。云云。\\n\\t施「新據」於一。於「基」。若其然者。夫一。夫「基」。取二以施「造表列」。乃得矣。云云。\\n\\t吾有二數。曰一。曰「基」。名之曰「引」。曰「實」。\\n\\t吾有一列。名之曰「記表列」。\\n\\t恆為是。\\n\\t\\t加「引」於「引」。名之曰「新引」。\\n\\t\\t夫「實」。夫「實」。取二以施「合」。名之曰「新實」。\\n\\t\\t施「新據」於「新引」。於「新實」。若其然者。乃止也。\\n\\t\\t夫「引」。夫「實」。取二以施「造表列」。充「記表列」以其。\\n\\t\\t昔之「引」者。今「新引」是矣。\\n\\t\\t昔之「實」者。今「新實」是矣。\\n\\t云云。\\n\\t夫「記表列」之長。名之曰「甲」。\\n\\t恆為是。\\n\\t\\t若「甲」等於零者。乃止也。\\n\\t\\t夫「記表列」之「甲」。名之曰「表列」。\\n\\t\\t夫「表列」之「「引」」。加其於「引」。名之曰「新引」。\\n\\t\\t夫「表列」之「「實」」。夫「實」。取二以施「合」。名之曰「新實」。\\n\\t\\t施「新據」於「新引」。於「新實」。若其不然者。\\n\\t\\t\\t昔之「引」者。今「新引」是矣。\\n\\t\\t\\t昔之「實」者。今「新實」是矣。\\n\\t\\t云云。\\n\\t\\t減一於「甲」。昔之「甲」者。今其是矣。\\n\\t云云。\\n\\t加一於「引」。夫「基」。夫「實」。取二以施「合」。取二以施「造表列」。乃得矣。\\n是謂「試界」之術也。\\n\\n吾有一術。名之曰「盤古」。乃行是術曰。\\n\\t除一於三。若其等於零者。\\n\\t\\t噫。夫「「告。計算機除不盡而捨餘者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\n\\t有數五分。名之曰「寅」。減「寅」以「寅」。名之曰「卯」。乘「卯」以「卯」。昔之「浮點零」者。今其是矣。\\n\\t加一於「浮點零」。昔之「浮點一」者。今其是矣。\\n\\n\\t吾有一列。名之曰「素數」。充「素數」以二。以三。以五。以七。以十一。以十三。\\n\\t有數零。名之曰「進制素因數」。\\n\\t昔之「進制」者。今「浮點一」是矣。\\n\\t凡「素數」中之「法」。\\n\\t\\t加一於「法」。除其以「法」。減其以一。乘其以「法」。名之曰「餘」。\\n\\t\\t若「餘」等於一者。\\n\\t\\t\\t乘「法」於「進制」。昔之「進制」者。今其是矣。\\n\\t\\t\\t加一於「進制素因數」。昔之「進制素因數」者。今其是矣。\\n\\t\\t云云。\\n\\t\\t若「餘」等於零者。\\n\\t\\t\\t噫。夫「「告。計算機除不盡而不得分釐者。不可行本算經之術。」」。書之。\\n\\t\\t\\t乃歸空無也。\\n\\t云云。\\n\\t若「進制素因數」大於二者。\\n\\t\\t噫。夫「「告。計算機掩絲毫之瑕而求整者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\t若「進制」不等於二者。\\n\\t\\t噫。夫「「告。計算機非二進者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\t除「進制」於一。昔之「退制」者。今其是矣。\\n\\n\\t吾有一術。名之曰「加」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t\\t加「甲」於「乙」。乃得矣。\\n\\t是謂「加」之術也。\\n\\t吾有一術。名之曰「乘」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t\\t乘「甲」於「乙」。乃得矣。\\n\\t是謂「乘」之術也。\\n\\t吾有一術。名之曰「位溢乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t\\t乘「甲」以「進制」。名之曰「乙」。\\n\\t\\t加一於「乙」。減其以「乙」。若其等於一者。乃得陰。若非。乃得陽也。\\n\\t是謂「位溢乎」之術也。\\n\\n\\t有數一萬。名之曰「試位限」。\\n\\t施「試界」於「試位限」。於「浮點一」。於「進制」。於「乘」。於「位溢乎」。名之曰「算限表」。\\n\\t夫「算限表」之「「引」」。若其不小於「試位限」者。\\n\\t\\t噫。夫「「告。計算機算位無限者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\t夫「算限表」之「「引」」。加其以一。昔之「總算位」者。今其是矣。\\n\\t夫「算限表」之「「實」」。昔之「上位冪」者。今其是矣。\\n\\t除一以「上位冪」。昔之「下位冪」者。今其是矣。\\n\\t加一以「下位冪」。減其以一。若其不等於「下位冪」者。\\n\\t\\t噫。夫「「告。計算機非二進者。不可行本算經之術。」」。書之。\\n\\t\\t乃歸空無也。\\n\\n\\t吾有一術。名之曰「上溢乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t\\t乘「甲」以「進制」。名之曰「乙」。\\n\\t\\t乘「乙」以「進制」。若其大於「乙」者。乃得陰。若非。乃得陽也。\\n\\t是謂「上溢乎」之術也。\\n\\t吾有一術。名之曰「下溢乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t\\t乘「甲」以「退制」。名之曰「乙」。\\n\\t\\t若「乙」等於零者。乃得陽也。\\n\\t\\t若「乙」小於「甲」者。乃得陰也。\\n\\t\\t乃得陽。\\n\\t是謂「下溢乎」之術也。\\n\\n\\t有數一億。名之曰「試指限」。\\n\\t施「試界」於「試指限」。於「浮點一」。於「進制」。於「乘」。於「上溢乎」。名之曰「上限表」。\\n\\t夫「上限表」之「「引」」。昔之「至大指」者。今其是矣。\\n\\t夫「上限表」之「「實」」。昔之「巨位冪」者。今其是矣。\\n\\t減「進制」以「下位冪」。乘其以「巨位冪」。昔之「至巨數」者。今其是矣。\\n\\n\\t施「試界」於「試指限」。於「浮點一」。於「退制」。於「乘」。於「下溢乎」。名之曰「下限表」。\\n\\t夫「下限表」之「「引」」。減其於「總算位」。減其以一。昔之「至小指」者。今其是矣。\\n\\t夫「下限表」之「「實」」。昔之「至微數」者。今其是矣。\\n\\t乘「至微數」以「上位冪」。昔之「微位冪」者。今其是矣。\\n\\t減「總算位」於「至小指」。減其於「至大指」。昔之「位極差」者。今其是矣。\\n\\n\\t注曰「「以上驗算制。」」\\n是謂「盤古」之術也。\\n施「盤古」。\\n\\n注曰「「圓周率。同Javascript之Math.PI也。」」\\n今有一數。曰三·一四一五九二六五三五八九七九三二三八四六二六四三三八三二七九五〇二八八四一九七。名之曰「圓周率」。\\n注曰「「倍圓周率。同Javascript之Math.PI * 2也。」」\\n今有一數。曰六·二八三一八五三〇七一七九五八六四七六九二五二八六七六六五五九〇〇五七六八三九四。名之曰「倍圓周率」。\\n注曰「「半圓周率。同Javascript之Math.PI / 2也。」」\\n今有一數。曰一·五七〇七九六三二六七九四八九六六一九二三一三二一六九一六三九七五一四四二〇九九。名之曰「半圓周率」。\\n注曰「「四分圓周率。同Javascript之Math.PI / 4也。」」\\n今有一數。曰〇·七八五三九八一六三三九七四四八三〇九六一五六六〇八四五八一九八七五七二一〇四九三。名之曰「四分圓周率」。\\n注曰「「自然常數。同Javascript之Math.E也。」」\\n今有一數。曰二·七一八二八一八二八四五九〇四五二三五三六〇二八七四七一三五二六六二四九七七五七。名之曰「自然常數」。\\n注曰「「歐拉常數。同Javascript之0.5772156649015329也。」」\\n今有一數。曰〇·五七七二一五六六四九〇一五三二八六〇六〇六五一二〇九〇〇八二四〇二四三一〇四二二。名之曰「歐拉常數」。\\n注曰「「黃金分割數。同Javascript之1.618033988749895也。」」\\n今有一數。曰一·六一八〇三三九八八七四九八九四八四八二〇四五八六八三四三六五六三八一一七七二〇。名之曰「黃金分割數」。\\n注曰「「二之平方根。同Javascript之Math.SQRT2也。」」\\n今有一數。曰一·四一四二一三五六二三七三〇九五〇四八八〇一六八八七二四二〇九六九八〇七八五七〇。名之曰「二之平方根」。\\n注曰「「二之對數。同Javascript之Math.LN2也。」」\\n今有一數。曰〇·六九三一四七一八〇五五九九四五三〇九四一七二三二一二一四五八一七六五六八〇七五五。名之曰「二之對數」。\\n注曰「「十之對數。同Javascript之Math.LN10也。」」\\n今有一數。曰二·三〇二五八五〇九二九九四〇四五六八四〇一七九九一四五四六八四三六四二〇七六〇一。名之曰「十之對數」。\\n\\n注曰「「不可算數乎。同Javascript之Number.isNaN也。」」\\n今有一術。名之曰「不可算數乎」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t若「甲」等於「甲」者。乃得陰。\\n\\t若非。乃得陽也。\\n是謂「不可算數乎」之術也。\\n\\n吾有一術。名之曰「下溢」。欲行是術。必先得一數。曰「符」。乃行是術曰。\\n\\t乘「符」以「微位冪」。乘其以「至微數」。乃得矣。\\n是謂「下溢」之術也。\\n\\n吾有一術。名之曰「上溢」。欲行是術。必先得一數。曰「符」。乃行是術曰。\\n\\t乘「符」以「至巨數」。乘其以「至巨數」。乃得矣。\\n是謂「上溢」之術也。\\n\\n吾有一術。名之曰「除以零」。欲行是術。必先得一數。曰「符」。乃行是術曰。\\n\\t除「符」以「浮點零」。乃得矣。\\n是謂「除以零」之術也。\\n\\n吾有一術。名之曰「不可算」。乃行是術曰。\\n\\t除「浮點零」於「浮點零」。乃得矣。\\n是謂「不可算」之術也。\\n\\n吾有一術。名之曰「求進冪」。欲行是術。必先得一數。曰「位」。乃行是術曰。\\n\\t吾有一術。名之曰「吾之冪」。欲行是術。必先得二數。曰「底」。曰「指」。乃行是術曰。\\n\\t\\t有數「底」。名之曰「甲」。\\n\\t\\t有數「浮點一」。名之曰「冪」。\\n\\t\\t恆為是。\\n\\t\\t\\t若「指」等於零者。乃止也。\\n\\t\\t\\t除「指」以二。所餘幾何。名之曰「餘」。\\n\\t\\t\\t若「餘」大於零者。乘「甲」於「冪」。昔之「冪」者。今其是矣。云云。\\n\\t\\t\\t乘「甲」於「甲」。昔之「甲」者。今其是矣。\\n\\t\\t\\t減「餘」於「指」。除其以二。昔之「指」者。今其是矣。\\n\\t\\t云云。\\n\\t\\t乃得「冪」。\\n\\t是謂「吾之冪」之術也。\\n\\t若「位」小於零者。\\n\\t\\t夫「退制」。減零以「位」。取二以施「吾之冪」。乃得矣。\\n\\t若非。\\n\\t\\t夫「進制」。夫「位」。取二以施「吾之冪」。乃得矣。\\n\\t云云。\\n是謂「求進冪」之術也。\\n\\n吾有三數。名之曰「取位常數甲」。曰「取位常數乙」。曰「取位上溢限」。\\n吾有三數。名之曰「分算常數」。曰「分算上溢限甲」。曰「分算上溢限乙」。\\n\\n吾有一術。名之曰「伏羲」。乃行是術曰。\\n\\t加一於「上位冪」。昔之「取位常數甲」者。今其是矣。\\n\\t除二於「下位冪」。減其於一。昔之「取位常數乙」者。今其是矣。\\n\\t除「上位冪」於「巨位冪」。昔之「取位上溢限」者。今其是矣。\\n\\n\\t加一於「總算位」。名之曰「甲」。\\n\\t除二於「甲」。所餘幾何。減其於「甲」。除其以二。名之曰「半算位」。\\n\\t施「求進冪」於「半算位」。名之曰「半位冪」。\\n\\t加一於「半位冪」。昔之「分算常數」者。今其是矣。\\n\\t除「半位冪」於「巨位冪」。昔之「分算上溢限甲」者。今其是矣。\\n\\t乘「半位冪」於「下位冪」。減其於「進制」。乘其以「巨位冪」。昔之「分算上溢限乙」者。今其是矣。\\n是謂「伏羲」之術也。\\n施「伏羲」。\\n\\n吾有一術。名之曰「取本位冪」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「二進者方可施是術。」」\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「取位上溢限」者。\\n\\t\\t乘「乙」以「取位常數甲」。名之曰「丙」。\\n\\t\\t乘「丙」以「取位常數乙」。名之曰「丁」。\\n\\t\\t減「丁」於「丙」。乃得矣。\\n\\t若非。\\n\\t\\t乘「乙」以「下位冪」。乘其以「下位冪」。名之曰「丙」。\\n\\t\\t若「丙」小於「取位上溢限」者。\\n\\t\\t\\t施「取本位冪」於「丙」。乘其以「上位冪」。乘其以「上位冪」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t乃得「乙」也。\\n\\t云云。\\n是謂「取本位冪」之術也。\\n\\n吾有一術。名之曰「取內鄰數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「二進者方可施是術。」」\\n\\t乘「甲」以「取位常數乙」。名之曰「乙」。\\n\\t若「乙」不等於「甲」者。\\n\\t\\t乃得「乙」也。\\n\\t若「甲」等於零者。\\n\\t\\t乃得「甲」也。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「丙」。\\n\\t若「丙」大於「至巨數」者。\\n\\t\\t乘「符」於「至巨數」。乃得矣。云云。\\n\\t減「至微數」於「丙」。乘其以「符」。乃得矣。\\n是謂「取內鄰數」之術也。\\n\\n吾有一術。名之曰「取外鄰數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「二進者方可施是術。」」\\n\\t施「正負」於「甲」。名之曰「符」。\\n\\t施「取本位冪」於「甲」。乘其以「下位冪」。乘其以「符」。加其以「甲」。名之曰「乙」。\\n\\t若「乙」不等於「甲」者。\\n\\t\\t乃得「乙」也。\\n\\t若「甲」等於零者。\\n\\t\\t乃得「至微數」也。\\n\\t乘「符」於「甲」。加其以「至微數」。乘其以「符」。乃得矣。\\n是謂「取外鄰數」之術也。\\n\\n吾有一術。名之曰「分算」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「分算者。其位上下二分。借二算布之也。」」\\n\\t吾有一列。名之曰「二算」。\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「分算上溢限甲」者。\\n\\t\\t乘「甲」以「分算常數」。名之曰「丙」。\\n\\t\\t減「丙」於「甲」。名之曰「丁」。\\n\\t\\t加「丁」於「丙」。名之曰「上甲」。\\n\\t\\t充「二算」以「上甲」。\\n\\t\\t減「甲」以「上甲」。充「二算」以其。\\n\\t若非。\\n\\t\\t若「乙」小於「分算上溢限乙」者。\\n\\t\\t\\t乘「甲」以「下位冪」。名之曰「丙」。\\n\\t\\t\\t施「分算」於「丙」。名之曰「丁」。\\n\\t\\t\\t凡「丁」中之「戊」。\\n\\t\\t\\t\\t乘「戊」以「上位冪」。充「二算」以其。\\n\\t\\t\\t云云。\\n\\t\\t若非。\\n\\t\\t\\t減「乙」以「分算上溢限乙」。名之曰「丙」。\\n\\t\\t\\t若「丙」小於「分算上溢限乙」者。\\n\\t\\t\\t\\t施「正負」於「甲」。名之曰「符」。\\n\\t\\t\\t\\t乘「符」於「分算上溢限乙」。充「二算」以其。\\n\\t\\t\\t\\t乘「符」於「丙」。充「二算」以其。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t充「二算」以「甲」。以「甲」。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t云云。\\n\\t乃得「二算」。\\n是謂「分算」之術也。\\n\\n吾有一術。名之曰「造雙數」。欲行是術。必先得二數。曰「上」。曰「下」。乃行是術曰。\\n\\t注曰「「雙數者。以二算布一數。其位倍之。」」\\n\\t吾有一列。名之曰「雙」。充「雙」以「上」。以「下」。乃得「雙」。\\n是謂「造雙數」之術也。\\n\\n吾有一術。名之曰「雙數取反」。欲行是術。必先得一列。曰「甲」。乃行是術曰。\\n\\t夫「甲」之一。乘其以負一。名之曰「上」。\\n\\t夫「甲」之二。乘其以負一。名之曰「下」。\\n\\t施「造雙數」於「上」。於「下」。乃得矣。\\n是謂「雙數取反」之術也。\\n\\n吾有一術。名之曰「以小加大得雙」。欲行是術。必先得二數。曰「小」。曰「大」。乃行是術曰。\\n\\t注曰「「大小者。二數移位之大小也。或前小而後大。或同。不可反之。」」\\n\\t加「小」於「大」。名之曰「上和」。\\n\\t減「大」於「上和」。名之曰「丙」。\\n\\t減「丙」於「小」。名之曰「下和」。\\n\\t施「造雙數」於「上和」。於「下和」。乃得矣。\\n是謂「以小加大得雙」之術也。\\n\\n吾有一術。名之曰「相加得雙」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t加「甲」於「乙」。名之曰「上和」。\\n\\t減「乙」於「上和」。名之曰「丙」。\\n\\t減「丙」於「上和」。名之曰「丁」。\\n\\t減「丙」於「甲」。名之曰「戊」。\\n\\t減「丁」於「乙」。名之曰「己」。\\n\\t加「戊」於「己」。名之曰「下和」。\\n\\t施「造雙數」於「上和」。於「下和」。乃得矣。\\n是謂「相加得雙」之術也。\\n\\n吾有一術。名之曰「加單於雙」。欲行是術。必先得一數。曰「甲」。一列。曰「乙」。乃行是術曰。\\n\\t夫「乙」之一。名之曰「上乙」。夫「乙」之二。名之曰「下乙」。\\n\\t施「相加得雙」於「甲」。於「上乙」。名之曰「丙」。\\n\\t夫「丙」之二。加其於「下乙」。夫「丙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「加單於雙」之術也。\\n\\n吾有一術。名之曰「以單減雙得單」。欲行是術。必先得一數。曰「甲」。一列。曰「乙」。是術曰。\\n\\t夫「乙」之一。名之曰「上乙」。夫「乙」之二。名之曰「下乙」。\\n\\t減「甲」於「上乙」。加其以「下乙」。乃得矣。\\n是謂「以單減雙得單」之術也。\\n\\n吾有一術。名之曰「加雙於雙」。欲行是術。必先得二列。曰「甲」。曰「乙」。乃行是術曰。\\n\\t夫「甲」之一。夫「乙」之一。取二以施「相加得雙」。名之曰「丙」。\\n\\t夫「甲」之二。夫「乙」之二。取二以施「相加得雙」。名之曰「丁」。\\n\\t夫「丙」之一。名之曰「上丙」。\\n\\t夫「丙」之二。名之曰「下丙」。\\n\\t夫「丁」之一。加其於「下丙」。夫「上丙」。取二以施「以小加大得雙」。名之曰「戊」。\\n\\t夫「戊」之一。名之曰「上戊」。\\n\\t夫「戊」之二。名之曰「下戊」。\\n\\t夫「丁」之二。加其於「下戊」。夫「上戊」。取二以施「以小加大得雙」。乃得矣。\\n是謂「加雙於雙」之術也。\\n\\n吾有一術。名之曰「自乘得雙」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t乘「甲」以「甲」。名之曰「上方」。\\n\\t施「分算」於「甲」。名之曰「分甲」。\\n\\t夫「分甲」之一。名之曰「上甲」。\\n\\t夫「分甲」之二。名之曰「下甲」。\\n\\t乘「上甲」於「上甲」。減其以「上方」。名之曰「丙」。\\n\\t乘「上甲」於「下甲」。乘其以二。加其於「丙」。名之曰「丁」。\\n\\t乘「下甲」於「下甲」。加其於「丁」。名之曰「下方」。\\n\\t施「造雙數」於「上方」。於「下方」。乃得矣。\\n是謂「自乘得雙」之術也。\\n\\n吾有一術。名之曰「相乘得雙」。欲行是術。必先得二數。曰「甲」。曰「乙」。乃行是術曰。\\n\\t乘「甲」以「乙」。名之曰「上積」。\\n\\t施「分算」於「甲」。名之曰「分甲」。\\n\\t夫「分甲」之一。名之曰「上甲」。\\n\\t夫「分甲」之二。名之曰「下甲」。\\n\\t施「分算」於「乙」。名之曰「分乙」。\\n\\t夫「分乙」之一。名之曰「上乙」。\\n\\t夫「分乙」之二。名之曰「下乙」。\\n\\t乘「上甲」於「上乙」。減其以「上積」。名之曰「丙」。\\n\\t乘「上甲」於「下乙」。加其於「丙」。名之曰「丁」。\\n\\t乘「下甲」於「上乙」。加其於「丁」。名之曰「戊」。\\n\\t乘「下甲」於「下乙」。加其於「戊」。名之曰「下積」。\\n\\t施「造雙數」於「上積」。於「下積」。乃得矣。\\n是謂「相乘得雙」之術也。\\n\\n吾有一術。名之曰「乘單於雙」。欲行是術。必先得一數。曰「甲」。一列。曰「乙」。是術曰。\\n\\t夫「乙」之一。名之曰「上乙」。\\n\\t夫「乙」之二。名之曰「下乙」。\\n\\t施「相乘得雙」於「甲」於「上乙」。名之曰「丙」。\\n\\t乘「甲」於「下乙」。名之曰「丁」。\\n\\t夫「丙」之二。加其以「丁」。夫「丙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「乘單於雙」之術也。\\n\\n吾有一術。名之曰「雙數自乘」。欲行是術。必先得一列。曰「甲」。乃行是術曰。\\n\\t夫「甲」之一。名之曰「上甲」。\\n\\t夫「甲」之二。名之曰「下甲」。\\n\\t施「自乘得雙」於「上甲」。名之曰「乙」。\\n\\t乘「上甲」於「下甲」。乘其以二。名之曰「丙」。\\n\\t夫「乙」之二。加其以「丙」。夫「乙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「雙數自乘」之術也。\\n\\n吾有一術。名之曰「乘雙於雙」。欲行是術。必先得二列。曰「甲」。曰「乙」。是術曰。\\n\\t夫「甲」之一。名之曰「上甲」。\\n\\t夫「甲」之二。名之曰「下甲」。\\n\\t夫「乙」之一。名之曰「上乙」。\\n\\t夫「乙」之二。名之曰「下乙」。\\n\\t施「相乘得雙」於「上甲」於「上乙」。名之曰「丙」。\\n\\t乘「上甲」於「下乙」。名之曰「丁」。\\n\\t乘「下甲」於「上乙」。加其於「丁」。名之曰「戊」。\\n\\t夫「丙」之二。加其以「戊」。夫「丙」之一。取二以施「以小加大得雙」。乃得矣。\\n是謂「乘雙於雙」之術也。\\n\\n吾有一術。名之曰「求多項式」。欲行是術。必先得一列。曰「式」。一數。曰「甲」。乃行是術曰。\\n\\t有數零。名之曰「解」。\\n\\t夫「式」之長。名之曰「引」。\\n\\t恆為是。\\n\\t\\t若「引」等於零者。乃得「解」也。\\n\\t\\t乘「解」以「甲」。名之曰「乙」。\\n\\t\\t夫「式」之「引」。加其於「乙」。昔之「解」者。今其是矣。\\n\\t\\t減一於「引」。昔之「引」者。今其是矣。\\n\\t云云。\\n是謂「求多項式」之術也。\\n\\n注曰「「浮點移位。同Javascript之x * Math.pow(2, y), y is integer也。」」\\n今有一術。名之曰「浮點移位」。欲行是術。必先得二數。曰「本」。曰「位」。乃行是術曰。\\n\\t注曰「「位正則進位。負則退位。」」\\n\\t若「位」不大於「至大指」者。若「位」不小於「至小指」者。\\n\\t\\t施「求進冪」於「位」。乘其於「本」。乃得矣。\\n\\t云云。云云。\\n\\n\\t施「不可算數乎」於「本」。若其然者。\\n\\t\\t乃得「本」也。\\n\\t施「不可算數乎」於「位」。若其然者。\\n\\t\\t乃得「位」也。\\n\\t若「位」大於零者。\\n\\t\\t加二於「位極差」。名之曰「限」。\\n\\t\\t若「位」不大於「限」者。\\n\\t\\t\\t夫「本」。減「位」以「至大指」。取二以施「浮點移位」。乘其以「巨位冪」。乃得矣。云云。\\n\\t\\t若「位」不大於「至巨數」者。\\n\\t\\t\\t夫「本」。減「限」以「至大指」。取二以施「浮點移位」。乘其以「巨位冪」。乃得矣。云云。\\n\\t\\t若「本」不等於零者。\\n\\t\\t\\t施「正負」於「本」。取一以施「上溢」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t施「不可算」。乃得矣。\\n\\t\\t云云。\\n\\t若非。\\n\\t\\t減負二以「位極差」。名之曰「限」。\\n\\t\\t若「位」不小於「限」者。\\n\\t\\t\\t夫「本」。減「位」以「至小指」。取二以施「浮點移位」。乘其以「微位冪」。乃得矣。云云。\\n\\t\\t乘負一於「至巨數」。若「位」不小於其者。\\n\\t\\t\\t夫「本」。減「限」以「至小指」。取二以施「浮點移位」。乘其以「微位冪」。乃得矣。云云。\\n\\t\\t施「絕對」於「本」。若其不大於「至巨數」者。\\n\\t\\t\\t乘「本」以「浮點零」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t施「不可算」。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n是謂「浮點移位」之術也。\\n\\n注曰「「析浮點數。同Javascript之N/A也。」」\\n今有一術。名之曰「析浮點數」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t注曰「「是術得一物。物有三數。曰符。曰位。曰本。符者。正負也。位者。進退位也。本者。本數也。」」\\n\\t注曰「「設計算機二進。若施是術於負六。乃得符負一。位二。本一又五分。」」\\n\\t吾有一術。名之曰「造析」。欲行是術。必先得三數。曰「符」。曰「位」。曰「本」。乃行是術曰。\\n\\t\\t吾有一物。名之曰「析」。其物如是。\\n\\t\\t\\t物之「「符」」者。數曰「符」。\\n\\t\\t\\t物之「「位」」者。數曰「位」。\\n\\t\\t\\t物之「「本」」者。數曰「本」。\\n\\t\\t是謂「析」之物也。\\n\\t\\t乃得「析」。\\n\\t是謂「造析」之術也。\\n\\n\\t吾有一術。名之曰「乘」。欲行是術。必先得二數。曰「丙」。曰「丁」。乃行是術曰。\\n\\t\\t乘「丙」於「丁」。乃得矣。\\n\\t是謂「乘」之術也。\\n\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t若「甲」等於零者。\\n\\t\\t夫「符」。施「除以零」於負一。夫「乙」。取三以施「造析」。乃得矣。云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t夫「符」。夫「甲」。夫「乙」。取三以施「造析」。乃得矣。云云。\\n\\t若「乙」大於「至巨數」者。\\n\\t\\t夫「符」。夫「乙」。夫「乙」。取三以施「造析」。乃得矣。云云。\\n\\n\\t若「乙」不小於一者。\\n\\t\\t吾有一術。名之曰「據」。欲行是術。必先得一數。曰「丙」。乃行是術曰。\\n\\t\\t\\t乘「丙」以「進制」。若其大於「乙」者。乃得陽。若非。乃得陰也。\\n\\t\\t是謂「據」之術也。\\n\\t\\t夫「至大指」。夫「浮點一」。夫「進制」。夫「乘」。夫「據」。取五以施「試界」。名之曰「位表」。\\n\\t\\t夫「位表」之「「引」」。名之曰「位」。\\n\\t\\t夫「位表」之「「實」」。除其於「乙」。名之曰「本」。\\n\\t\\t夫「符」。夫「位」。夫「本」。取三以施「造析」。乃得矣。\\n\\t若非。\\n\\t\\t吾有一術。名之曰「據」。欲行是術。必先得一數。曰「丙」。乃行是術曰。\\n\\t\\t\\t若「丙」不大於「乙」者。乃得陽。若非。乃得陰也。\\n\\t\\t是謂「據」之術也。\\n\\t\\t減「至小指」於「總算位」。夫「浮點一」。夫「退制」。夫「乘」。夫「據」。取五以施「試界」。名之曰「位表」。\\n\\t\\t夫「位表」之「「引」」。減其於零。名之曰「位」。\\n\\t\\t夫「位表」之「「實」」。除其於「乙」。名之曰「本」。\\n\\t\\t夫「符」。夫「位」。夫「本」。取三以施「造析」。乃得矣。\\n\\t云云。\\n是謂「析浮點數」之術也。\\n\\n除「上位冪」以四。名之曰「整除大數限」。\\n\\n注曰「「取底除。同Javascript之{ 商: Math.floor(x / y), 餘: x - y * quo }也。」」\\n今有一術。名之曰「取底除」。欲行是術。必先得二數曰「實」。曰「法」。是術曰。\\n\\t施「正負」於「法」。名之曰「法符」。乘「法」以「法符」。名之曰「法值」。乘「實」以「法符」。名之曰「乙」。\\n\\t施「正負」於「乙」。名之曰「乙符」。乘「乙」以「乙符」。名之曰「實值」。\\n\\t除「法值」於「實值」。所餘幾何。名之曰「餘」。\\n\\t減「餘」於「實值」。除其以「法值」。取一以施「取整」。名之曰「商」。\\n\\t若「乙符」小於零者。若「餘」不等於零者。\\n\\t\\t減「商」於負一。昔之「商」者。今其是矣。\\n\\t\\t減「餘」於「法值」。昔之「餘」者。今其是矣。\\n\\t云云。云云。\\n\\t吾有一物。名之曰「商餘」。其物如是。\\n\\t\\t物之「「商」」者。數曰「商」。\\n\\t\\t物之「「餘」」者。數曰「餘」。\\n\\t是謂「商餘」之物也。\\n\\t乃得「商餘」。\\n是謂「取底除」之術也。\\n\\n注曰「「取整除。同Javascript之{ 商: Math.round(x / y), 餘: x - y * quo }也。」」\\n今有一術。名之曰「取整除」。欲行是術。必先得二數曰「實」。曰「法」。是術曰。\\n\\t施「正負」於「法」。名之曰「法符」。乘「法」以「法符」。名之曰「法值」。\\n\\t施「正負」於「實」。名之曰「實符」。乘「實」以「實符」。名之曰「實值」。\\n\\t乘「法符」於「實符」名之曰「符」。\\n\\t除「法值」於「實值」。所餘幾何。名之曰「餘」。\\n\\t減「餘」於「實值」。除其以「法值」。取一以施「取整」。名之曰「商」。\\n\\t除「法值」以二。若「餘」不小於其者。\\n\\t\\t加「商」以一。昔之「商」者。今其是矣。\\n\\t\\t減「餘」以「法值」。昔之「餘」者。今其是矣。\\n\\t云云。\\n\\t乘「商」以「符」。昔之「商」者。今其是矣。\\n\\t乘「餘」以「符」。昔之「餘」者。今其是矣。\\n\\t吾有一物。名之曰「商餘」。其物如是。\\n\\t\\t物之「「商」」者。數曰「商」。\\n\\t\\t物之「「餘」」者。數曰「餘」。\\n\\t是謂「商餘」之物也。\\n\\t乃得「商餘」。\\n是謂「取整除」之術也。\\n\\n吾有一列。名之曰「半圓周率密率」。\\n\\t施「浮點移位」於八八四二七九七一九〇〇三五五五。於負四十九。充「半圓周率密率」以其。\\n\\t施「浮點移位」於四九六七七五七六〇〇〇二一五一一。於負一百零六。充「半圓周率密率」以其。\\n\\n吾有一術。名之曰「分四象」。欲行是術。必先得二數曰「甲」。曰「上限」。是術曰。\\n\\t注曰「「甲須為有限非零數。」」\\n\\t注曰「「術尚不精。當以極密率除之。」」\\n\\t夫「甲」。夫「半圓周率密率」之一。取二以施「取整除」。名之曰「乙」。\\n\\t夫「乙」之「「商」」。名之曰「商」。夫「乙」之「「餘」」。名之曰「餘」。\\n\\t注曰「「半圓周率弧度即一象。」」\\n\\t施「絕對」於「商」。若其不小於「整除大數限」者。\\n\\t\\t注曰「「商甚大。或算位不足而謬之。」」\\n\\t\\t有數四。名之曰「移位」。\\n\\t\\t夫「甲」。減零以「移位」。取二以施「浮點移位」。夫「上限」。取二以施「分四象」。\\n\\t\\t夫其之「「角」」。夫「移位」。取二以施「浮點移位」。夫「上限」。取二以施「分四象」。乃得矣。\\n\\t云云。\\n\\t施「取底除」於「商」。於四。夫其之「「餘」」。名之曰「象」。\\n\\t夫「半圓周率密率」之二。乘其以「商」。減其於「餘」。昔之「餘」者。今其是矣。\\n\\t施「絕對」於「餘」。若其大於「上限」者。\\n\\t\\t施「分四象」於「餘」。於「上限」。名之曰「解」。\\n\\t\\t夫「解」之「「象」」。加其於「象」。夫四。取二以施「取底除」。\\n\\t\\t夫其之「「餘」」。昔之「解」之「「象」」者。今其是矣。\\n\\t\\t乃得「解」。\\n\\t若非。\\n\\t\\t吾有一物。名之曰「解」。其物如是。\\n\\t\\t\\t物之「「角」」者。數曰「餘」。\\n\\t\\t\\t物之「「象」」者。數曰「象」。\\n\\t\\t是謂「解」之物也。\\n\\t\\t乃得「解」。\\n\\t云云。\\n是謂「分四象」之術也。\\n\\n有數七分九釐。名之曰「正餘弦角限」。注曰「「略大於四十五度。」」\\n\\n吾有一列。名之曰「正弦多項式」。\\n\\t除負一以六。充「正弦多項式」以其。\\n\\t除一以一二〇。充「正弦多項式」以其。\\n\\t除負一以五〇四〇。充「正弦多項式」以其。\\n\\t除一以三六二八八〇。充「正弦多項式」以其。\\n\\t除負一以三九九一六八〇〇。充「正弦多項式」以其。\\n\\t除一以六二二七〇二〇八〇〇。充「正弦多項式」以其。\\n\\t除負一以一三〇七六七四三六八〇〇〇。充「正弦多項式」以其。\\n\\t除一以三五五六八七四二八〇九六〇〇〇。充「正弦多項式」以其。\\n\\n吾有一列。名之曰「餘弦多項式」。\\n\\t除負一以二。充「餘弦多項式」以其。\\n\\t除一以二四。充「餘弦多項式」以其。\\n\\t除負一以七二〇。充「餘弦多項式」以其。\\n\\t除一以四〇三二〇。充「餘弦多項式」以其。\\n\\t除負一以三六二八八〇〇。充「餘弦多項式」以其。\\n\\t除一以四七九〇〇一六〇〇。充「餘弦多項式」以其。\\n\\t除負一以八七一七八二九一二〇〇。充「餘弦多項式」以其。\\n\\t除一以二〇九二二七八九八八八〇〇〇。充「餘弦多項式」以其。\\n\\n注曰「「正弦。同Javascript之Math.sin也。」」\\n今有一術。名之曰「正弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「數小甚矣。乃得其身。否則以泰勒展開求之。復以週期性得其餘。」」\\n\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「下位冪」者。\\n\\t\\t乃得「甲」也。\\n\\t若「乙」小於「正餘弦角限」者。\\n\\t\\t乘「甲」於「甲」。名之曰「二次冪」。\\n\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「甲」。加其於「甲」。乃得矣。云云。\\n\\t若「乙」不大於「至巨數」者。\\n\\t\\t施「分四象」於「甲」。於「正餘弦角限」。名之曰「丙」。\\n\\t\\t夫「丙」之「「角」」。名之曰「丁」。夫「丙」之「「象」」。名之曰「象」。\\n\\t\\t乘「丁」於「丁」。名之曰「二次冪」。\\n\\t\\t若「象」等於零者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。乃得矣。云云。\\n\\t\\t若「象」等於一者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。乃得矣。云云。\\n\\t\\t若「象」等於二者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。乃得矣。云云。\\n\\t\\t若「象」等於三者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。乃得矣。云云。\\n\\t云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t乃得「甲」也。\\n\\t施「不可算」。乃得矣。\\n是謂「正弦」之術也。\\n\\n注曰「「餘弦。同Javascript之Math.cos也。」」\\n今有一術。名之曰「餘弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「餘弦者。蓋正弦之變化所得。」」\\n\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「下位冪」者。\\n\\t\\t乃得一也。\\n\\t若「乙」小於「正餘弦角限」者。\\n\\t\\t乘「甲」於「甲」。名之曰「二次冪」。\\n\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其以一。乃得矣。云云。\\n\\t若「乙」不大於「至巨數」者。\\n\\t\\t施「分四象」於「甲」。於「正餘弦角限」。名之曰「丙」。\\n\\t\\t夫「丙」之「「角」」。名之曰「丁」。夫「丙」之「「象」」。名之曰「象」。\\n\\t\\t乘「丁」於「丁」。名之曰「二次冪」。\\n\\t\\t若「象」等於零者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。乃得矣。云云。\\n\\t\\t若「象」等於一者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。乃得矣。云云。\\n\\t\\t若「象」等於二者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。乃得矣。云云。\\n\\t\\t若「象」等於三者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。乃得矣。云云。\\n\\t云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t乃得「甲」也。\\n\\t施「不可算」。乃得矣。\\n是謂「餘弦」之術也。\\n\\n吾有一列。名之曰「反正弦多項式」。\\n\\t充「反正弦多項式」以〇·一六六六六六六六六六六六六六六四六。\\n\\t充「反正弦多項式」以〇·〇七五〇〇〇〇〇〇〇〇〇二三一八五三。\\n\\t充「反正弦多項式」以〇·〇四四六四二八五七〇九九五一八七七六。\\n\\t充「反正弦多項式」以〇·〇三〇三八一九四七六一二五八八一八八。\\n\\t充「反正弦多項式」以〇·〇二二三七二〇三九七二四〇六七九九六。\\n\\t充「反正弦多項式」以〇·〇一七三五五四〇八四二九六九九一六八。\\n\\t充「反正弦多項式」以〇·〇一三九二七九一六二七八〇七六一四〇。\\n\\t充「反正弦多項式」以〇·〇一一八八八五三〇五一〇五三八八〇九。\\n\\t充「反正弦多項式」以〇·〇〇七七四〇一二四四一八〇六六九〇三三。\\n\\t充「反正弦多項式」以〇·〇一六二二三四二二六二三一八二五六二。\\n\\t充「反正弦多項式」以負〇·〇一一〇六六五二一五七八〇七三九七〇。\\n\\t充「反正弦多項式」以〇·〇二八四〇〇七四九二〇一四五一九六二。\\n\\n注曰「「反正弦。同Javascript之Math.asin也。」」\\n今有一術。名之曰「反正弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「小於五分者。以多項式求之。其餘以三角恆等式變化可得。」」\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「乙」大於零者。若「乙」不大於一者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「甲」等於零者。乃得「甲」也。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。乃得「甲」也。\\n\\t\\t施「不可算」。乃得矣。\\n\\t云云。\\n\\n\\t若「乙」大於五分者。\\n\\t\\t減「乙」於一。除其以二。名之曰「丙」。\\n\\t\\t施「平方根」於「丙」。乘其以二。名之曰「丁」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其以「丁」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。減其以「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。加其於「己」。乘其以「符」。乃得矣。\\n\\t若非。\\n\\t\\t乘「乙」於「乙」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「甲」。加其於「甲」。乃得矣。\\n\\t云云。\\n是謂「反正弦」之術也。\\n\\n注曰「「反餘弦。同Javascript之Math.acos也。」」\\n今有一術。名之曰「反餘弦」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「反餘弦者。蓋反正弦之變化所得。」」\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「乙」不大於一者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。\\n\\t若「非常」者。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。乃得「甲」也。\\n\\t\\t施「不可算」。乃得矣。\\n\\t云云。\\n\\n\\t若「乙」大於五分者。\\n\\t\\t減「乙」於一。除其以二。名之曰「丙」。\\n\\t\\t施「平方根」於「丙」。乘其以二。名之曰「丁」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其以「丁」。名之曰「戊」。\\n\\t\\t若「甲」大於零者。\\n\\t\\t\\t乃得「戊」。\\n\\t\\t若非。\\n\\t\\t\\t夫「半圓周率密率」之二。乘其以二。減其以「戊」。名之曰「己」。\\n\\t\\t\\t夫「半圓周率密率」之一。乘其以二。加其於「己」。乃得矣。\\n\\t\\t云云。\\n\\t若非。\\n\\t\\t乘「乙」於「乙」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正弦多項式」。於「丙」。乘其以「丙」。乘其以「甲」。加其於「甲」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。減其以「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。加其於「己」。乃得矣。\\n\\t云云。\\n是謂「反餘弦」之術也。\\n\\n注曰「「正切。同Javascript之Math.tan也。」」\\n今有一術。名之曰「正切」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「數小甚矣。乃得其身。其餘或以三角恆等式。或以週期性可得。」」\\n\\n\\t施「絕對」於「甲」。名之曰「乙」。\\n\\t若「乙」小於「下位冪」者。\\n\\t\\t乃得「甲」也。\\n\\t若「乙」小於「正餘弦角限」者。\\n\\t\\t乘「甲」於「甲」。名之曰「二次冪」。\\n\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「甲」。加其於「甲」。名之曰「勾」。\\n\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其以一。名之曰「股」。\\n\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t若「乙」不大於「至巨數」者。\\n\\t\\t施「分四象」於「甲」。於「正餘弦角限」。名之曰「丙」。\\n\\t\\t夫「丙」之「「角」」。名之曰「丁」。夫「丙」之「「象」」。名之曰「象」。\\n\\t\\t乘「丁」於「丁」。名之曰「二次冪」。\\n\\t\\t若「象」等於零者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t\\t若「象」等於一者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。加其於一。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t\\t若「象」等於二者。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。\\n\\t\\t\\t乘其以負一。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t\\t若「象」等於三者。\\n\\t\\t\\t施「求多項式」於「餘弦多項式」。於「二次冪」。乘其以「二次冪」。減其於負一。名之曰「勾」。\\n\\t\\t\\t施「求多項式」於「正弦多項式」。於「二次冪」。乘其以「二次冪」。乘其以「丁」。加其於「丁」。名之曰「股」。\\n\\t\\t\\t除「勾」以「股」。乃得矣。云云。\\n\\t云云。\\n\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t乃得「甲」也。\\n\\t施「不可算」。乃得矣。\\n是謂「正切」之術也。\\n\\n吾有一列。名之曰「反正切多項式」。\\n\\t充「反正切多項式」以負〇·三三三三三三三三三三三三三三三二六。\\n\\t充「反正切多項式」以〇·一九九九九九九九九九九九九二二六八。\\n\\t充「反正切多項式」以負〇·一四二八五七一四二八四二一〇九五七。\\n\\t充「反正切多項式」以〇·一一一一一一一〇九九六五六八一〇三。\\n\\t充「反正切多項式」以負〇·〇九〇九〇九〇四五七三六一九二八〇九。\\n\\t充「反正切多項式」以〇·〇七六九二二〇二二一一〇八五〇六九六。\\n\\t充「反正切多項式」以負〇·〇六六六五〇九六二七三七〇九三七五五。\\n\\t充「反正切多項式」以〇·〇五八六六八一九一二四六一七二三一三。\\n\\t充「反正切多項式」以負〇·〇五一五九〇五五四五〇八四〇七四八七。\\n\\t充「反正切多項式」以〇·〇四二八八一四六一二三五七三四五六〇。\\n\\t充「反正切多項式」以負〇·〇二九〇三〇一七〇一六〇九七五七五一。\\n\\t充「反正切多項式」以〇·〇一一二〇八四九一一九三〇八七七九二。\\n\\n注曰「「反正切。同Javascript之Math.atan也。」」\\n今有一術。名之曰「反正切」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「小於五分者。以多項式求之。其餘以三角恆等式變化可得。」」\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「乙」大於零者。若「乙」不大於「至巨數」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「乙」等於零者。乃得「甲」也。\\n\\t\\t若「乙」大於「至巨數」者。乘「符」於「半圓周率」。乃得矣。云云。\\n\\t\\t乃得「甲」。\\n\\t云云。\\n\\n\\t若「乙」小於五分者。\\n\\t\\t乘「乙」於「乙」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正切多項式」。於「丙」。乘其以「丙」。乘其以「甲」。加其於「甲」。乃得矣。\\n\\t或若「乙」大於二者。\\n\\t\\t除「乙」於一。名之曰「丁」。\\n\\t\\t乘「丁」於「丁」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正切多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其於「丁」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。減其以「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。加其於「己」。乘其以「符」。乃得矣。\\n\\t若非。\\n\\t\\t減「乙」以一。名之曰「庚」。加「乙」於一。除其於「庚」。名之曰「丁」。\\n\\t\\t乘「丁」於「丁」。名之曰「丙」。\\n\\t\\t施「求多項式」於「反正切多項式」。於「丙」。乘其以「丙」。乘其以「丁」。加其於「丁」。名之曰「戊」。\\n\\t\\t夫「半圓周率密率」之二。除其以二。加其於「戊」。名之曰「己」。\\n\\t\\t夫「半圓周率密率」之一。除其以二。加其於「己」。乘其以「符」。乃得矣。\\n\\t云云。\\n是謂「反正切」之術也。\\n\\n\\n注曰「「勾股求角。同Javascript之Math.atan2也。」」\\n今有一術。名之曰「勾股求角」。欲行是術。必先得二數曰「甲」。曰「乙」。乃行是術曰。\\n\\t注曰「「反正切之分類討論也」」\\n\\t施「絕對」於「甲」。若其大於「至巨數」者。\\n\\t\\t施「絕對」於「乙」。若其大於「至巨數」者。\\n\\t\\t\\t施「正負」於「甲」。施「正負」於「乙」。取二以施「勾股求角」。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t若「乙」等於零者。\\n\\t\\t若「甲」大於零者。乃得「半圓周率」也。\\n\\t\\t若「甲」小於零者。減零以「半圓周率」乃得其也。\\n\\t\\t乃得零也。\\n\\n\\t除「甲」以「乙」。取一以施「反正切」。名之曰「丙」。\\n\\t若「乙」大於零者。乃得「丙」也。\\n\\t若「甲」不小於零者。加「丙」以「圓周率」。乃得矣。云云。\\n\\n\\t減「丙」以「圓周率」。乃得矣。\\n\\n是謂「勾股求角」之術也。\\n\\n\\n除五〇六二九七三以二〇九七一五二。名之曰「勾股求弦常數上」。\\n有數負〇·〇〇〇〇〇〇〇九五〇〇六〇五五三四一八二三三一一二七五七九〇三〇一九二一四三〇三二八一二四六二。\\n\\t名之曰「勾股求弦常數下」。\\n注曰「「加二之平方根於一也。」」\\n\\n注曰「「勾股求弦。同Javascript之Math.hypot也。」」\\n今有一術。名之曰「勾股求弦」。欲行是術。必先得二數曰「勾」。曰「股」。乃行是術曰。\\n\\t施「絕對」於「勾」。名之曰「甲」。\\n\\t施「絕對」於「股」。名之曰「乙」。\\n\\t若「甲」等於零者。乃得「乙」也。\\n\\t若「乙」等於零者。乃得「甲」也。\\n\\t若「甲」大於「至巨數」者。乃得「甲」也。\\n\\t若「乙」大於「至巨數」者。乃得「乙」也。\\n\\t施「不可算數乎」於「甲」。若其然者。乃得「甲」也。\\n\\t施「不可算數乎」於「乙」。若其然者。乃得「乙」也。\\n\\t若「乙」大於「甲」者。\\n\\t\\t有數「甲」。名之曰「借」。\\n\\t\\t昔之「甲」者。今「乙」是矣。\\n\\t\\t昔之「乙」者。今「借」是矣。\\n\\t云云。\\n\\n\\t減「乙」於「甲」。名之曰「丙」。\\n\\t若「丙」等於「甲」者。\\n\\t\\t乃得「甲」。\\n\\t或若「丙」大於「乙」者。\\n\\t\\t除「乙」於「甲」。名之曰「丁」。\\n\\t\\t乘「丁」於「丁」。加其於一。取一以施「平方根」。加其於「丁」。\\n\\t\\t除其於「乙」。加其於「甲」。乃得矣。\\n\\t若非。\\n\\t\\t除「乙」於「丙」。名之曰「戊」。\\n\\t\\t加「戊」於二。乘其以「戊」。名之曰「己」。\\n\\t\\t加「己」於二。取一以施「平方根」。加其於「二之平方根」。除其於「己」。名之曰「庚」。\\n\\t\\t加「庚」於「勾股求弦常數下」。加其於「戊」。加其於「勾股求弦常數上」。\\n\\t\\t除其於「乙」。加其於「甲」。乃得矣。\\n\\t云云。\\n是謂「勾股求弦」之術也。\\n\\n除一百四十五萬三千六百三十五以二百零九萬七千一百五十二。名之曰「二之對數上」。\\n有數負〇·〇〇〇〇〇〇〇〇一九〇四六五四二九九九五七七六七八七八五四一八二三四三一九二四四九九八六五六四〇。\\n\\t名之曰「二之對數下」。\\n\\n吾有一列。名之曰「對數多項式甲」。\\n\\t除一以三。充「對數多項式甲」以其。\\n\\t除一以五。充「對數多項式甲」以其。\\n\\t除一以七。充「對數多項式甲」以其。\\n\\t除一以九。充「對數多項式甲」以其。\\n\\t除一以十一。充「對數多項式甲」以其。\\n\\t除一以十三。充「對數多項式甲」以其。\\n\\t除一以十五。充「對數多項式甲」以其。\\n\\t除一以十七。充「對數多項式甲」以其。\\n\\t除一以十九。充「對數多項式甲」以其。\\n注曰「「 x^2 * f(x^2) = atanh(x)/x - 1 」」\\n\\n注曰「「對數。同Javascript之Math.log也。」」\\n今有一術。名之曰「對數」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「自然對數。」」\\n\\t有爻陽。名之曰「非常」。\\n\\t若「甲」大於零者。若「甲」不大於「至巨數」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「甲」等於零者。\\n\\t\\t\\t施「除以零」於負一。乃得矣。云云。\\n\\t\\t若「甲」小於零者。\\n\\t\\t\\t施「不可算」。乃得矣。云云。\\n\\t\\t乃得「甲」。\\n\\t云云。\\n\\n\\t注曰「「以對數屬性佐泰勒展開」」\\n\\t施「析浮點數」於「甲」。名之曰「析甲」。\\n\\t夫「析甲」之「「位」」。名之曰「位」。\\n\\t夫「析甲」之「「本」」。名之曰「本」。\\n\\t若「本」大於「二之平方根」者。\\n\\t\\t加一於「位」。昔之「位」者。今其是矣。\\n\\t\\t除二於「本」。昔之「本」者。今其是矣。\\n\\t云云。\\n\\t乘「二之對數」於「位」。名之曰「乙」。\\n\\t減「本」以一。名之曰「分子」。加「本」以一。除其於「分子」。名之曰「丙」。\\n\\t乘「丙」以「丙」。名之曰「二次冪」。\\n\\t施「求多項式」於「對數多項式甲」。於「二次冪」。乘其以「二次冪」。乘其以「丙」。加其於「丙」。\\n\\t乘其以二。加其以「乙」。乃得矣。\\n\\n是謂「對數」之術也。\\n\\n加二於「至大指」。乘其以「二之對數」。名之曰「指數上溢限」。\\n減「至小指」以「總算位」。減其以一。乘其以「二之對數」。名之曰「指數下溢限」。\\n\\n吾有一列。名之曰「指數多項式甲」。\\n\\t除一以三。充「指數多項式甲」以其。\\n\\t除負一以四十五。充「指數多項式甲」以其。\\n\\t除二以九百四十五。充「指數多項式甲」以其。\\n\\t除負一以四千七百二十五。充「指數多項式甲」以其。\\n\\t除二以九萬三千五百五十五。充「指數多項式甲」以其。\\n\\t除負一千三百八十二以六億三千八百五十一萬二千八百七十五。充「指數多項式甲」以其。\\n注曰「「 x^2 * f(x^2) = x/tanh(x) - 1 」」\\n\\n注曰「「指數。同Javascript之Math.exp也。」」\\n今有一術。名之曰「指數」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t注曰「「自然指數。」」\\n\\t有爻陽。名之曰「非常」。\\n\\t若「甲」小於「指數上溢限」者。若「甲」大於「指數下溢限」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t\\t乃得「甲」也。\\n\\t\\t若「甲」大於零者。\\n\\t\\t\\t若「甲」大於「至巨數」者。\\n\\t\\t\\t\\t乃得「甲」。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t施「上溢」於一。乃得矣。\\n\\t\\t\\t云云。\\n\\t\\t若非。\\n\\t\\t\\t乘負一於「至巨數」。若「甲」小於其者。\\n\\t\\t\\t\\t乃得「浮點零」。\\n\\t\\t\\t若非。\\n\\t\\t\\t\\t施「下溢」於一。乃得矣。\\n\\t\\t\\t云云。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t除「甲」以「二之對數」。取一以施「取整」。名之曰「移位數」。\\n\\t乘「二之對數上」於「移位數」。減其於「甲」。名之曰「乙」。\\n\\t乘「二之對數下」於「移位數」。減其於「乙」。名之曰「丙」。\\n\\t注曰「「除二之對數於甲。其餘者丙。以密率求之。」」\\n\\t除二於「丙」。名之曰「丁」。\\n\\t乘「丁」於「丁」。名之曰「戊」。\\n\\t施「求多項式」於「指數多項式甲」。於「戊」。乘其以「戊」。減其於「丁」。名之曰「己」。\\n\\t減「己」於一。除其於「丙」。加其於一。名之曰「庚」。\\n\\t施「浮點移位」於「庚」。於「移位數」。乃得矣。\\n是謂「指數」之術也。\\n\\n吾有一列。名之曰「對數多項式乙上」。充「對數多項式乙上」。\\n\\t以〇·三三三三一七二四二二九四七八五六五三九一一〇五。\\n\\t以〇·二〇四三一三三七三七九六七九〇〇七〇九三五三六。\\n吾有一列。名之曰「對數多項式乙下」。充「對數多項式乙下」。\\n\\t以〇·〇〇〇〇一六〇九一〇三八五四七六七九四三一。\\n\\t以負〇·〇〇四三一三三七三七九六七九〇一〇六七。\\n\\t以〇·一四二八五七一四二八五七一七六四六。\\n\\t以〇·一一一一一一一一一〇九九二五〇七五。\\n\\t以〇·〇九〇九〇九〇九二九八八二一八〇一八。\\n\\t以〇·〇七六九二二八七三三〇三六九五五四四。\\n\\t以〇·〇六六六七八三二一八五七九三二五一五。\\n\\t以〇·〇五八四三七二六四一三一四六七八六七。\\n\\t以〇·〇五九四四三八八四三七八七五一四八四。\\n注曰「「 x^2 * (f0(x^2) + f1(x^2)) = atanh(x)/x - 1 」」\\n\\n吾有一術。名之曰「正數之冪」。欲行是術。必先得二數。曰「底」。曰「指」。是術曰。\\n\\t注曰「「底為有限正數。指為有限數。」」\\n\\n\\t注曰「「以下求底之對數。」」\\n\\t施「析浮點數」於「底」。名之曰「析底」。\\n\\t夫「析底」之「「位」」。名之曰「位」。\\n\\t夫「析底」之「「本」」。名之曰「本」。\\n\\t若「本」大於「二之平方根」者。\\n\\t\\t加一於「位」。昔之「位」者。今其是矣。\\n\\t\\t除二於「本」。昔之「本」者。今其是矣。\\n\\t云云。\\n\\t減「本」以一。名之曰「丙」。\\n\\t加「本」以一。名之曰「丁」。\\n\\t除「丁」於「丙」。名之曰「戊」。\\n\\t夫「戊」。夫「戊」。夫「本」。取二以施「相乘得雙」。取二以施「加單於雙」。名之曰「己」。\\n\\t夫「丙」。夫「己」。取二以施「以單減雙得單」。乘其以負一。除其以「丁」。\\n\\t\\t夫「戊」。取二以施「以小加大得雙」。名之曰「庚」。\\n\\t施「雙數自乘」於「庚」。名之曰「辛」。\\n\\t夫「對數多項式乙下」。夫「辛」之一。取二以施「求多項式」。\\n\\t\\t夫「對數多項式乙上」之二。夫「辛」。取二以施「乘單於雙」。取二以施「加單於雙」。名之曰「壬」。\\n\\t夫「對數多項式乙上」之一。夫「壬」。取二以施「加單於雙」。夫「辛」。取二以施「乘雙於雙」。\\n\\t\\t夫「庚」。取二以施「乘雙於雙」。夫「庚」。取二以施「加雙於雙」。名之曰「癸」。\\n\\t夫「癸」之一。乘其以二。乘「位」於「二之對數上」。取二以施「相加得雙」。名之曰「子」。\\n\\t夫「癸」之二。乘其以二。名之曰「丑」。\\n\\t夫「子」之二。加其以「丑」。名之曰「寅」。\\n\\t乘「位」於「二之對數下」。加其以「寅」。夫「子」之一。取二以施「以小加大得雙」。名之曰「底之對數」。\\n\\n\\t注曰「「以下求冪之對數。」」\\n\\t夫「底之對數」之一。乘其以「指」。名之曰「卯」。\\n\\t若「卯」大於「指數上溢限」者。施「上溢」於一。乃得矣。\\n\\t或若「卯」小於「指數下溢限」者。施「下溢」於一。乃得矣。云云。\\n\\n\\t夫「指」。夫「底之對數」。取二以施「乘單於雙」。名之曰「冪之對數」。\\n\\t夫「冪之對數」之一。除其以「二之對數」。取一以施「取整」。名之曰「移位數」。\\n\\t乘「移位數」以「二之對數下」。乘「移位數」以「二之對數上」。取二以施「以小加大得雙」。\\n\\t\\t取一以施「雙數取反」。夫「冪之對數」。取二以施「加雙於雙」。名之曰「辰」。\\n\\t夫「辰」之一。取一以施「指數」。夫「移位數」。取二以施「浮點移位」。乃得矣。\\n是謂「正數之冪」之術也。\\n\\n注曰「「冪。同Javascript之Math.pow也。」」\\n今有一術。名之曰「冪」。欲行是術。必先得二數。曰「底」。曰「指」。乃行是術曰。\\n\\t若「指」等於零者。乃得一。\\n\\t或若「指」等於一者。乃得「底」。\\n\\t或若「指」等於二者。乘「底」於「底」。乃得矣。\\n\\t或若「指」等於負一者。除「底」於一。乃得矣。\\n\\t或若「指」等於五分者。施「平方根」於「底」。乃得矣。\\n\\t或若「指」等於三者。乘「底」於「底」。乘其於「底」。乃得矣。\\n\\t或若「指」等於負二者。除「底」於一。除其以「底」。乃得矣。\\n\\t或若「指」等於負五分者。施「平方根」於「底」。除其於一。乃得矣。\\n\\t云云。\\n\\n\\t若「底」等於一者。乃得一也。\\n\\n\\t施「不可算數乎」於「底」。若其然者。乃得「底」也。\\n\\t施「不可算數乎」於「指」。若其然者。乃得「指」也。\\n\\n\\t施「絕對」於「底」。名之曰「甲」。\\n\\t施「絕對」於「指」。名之曰「乙」。\\n\\t若「乙」大於「至巨數」者。\\n\\t\\t若「甲」等於一者。\\n\\t\\t\\t乃得一。\\n\\t\\t或若「甲」小於一者。\\n\\t\\t\\t若「指」大於零者。乃得「浮點零」。\\n\\t\\t\\t若非。乃得「乙」也。\\n\\t\\t若非。\\n\\t\\t\\t若「指」大於零者。乃得「乙」。\\n\\t\\t\\t若非。乃得「浮點零」也。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t吾有三爻。名之曰「指為偶數」。曰「指為奇數」。曰「指非整數」。\\n\\t除二於「乙」。所餘幾何。名之曰「丙」。\\n\\t若「丙」等於零者。昔之「指為偶數」者。今陽是矣。\\n\\t或若「丙」等於一者。昔之「指為奇數」者。今陽是矣。\\n\\t若非。昔之「指非整數」者。今陽是矣。\\n\\t云云。\\n\\n\\t若「底」等於零者。\\n\\t\\t若「指」小於零者。\\n\\t\\t\\t若「指為奇數」者。除「底」於一。乃得矣。\\n\\t\\t\\t若非。除「甲」於一。乃得矣。云云。\\n\\t\\t若非。\\n\\t\\t\\t若「指為奇數」者。乃得「底」。\\n\\t\\t\\t若非。乃得「甲」也。\\n\\t\\t云云。\\n\\t或若「甲」大於「至巨數」者。\\n\\t\\t若「指」小於零者。\\n\\t\\t\\t若「指為奇數」者。施「正負」於「底」。乘其於「浮點零」。乃得矣。\\n\\t\\t\\t若非。乃得「浮點零」也。\\n\\t\\t若非。\\n\\t\\t\\t若「指為奇數」者。乃得「底」。\\n\\t\\t\\t若非。乃得「甲」也。\\n\\t\\t云云。\\n\\t或若「底」小於零者。\\n\\t\\t若「指非整數」者。\\n\\t\\t\\t施「不可算」。乃得矣。\\n\\t\\t或若「指為奇數」者。\\n\\t\\t\\t施「正數之冪」於「甲」於「指」。乘其以負一。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t施「正數之冪」於「甲」於「指」。乃得矣。\\n是謂「冪」之術也。\\n\\n有數四分一釐七毫三絲一忽九微。名之曰「平方根常數甲」。\\n注曰「「 (2^0.5 - 1) * sqrt((2^0.25 + 2^-0.25) / 2) 」」\\n減一於「二之平方根」。乘其以二。名之曰「平方根常數乙」。\\n乘「上位冪」於「微位冪」。乘其以「進制」。乘其以「進制」。名之曰「平方根下溢界」。\\n\\n注曰「「平方根。同Javascript之Math.sqrt也。」」\\n今有一術。名之曰「平方根」。欲行是術。必先得一數曰「甲」。乃行是術曰。\\n\\t有爻陽。名之曰「非常」。\\n\\t若「甲」不小於「平方根下溢界」者。若「甲」小於「巨位冪」者。\\n\\t\\t昔之「非常」者。今陰是矣。\\n\\t云云。云云。\\n\\t若「非常」者。\\n\\t\\t若「甲」等於零者。\\n\\t\\t\\t乃得「浮點零」也。\\n\\t\\t施「不可算數乎」於「甲」。若其然者。\\n\\t\\t\\t乃得「甲」也。\\n\\t\\t若「甲」大於「至巨數」者。\\n\\t\\t\\t乃得「甲」也。\\n\\t\\t若「甲」小於零者。\\n\\t\\t\\t施「不可算」。乃得矣。云云。\\n\\t\\t若「甲」不大於「平方根下溢界」者。\\n\\t\\t\\t乘「甲」以「上位冪」。乘其以「上位冪」。乘其以「進制」。乘其以「進制」。取一以施「平方根」。\\n\\t\\t\\t乘其以「下位冪」。乘其以「退制」。乃得矣。\\n\\t\\t云云。\\n\\t\\t若「甲」不小於「巨位冪」者。\\n\\t\\t\\t乘「甲」以「退制」。乘其以「退制」。取一以施「平方根」。\\n\\t\\t\\t乘其以「進制」。乃得矣。\\n\\t\\t云云。\\n\\t云云。\\n\\n\\t施「析浮點數」於「甲」。名之曰「析甲」。\\n\\t夫「析甲」之「「位」」。除其以二。名之曰「半位」。\\n\\t施「取底」於「半位」。名之曰「整半位」。\\n\\t夫「析甲」之「「本」」。加其以「二之平方根」。乘其以「平方根常數甲」。名之曰「丁」。\\n\\t減「半位」以「整半位」。乘其以「平方根常數乙」。加其以一。乘其以「丁」。名之曰「戊」。\\n\\t施「求進冪」於「整半位」。名之曰「己」。\\n\\t乘「己」於「戊」。名之曰「乙」。\\n\\t注曰「「以上求疏根」」\\n\\n\\t批曰「「蓋用牛頓法耳」」\\n\\t為是三遍。\\n\\t\\t除「甲」以「乙」。加其以「乙」。除其以二。名之曰「丙」。\\n\\t\\t昔之「乙」者。今「丙」是矣。\\n\\t云云。\\n\\n\\t注曰「「以下校末位。」」\\n\\t乘「己」以「下位冪」。名之曰「庚」。\\n\\t減「庚」於「乙」。名之曰「下數」。\\n\\t施「相乘得雙」於「乙」。於「下數」。名之曰「下積」。\\n\\t夫「下積」之一。若其大於「甲」者。\\n\\t\\t乃得「下數」也。\\n\\t夫「下積」之一。若其等於「甲」者。夫「下積」之二。若其不小於零者。\\n\\t\\t乃得「下數」。\\n\\t云云。云云。\\n\\t注曰「「若甲等於中數乘下數者。其平方根不足下半間數。捨餘得下數也。」」\\n\\n\\t加「庚」於「乙」。名之曰「上數」。\\n\\t施「相乘得雙」於「乙」。於「上數」。名之曰「上積」。\\n\\t夫「上積」之一。若其小於「甲」者。\\n\\t\\t乃得「上數」也。\\n\\t夫「上積」之一。若其等於「甲」者。夫「上積」之二。若其小於零者。\\n\\t\\t乃得「上數」。\\n\\t云云。云云。\\n\\t注曰「「若甲等於中數乘上數者。其平方根不足上半間數。捨餘得中數也。」」\\n\\n\\t乃得「乙」。\\n是謂「平方根」之術也。\\n\\n注曰「「絕對。同Javascript之Math.abs也。」」\\n今有一術。名之曰「絕對」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。乃得矣。\\n是謂「絕對」之術也。\\n\\n注曰「「取頂。同Javascript之Math.ceil也。」」\\n今有一術。名之曰「取頂」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t乘負一於「甲」。取一以施「取底」。乘其以負一。乃得矣。\\n是謂「取頂」之術也。\\n\\n注曰「「取底。同Javascript之Math.floor也。」」\\n今有一術。名之曰「取底」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t注曰「「JavaScript者。除負以正。所餘負也。Python者。除負以正。所餘正也。」」\\n\\t除「乙」以一。所餘幾何。名之曰「丙」。\\n\\t若「丙」大於零者。\\n\\t\\t減「丙」於「乙」。乘其以「符」。名之曰「丁」。\\n\\t\\t若「符」小於零者。\\n\\t\\t\\t減一於「丁」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t乃得「丁」也。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「取底」之術也。\\n\\n注曰「「取整。同Javascript之Math.round, but rounded away from zero when the fractional part is exactly 0.5也。」」\\n今有一術。名之曰「取整」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t除「乙」以一。所餘幾何。名之曰「丙」。\\n\\t若「丙」等於「丙」者。\\n\\t\\t若「丙」小於五分者。\\n\\t\\t\\t減「丙」於「乙」。乘其以「符」。乃得矣。\\n\\t\\t若非。\\n\\t\\t\\t減「丙」於「乙」。加其以一。乘其以「符」。乃得矣。\\n\\t\\t云云。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「取整」之術也。\\n\\n注曰「「捨餘。同Javascript之Math.trunc也。」」\\n今有一術。名之曰「捨餘」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t施「正負」於「甲」。名之曰「符」。乘「符」於「甲」。名之曰「乙」。\\n\\t除「乙」以一。所餘幾何。名之曰「丙」。\\n\\t若「丙」等於「丙」者。\\n\\t\\t減「丙」於「乙」。乘其以「符」。乃得矣。\\n\\t若非。\\n\\t\\t乃得「甲」也。\\n是謂「捨餘」之術也。\\n\\n注曰「「正負。同Javascript之Math.sign也。」」\\n今有一術。名之曰「正負」。欲行是術。必先得一數。曰「甲」。乃行是術曰。\\n\\t若「甲」大於零者。乃得一也。\\n\\t若「甲」小於零者。乃得負一也。\\n\\t乃得「甲」。\\n是謂「正負」之術也。\\n\";","export default \"注曰「「求和。同Javascript之reduce((a,b)=>a+b)也。」」\\n今有一術。名之曰「求和」。欲行是術。必先得一列。曰「列」。乃行是術曰。\\n吾有一數。曰零。名之曰「和」。凡「列」中之「數」。加「和」以「數」。\\n名之曰「和」。云云。乃得「和」。是謂「求和」之術也。\\n\\n今有一術。名之曰「算術平均」。欲行是術。必先得一列。曰「列」。乃行是術曰。\\n施「求和」於「列」。名之曰「和」。夫「列」之長。名之曰「長」。除「和」以「長」。\\n名之曰「算術平均數」。乃得「算術平均數」。是謂「算術平均」之術也。\\n\\n今有一術。名之曰「方差」。欲行是術。必先得一列。曰「列」。乃行是術曰。\\n施「算術平均」於「列」。名之曰「算術平均數」。夫「列」之長。名之曰「長」。\\n吾有一數。曰零。名之曰「平方和」。凡「列」中之「數」。減「數」以「算術平均數」。\\n名之曰「偏差」。乘「偏差」以「偏差」。名之曰「偏差之平方」。\\n加「偏差之平方」以「平方和」。名之曰「平方和」。云云。除「平方和」以「長」。\\n名之曰「方差之數」。乃得「方差之數」。是謂「方差」之術也。\\n\";","import {\n  ASCNode,\n  isASCNodeOperator,\n  Token,\n  IdenType,\n  TypeSignature,\n  TypeScope\n} from \"./types\";\nimport { defaultAssert, isRoman } from \"./utils\";\n\nfunction printType(t: IdenType, n = 0, d = 0): string {\n  if (d > 100) {\n    return \"...\";\n  }\n  if (t.type == \"any\") {\n    let abc = \"abcdefghijklmnopqrstuvwxyz\";\n    if (n < 26) {\n      return \"'\" + abc[n];\n    } else {\n      return \"'\" + abc[Math.floor(n / 26)] + abc[n % 26];\n    }\n  }\n  if (t.type == \"arr\") {\n    return \"(\" + printType(t.element, n, d + 1) + \") arr\";\n  }\n  if (t.type == \"fun\") {\n    return (\n      \"(\" +\n      printType(t.in, n, d + 1) +\n      \") -> (\" +\n      printType(t.out, n + 1, d + 1) +\n      \")\"\n    );\n  }\n  if (t.type == \"obj\") {\n    let s = \"{ \";\n    let m = 0;\n    for (let k in t.fields) {\n      s += k + \" : (\" + printType(t.fields[k], n + m, d + 1) + \"), \";\n      m++;\n    }\n    if (s.length > 2) {\n      s = s.slice(0, -2);\n    }\n    s += \" }\";\n    return s;\n  }\n  return t.type;\n}\n\nfunction printSignature(signature: TypeSignature) {\n  let s = \"\";\n  signature = signature.filter(x => Object.keys(x[1]).length);\n  signature.sort((x, y) => x[0][0] - y[0][0]);\n  for (let i = 0; i < signature.length; i++) {\n    for (let j = signature.length - 1; j >= 0; j--) {\n      if (signature[j][0][1] <= signature[i][0][0]) {\n        signature[j][0][1] = 1 / 0;\n        s += \"  \".repeat(signature[j][0][2]) + \"}\\n\";\n      }\n    }\n    s +=\n      \"  \".repeat(signature[i][0][2]) +\n      `[${signature[i][0][0]}-${signature[i][0][1]}] {\\n`;\n    for (let k in signature[i][1]) {\n      s +=\n        \"  \".repeat(signature[i][0][2] + 1) +\n        k +\n        \" : \" +\n        printType(signature[i][1][k]) +\n        \"\\n\";\n    }\n  }\n  for (let j = signature.length - 1; j >= 0; j--) {\n    if (signature[j][0][1] < 1 / 0) {\n      s += \"  \".repeat(signature[j][0][2]) + \"}\\n\";\n    }\n  }\n  return s;\n}\n\nfunction typecheck(asc: ASCNode[], assert = defaultAssert()) {\n  let imported: string[] = [];\n  let strayvar: IdenType[] = [];\n  let scope: TypeScope[] = [{}];\n  let scopestarts: ASCNode[] = [{ pos: 0, op: \"global\" }];\n  let signature: TypeSignature = [];\n  let funstack: string[] = [];\n  let funretcnt: number[] = [];\n  let prevobj = \"\";\n  let took = 0;\n\n  function checkscopei(i: number, name: string) {\n    if (scope[i][name]) {\n      return scope[i][name];\n    }\n    if (!scope[i - 1]) {\n      return;\n    }\n    for (let j = funstack.length - 1; j >= 0; j--) {\n      if (scope[i - 1][funstack[j]]) {\n        let ptr = scope[i - 1][funstack[j]];\n        while (ptr.type == \"fun\") {\n          if (ptr.in.name == name) {\n            return ptr.in;\n          }\n          ptr = ptr.out;\n        }\n      }\n    }\n  }\n\n  function checkscopeall(name: string) {\n    for (let i = scope.length - 1; i >= 0; i--) {\n      let b = checkscopei(i, name);\n      if (b) {\n        return b;\n      }\n    }\n    if (imported.includes(name)) {\n      return inittype(\"any\"); //for now\n    }\n    if (isRoman(name)) {\n      //backdoor for native code\n      return inittype(\"any\");\n    }\n\n    return undefined;\n  }\n\n  function checkscopethis(name: string, pos: number) {\n    assert(\n      \"Scope stack depleted, possibly due to extraneous end-block statement.\",\n      pos,\n      scope.length\n    );\n    return checkscopei(scope.length - 1, name);\n  }\n\n  function inittype(type: IdenType[\"type\"]): IdenType {\n    if (type == \"any\") {\n      return { type: \"any\" };\n    }\n    if (type == \"nil\") {\n      return { type: \"nil\" };\n    }\n    let x: IdenType = { type: type };\n    if (type == \"fun\") {\n      x.in = { type: \"any\" };\n      x.out = { type: \"any\" };\n    } else if (type == \"obj\") {\n      x.fields = {};\n    } else if (type == \"arr\") {\n      x.element = { type: \"any\" };\n    }\n    return x;\n  }\n\n  function gettype(tok: Token): IdenType {\n    if (tok[0] == \"lit\") {\n      return inittype(\"str\");\n    } else if (tok[0] == \"bool\") {\n      return inittype(\"bol\");\n    } else if (tok[0] == \"num\") {\n      return inittype(\"num\");\n    } else if (tok[0] == \"iden\") {\n      return checkscopeall(tok[1]);\n    } else if (tok[0] == \"ans\") {\n      var s = strayvar[strayvar.length - 1];\n      // strayvar = [];\n      return s;\n    }\n    assert(`[Type] Expecting value, found '${tok[0]}'`, tok[2], false);\n  }\n\n  function objfield(t: IdenType, x: string) {\n    if (t.isarg) {\n      t.fields[x] = inittype(\"any\");\n    }\n    return t.fields[x];\n  }\n\n  function scopepush(node: ASCNode) {\n    scope.push({});\n    scopestarts.push(node);\n  }\n\n  function scopepop(node: ASCNode, ...acceptScopeStartOps) {\n    let ss = scopestarts.pop();\n    let s = scope.pop();\n    assert(\n      `[Type] Unexpected '${node.op}' in '${ss.op}' block`,\n      node.pos,\n      acceptScopeStartOps.indexOf(ss.op) >= 0\n    );\n    signature.push([[ss.pos, node.pos, scope.length], s]);\n  }\n\n  function logscope() {\n    console.dir(scope, { depth: null, maxArrayLength: null });\n  }\n\n  function typeEqual(a: IdenType, b: IdenType) {\n    if (a.type == \"any\") {\n      return b;\n    }\n    if (b.type == \"any\") {\n      return a;\n    }\n    if (a.type != b.type) {\n      return false;\n    }\n    if (a.type == b.type) {\n      if (a.type == \"arr\") {\n        if (typeEqual(a.element, b.element)) {\n          return a;\n        }\n        if (b.element) {\n          return b;\n        }\n        if (a.element) {\n          return a;\n        }\n      }\n      if (a.type == \"obj\") {\n        var x;\n        var y;\n        if (Object.keys(a.fields).length > Object.keys(b.fields).length) {\n          [x, y] = [b, a];\n        } else {\n          [x, y] = [a, b];\n        }\n        for (var k in x.fields) {\n          if (!typeEqual(x.fields[k], y.fields[k])) {\n            return false;\n          }\n        }\n        return y;\n      }\n      return a;\n    }\n    return false;\n  }\n\n  function typeassert(who: string, want: IdenType[], got: Token, pos: number) {\n    let t = gettype(got);\n    assert(`[Type] Undeclared variable '${got[1]}'`, pos, t);\n\n    let ok = false;\n    let ut = [];\n    for (let i = 0; i < want.length; i++) {\n      ut.push(\"(\" + printType(want[i]) + \")\");\n      if (typeEqual(want[i], t)) {\n        ok = true;\n        break;\n      }\n    }\n    assert(\n      `[Type] ${who} expecting ${ut.join(\"|\")}, found '${got[1]}' : ${printType(\n        t\n      )}`,\n      pos,\n      ok\n    );\n  }\n\n  for (let i = 0; i < asc.length; i++) {\n    var a = asc[i];\n    // console.log(',,,,,,,',a)\n\n    if (a.op == \"var\") {\n      // console.log(a)\n      for (let j = 0; j < a.count; j++) {\n        if (j >= a.names.length) {\n          strayvar.push(inittype(a.type));\n          continue;\n        }\n\n        assert(\n          `[Type] Variable '${a.names[j]}' redeclared in the same scope`,\n          a.pos,\n          !checkscopethis(a.names[j], a.pos)\n        );\n\n        scope[scope.length - 1][a.names[j]] = inittype(a.type);\n        if (a.type == \"fun\") {\n          funstack.push(a.names[j]);\n          funretcnt.push(0);\n        } else if (a.type == \"obj\") {\n          prevobj = a.names[j];\n        }\n      }\n    } else if (a.op == \"print\") {\n      //pass\n    } else if (a.op == \"fun\") {\n      let ptr = scope[scope.length - 1][funstack[funstack.length - 1]];\n      for (let j = 0; j < a.arity; j++) {\n        ptr.in = inittype(a.args[j].type);\n        if (a.args[j].type == \"obj\") {\n          ptr.in.isarg = true;\n        }\n        ptr.in.name = a.args[j].name;\n        if (j != a.arity - 1) {\n          ptr.out = inittype(\"fun\");\n          ptr = ptr.out;\n        }\n      }\n    } else if (a.op == \"funbody\") {\n      if (asc[i - 1].op != \"fun\") {\n        let ptr = scope[scope.length - 1][funstack[funstack.length - 1]];\n        ptr.in = inittype(\"nil\");\n      }\n      scopepush(a);\n    } else if (a.op == \"funend\") {\n      var f = funstack.pop();\n      var n = funretcnt.pop();\n      scopepop(a, \"funbody\");\n\n      if (n == 0) {\n        var ptr = scope[scope.length - 1][f];\n        while (ptr.out.type == \"fun\") {\n          ptr = ptr.out;\n        }\n        ptr.out = inittype(\"nil\");\n      }\n    } else if (a.op == \"objend\") {\n      //pass\n    } else if (a.op == \"objbody\") {\n      //pass\n    } else if (a.op == \"prop\") {\n      scope[scope.length - 1][prevobj].fields[a.name.slice(1, -1)] = inittype(\n        a.type\n      );\n    } else if (a.op == \"end\") {\n      scopepop(a, \"if\", \"else\", \"for\", \"whiletrue\", \"whilen\");\n    } else if (a.op == \"if\") {\n      if (a.elseif) {\n        scopepop(a, \"if\");\n      }\n      scopepush(a);\n    } else if (a.op == \"else\") {\n      scopepop(a, \"if\");\n      scopepush(a);\n    } else if (a.op == \"return\") {\n      funretcnt[funretcnt.length - 1]++;\n      let ptr;\n      for (let j = 1; j < scope.length; j++) {\n        ptr = scope[scope.length - 1 - j][funstack[funstack.length - 1]];\n        if (ptr) {\n          break;\n        }\n      }\n      while (ptr.out.type == \"fun\") {\n        ptr = ptr.out;\n      }\n      if (a.value == undefined) {\n        ptr.out = inittype(\"nil\");\n      } else {\n        let ty = gettype(a.value);\n        // console.log(strayvar)\n        // console.log(funstack[funstack.length-1],ty,ptr)\n        if (ptr.out.type == \"any\" || ptr.out.type == \"nil\") {\n          ptr.out = Object.assign({}, ty);\n          delete ptr.out.name;\n        } else {\n          // console.log(ptr.out.type,ty.type)\n          typeassert(`Function return`, [ptr.out], a.value, a.pos);\n\n          ptr.out = typeEqual(ptr.out, gettype(a.value));\n        }\n      }\n    } else if (isASCNodeOperator(a)) {\n      let op = a.op.slice(2);\n\n      let otype;\n      if (op == \"+\") {\n        typeassert(\n          `${op} operator`,\n          [inittype(\"num\"), inittype(\"str\")],\n          a.lhs,\n          a.pos\n        );\n        typeassert(\n          `${op} operator`,\n          [inittype(\"num\"), inittype(\"str\")],\n          a.rhs,\n          a.pos\n        );\n        otype = Object.assign({}, typeEqual(gettype(a.lhs), gettype(a.rhs)));\n      } else if ([\"-\", \"*\", \"/\", \"%\"].includes(op)) {\n        typeassert(`${op} operator`, [inittype(\"num\")], a.lhs, a.pos);\n        typeassert(`${op} operator`, [inittype(\"num\")], a.rhs, a.pos);\n        otype = inittype(\"num\");\n      } else if ([\"||\", \"&&\"].includes(op)) {\n        typeassert(`${op} operator`, [inittype(\"bol\")], a.lhs, a.pos);\n        typeassert(`${op} operator`, [inittype(\"bol\")], a.rhs, a.pos);\n        otype = inittype(\"bol\");\n      }\n      strayvar.push(otype);\n      // console.log(strayvar)\n    } else if (a.op == \"name\") {\n      for (let j = a.names.length - 1; j >= 0; j--) {\n        scope[scope.length - 1][a.names[j]] = strayvar.pop();\n      }\n    } else if (a.op == \"call\") {\n      let ty = gettype(a.fun);\n\n      if (ty == undefined) {\n        // damn hoisting\n        strayvar.push(inittype(\"any\"));\n      } else {\n        typeassert(`Call function`, [inittype(\"fun\")], a.fun, a.pos);\n\n        let args = [];\n        if (a.args) {\n          args = a.args.slice();\n        }\n        if (a.pop) {\n          for (let j = 0; j < took; j++) {\n            args.unshift(strayvar.pop());\n          }\n        }\n\n        let ptr = ty;\n\n        for (let j = 0; j < args.length; j++) {\n          if (ptr.type == \"any\") {\n            ptr = inittype(\"fun\");\n          }\n          let ta = ptr.in;\n          if (a.pop) {\n            assert(\n              `Function argument expecting ${printType(ta)}, found ${printType(\n                args[j]\n              )}`,\n              a.pos,\n              typeEqual(args[j], ta)\n            );\n          } else {\n            typeassert(`Function argument`, [ta], args[j], a.pos);\n          }\n          ptr = ptr.out;\n        }\n\n        if (args.length == 0 && ptr.type == \"fun\") {\n          ptr = ptr.out;\n        }\n\n        strayvar.push(Object.assign({}, ptr));\n      }\n    } else if (a.op == \"subscript\") {\n      // typeassert(`Subscript operator LHS`,[inittype('arr'),inittype('obj')],a.container,a.pos)\n\n      if (a.value[0] == \"ctnr\" && a.value[1] == \"rest\") {\n        typeassert(\n          `Subscript operator LHS`,\n          [inittype(\"arr\"), inittype(\"str\")],\n          a.container,\n          a.pos\n        );\n\n        let ty = gettype(a.container);\n        strayvar.push(Object.assign({}, ty));\n      } else {\n        typeassert(\n          `Subscript operator RHS`,\n          [inittype(\"num\"), inittype(\"str\")],\n          a.value,\n          a.pos\n        );\n\n        if (gettype(a.value).type == \"str\") {\n          typeassert(\n            `Subscript operator LHS`,\n            [inittype(\"obj\")],\n            a.container,\n            a.pos\n          );\n          let ty = gettype(a.container);\n          if (ty.type == \"any\") {\n            ty.type = \"obj\";\n            ty.fields = {};\n            ty.fields[a.value[1].slice(1, -1)] = inittype(\"any\");\n            ty.isarg = true;\n          }\n          assert(\n            `[Type] Property ${a.value[1]} does not exist in obj ${printType(\n              ty\n            )}`,\n            a.pos,\n            objfield(ty, a.value[1].slice(1, -1))\n          );\n\n          strayvar.push(Object.assign({}, ty.fields[a.value[1].slice(1, -1)]));\n        } else {\n          typeassert(\n            `Subscript operator LHS`,\n            [inittype(\"arr\"), inittype(\"str\")],\n            a.container,\n            a.pos\n          );\n          let ty = gettype(a.container);\n\n          if (ty.type == \"str\") {\n            strayvar.push(inittype(\"str\"));\n          } else {\n            if (ty.type == \"any\") {\n              // ty = inittype('arr')\n              ty.type = \"arr\";\n              ty.element = { type: \"any\" };\n              // console.log(gettype(a.container))\n              // console.log(ty)\n              // process.exit()\n              // strayvar.push(inittype('any'))\n            }\n            strayvar.push(Object.assign({}, ty.element));\n          }\n        }\n      }\n    } else if (a.op == \"cat\") {\n      typeassert(`Concat`, [inittype(\"arr\")], a.containers[0], a.pos);\n      let typ = gettype(a.containers[0]);\n      let olt = typ;\n      for (let j = 1; j < a.containers.length; j++) {\n        typ = typeEqual(typ, gettype(a.containers[j]));\n        if (!typ) {\n          typeassert(`Concat`, [olt], a.containers[j], a.pos);\n        }\n        olt = typ;\n      }\n      strayvar.push(Object.assign({}, typ));\n    } else if (a.op == \"push\") {\n      typeassert(`Push LHS`, [inittype(\"arr\")], a.container, a.pos);\n      let typy = gettype(a.container);\n      let typ = typy.element;\n      if ((typy.type = \"any\")) {\n        typ = inittype(\"any\");\n      }\n      let olt = typ;\n      for (let j = 0; j < a.values.length; j++) {\n        // console.log(a.values[j],gettype(a.values[j]))\n        typ = typeEqual(typ, gettype(a.values[j]));\n        if (!typ) {\n          typeassert(`Push RHS`, [olt], a.values[j], a.pos);\n        }\n        olt = typ;\n      }\n\n      gettype(a.container).element = Object.assign({}, typ);\n    } else if (a.op == \"for\") {\n      scopepush(a);\n      typeassert(`For-each LHS`, [inittype(\"arr\")], a.container, a.pos);\n      scope[scope.length - 1][a.iterator] =\n        gettype(a.container).element || inittype(\"any\");\n    } else if (a.op == \"whiletrue\") {\n      scopepush(a);\n    } else if (a.op == \"whilen\") {\n      scopepush(a);\n    } else if (a.op == \"break\") {\n      //pass\n    } else if (a.op == \"continue\") {\n      //pass\n    } else if (a.op == \"not\") {\n      strayvar.push(inittype(\"bol\"));\n    } else if (a.op == \"reassign\") {\n      let tl = gettype(a.lhs);\n\n      let tlv = tl;\n\n      if (a.lhssubs) {\n        let tls = gettype(a.lhssubs);\n        typeassert(\n          `Reassignment LHS subscript`,\n          [inittype(\"str\"), inittype(\"num\")],\n          a.lhssubs,\n          a.pos\n        );\n\n        if (tls.type == \"str\") {\n          typeassert(\n            `Reassignment LHS container`,\n            [inittype(\"obj\")],\n            a.lhs,\n            a.pos\n          );\n          if (tl.type == \"any\") {\n            tlv = inittype(\"any\");\n          } else {\n            tlv = objfield(tl, a.lhssubs[1].slice(1, -1));\n          }\n        } else {\n          typeassert(\n            `Reassignment LHS container`,\n            [inittype(\"arr\")],\n            a.lhs,\n            a.pos\n          );\n          if (tl.type == \"any\") {\n            tlv = inittype(\"any\");\n          } else {\n            tlv = tl.element;\n          }\n        }\n      }\n      if (a.del) {\n      } else {\n        let tr = gettype(a.rhs);\n        let trv = tr;\n        if (a.rhssubs) {\n          let trs = gettype(a.rhssubs);\n\n          typeassert(\n            `Reassignment RHS subscript`,\n            [inittype(\"str\"), inittype(\"num\")],\n            a.rhssubs,\n            a.pos\n          );\n          if (trs.type == \"str\") {\n            typeassert(\n              `Reassignment RHS container`,\n              [inittype(\"obj\")],\n              a.rhs,\n              a.pos\n            );\n            if (tr.type == \"any\") {\n              trv = inittype(\"any\");\n            } else {\n              trv = objfield(tr, a.rhssubs[1].slice(1, -1));\n            }\n          } else {\n            typeassert(\n              `Reassignment RHS container`,\n              [inittype(\"arr\")],\n              a.rhs,\n              a.pos\n            );\n            if (tr.type == \"any\") {\n              trv = inittype(\"any\");\n            } else {\n              trv = tr.element;\n            }\n          }\n        }\n        assert(`[Type] Reassignment LHS is not declared`, a.pos, tlv);\n        assert(`[Type] Reassignment RHS is not declared`, a.pos, trv);\n        // console.log(a,tlv,trv,tl,tr)\n        let typ = typeEqual(tlv, trv);\n        // console.log(a.lhs,a.rhs,gettype(a.rhs),tl,tr,tlv,trv)\n        assert(\n          `[Type] Reassignment type mismatch: LHS:${printType(\n            tlv\n          )} RHS:${printType(trv)}`,\n          a.pos,\n          typ\n        );\n      }\n    } else if (a.op == \"length\") {\n      typeassert(\n        `Length operator`,\n        [inittype(\"arr\"), inittype(\"str\")],\n        a.container,\n        a.pos\n      );\n      strayvar.push(inittype(\"num\"));\n    } else if (a.op == \"temp\") {\n      strayvar.push(gettype(a.iden));\n    } else if (a.op == \"discard\") {\n      strayvar = [];\n    } else if (a.op == \"take\") {\n      took = a.count;\n    } else if (a.op == \"import\") {\n      imported = imported.concat(a.iden);\n    } else if (a.op == \"try\") {\n      scopepush(a);\n    } else if (a.op == \"catch\") {\n      scopepop(a, \"try\");\n      scopepush(a);\n    } else if (a.op == \"catcherr\") {\n      scopepop(a, \"catch\", \"catcherr\");\n      scopepush(a);\n      if (a.name != undefined) {\n        var x = inittype(\"any\");\n        x.fields = {\n          名: inittype(\"str\"),\n          文: inittype(\"str\"),\n          蹤: inittype(\"str\")\n        };\n        scope[scope.length - 1][a.name] = x;\n      }\n    } else if (a.op == \"tryend\") {\n      scopepop(a, \"catch\", \"catcherr\");\n    } else if (a.op == \"throw\") {\n    } else if (a.op == \"comment\") {\n      //pass\n    } else {\n    }\n  }\n  if (a) {\n    scopepop({ pos: a.pos, op: \"EOF\" }, \"global\");\n  }\n  // console.log(scope.length)\n  // console.dir(signature,{maxArrayLength:null,depth:null})\n\n  // console.log(printSignature(signature))\n  // process.exit()\n  return signature;\n}\n\nexport { typecheck, printType, printSignature };\n","export type TargetLanguages = \"js\" | \"py\" | \"rb\";\nexport type RomanizeSystem = \"none\" | \"pinyin\" | \"unicode\" | \"baxter\";\nexport type LogCallback = (...args: any[]) => void;\nexport type CacheObject = Record<string, string>;\nexport type StandardLibraryObject = Record<string, string> &\n  Record<TargetLanguages, Record<string, string>>;\n\nexport interface CompileOnlyOptions {\n  lang: TargetLanguages;\n  romanizeIdentifiers: RomanizeSystem;\n  resetVarCnt: boolean;\n  logCallback: LogCallback;\n  errorCallback: LogCallback;\n  lib: StandardLibraryObject;\n  strict: Boolean;\n}\n\nexport interface ImportOptions {\n  entryFilepath?: string;\n  importPaths: string | string[];\n  importCache: CacheObject;\n  importContext: Record<string, string | { entry: string; src?: string }>;\n  allowHttp: boolean;\n  trustedHosts: string[];\n  requestTimeout: number;\n}\n\nexport type CompileOptions = CompileOnlyOptions & ImportOptions;\n\nexport interface MarcoOptions {\n  lib: CompileOnlyOptions[\"lib\"];\n  lang: TargetLanguages;\n  importOptions: ImportOptions;\n}\n\nexport interface TranspilerOptions {\n  imports: string[];\n}\n\nexport interface ExecuteOptions {\n  lang: TargetLanguages;\n  outputHanzi: boolean;\n  scoped: boolean;\n  output: LogCallback;\n}\n\nexport type MacroDefinition = [string, string];\n\nexport interface ImportedModule {\n  moduleName: string;\n  src: string;\n  entry?: string;\n}\n\nexport type TokenType =\n  | \"ans\"\n  | \"assgn\"\n  | \"bool\"\n  | \"call\"\n  | \"cmp\"\n  | \"comment\"\n  | \"ctnr\"\n  | \"ctrl\"\n  | \"data\"\n  | \"decl\"\n  | \"discard\"\n  | \"expr\"\n  | \"iden\"\n  | \"import\"\n  | \"lit\"\n  | \"lop\"\n  | \"macro\"\n  | \"mod\"\n  | \"name\"\n  | \"not\"\n  | \"num\"\n  | \"op\"\n  | \"opord\"\n  | \"print\"\n  | \"rassgn\"\n  | \"take\"\n  | \"try\"\n  | \"type\"\n  | \"throw\";\n\nexport type Token = [TokenType, string | undefined, number] | [\"ans\"];\n\nexport interface ASCNodeCommon {\n  pos: number;\n}\n\nexport interface ASCNodeOperator {\n  op: \"op+\" | \"op-\" | \"op/\" | \"op%\";\n  lhs?: Token;\n  rhs?: Token;\n}\n\nexport interface ASCNodeReturn {\n  op: \"return\";\n  value?: Token;\n}\n\nexport interface ASCNodeIf {\n  op: \"if\";\n  test: Token[];\n  elseif?: boolean;\n  not?: boolean;\n}\n\nexport interface ASCNodeFunction {\n  op: \"fun\";\n  arity: number;\n  args: { name: string; type: string }[];\n  elseif?: boolean;\n  not?: boolean;\n}\n\nexport interface ASCNodeWithValue {\n  op: \"not\" | \"whilen\" | \"comment\";\n  value: Token;\n}\n\nexport interface ASCNodeName {\n  op: \"name\";\n  names: string[];\n}\n\nexport interface ASCNodeReassign {\n  op: \"reassign\";\n  lhs: Token;\n  rhs?: Token;\n  lhssubs?: Token;\n  rhssubs?: Token;\n  del?: boolean;\n}\n\nexport interface ASCNodeCat {\n  op: \"cat\";\n  containers: Token[];\n}\n\nexport interface ASCNodeFor {\n  op: \"for\";\n  container: Token;\n  iterator: string;\n}\n\nexport interface ASCNodeCall {\n  op: \"call\";\n  fun: Token;\n  args?: Token[];\n  pop?: boolean;\n}\n\nexport interface ASCNodeLength {\n  op: \"length\";\n  container: Token;\n}\n\nexport interface ASCNodeTake {\n  op: \"take\";\n  count: number;\n}\n\nexport interface ASCNodeTemp {\n  op: \"temp\";\n  iden: Token;\n}\n\nexport interface ASCNodeImport {\n  op: \"import\";\n  file: string;\n  iden: string[];\n}\n\nexport interface ASCNodePush {\n  op: \"push\";\n  container: Token;\n  values: Token[];\n}\n\nexport interface ASCNodeWithError {\n  op: \"catcherr\" | \"throw\";\n  error?: Token;\n  message?: Token;\n  name?: string;\n}\n\nexport interface ASCNodeSubscript {\n  op: \"subscript\";\n  container: Token;\n  value: Token;\n}\n\nexport interface ASCNodeVariable {\n  op: \"var\";\n  count: number;\n  type: string;\n  values: (Token | [])[];\n  public: boolean;\n  names?: string[];\n}\n\nexport interface ASCNodePropertry {\n  op: \"prop\";\n  type: string;\n  name: string;\n  value: Token;\n}\n\nexport interface ASCNodeGlobal {\n  op: \"global\";\n}\n\nexport interface ASCNodeEOF {\n  op: \"EOF\";\n}\n\nexport interface ASCNodeSimple {\n  op:\n    | \"break\"\n    | \"end\"\n    | \"print\"\n    | \"else\"\n    | \"continue\"\n    | \"objbody\"\n    | \"funbody\"\n    | \"whiletrue\"\n    | \"try\"\n    | \"tryend\"\n    | \"catch\"\n    | \"discard\"\n    | \"funend\"\n    | \"objend\";\n}\n\nexport type ASCNode = ASCNodeCommon &\n  (\n    | ASCNodeOperator\n    | ASCNodeSimple\n    | ASCNodeReturn\n    | ASCNodeIf\n    | ASCNodeFunction\n    | ASCNodeWithValue\n    | ASCNodeName\n    | ASCNodeReassign\n    | ASCNodeImport\n    | ASCNodeTake\n    | ASCNodeWithError\n    | ASCNodeTemp\n    | ASCNodeCat\n    | ASCNodeFor\n    | ASCNodeLength\n    | ASCNodePush\n    | ASCNodeCall\n    | ASCNodeSubscript\n    | ASCNodeVariable\n    | ASCNodePropertry\n    | ASCNodeGlobal\n    | ASCNodeEOF\n  );\n\nexport function isASCNodeOperator(\n  node: ASCNode\n): node is ASCNodeCommon & ASCNodeOperator {\n  return node.op.startsWith(\"op\");\n}\n\nexport interface IdenType {\n  type: \"any\" | \"nil\" | \"fun\" | \"obj\" | \"arr\" | \"str\" | \"bol\" | \"num\" | string;\n  name?: string;\n  isarg?: boolean;\n  in?: IdenType;\n  out?: IdenType;\n  element?: IdenType;\n  fields?: {};\n}\n\nexport type TypeScope = Record<string, IdenType>;\n\nexport type TypeSignature = [[number, number, number], TypeScope][];\n","import JS from \"./js\";\nimport PY from \"./py\";\nimport RB from \"./rb\";\nimport { TargetLanguages } from \"../types\";\nimport { BaseTranspiler } from \"./base\";\n\nconst transpilers: Record<TargetLanguages, typeof BaseTranspiler> = {\n  js: JS,\n  py: PY,\n  rb: RB\n};\n\nexport default transpilers;\n","import { BaseTranspiler, ModuleWrapperOptions } from \"./base\";\nimport { TranspilerOptions, ASCNodeOperator } from \"../types\";\n\nexport default class JSCompiler extends BaseTranspiler {\n  protected moduleWrapper({\n    src,\n    scopeName,\n    markerStart,\n    markerEnd\n  }: ModuleWrapperOptions) {\n    return `${markerStart} var ${scopeName} = new function(){ ${src} };${markerEnd}`;\n  }\n\n  transpile(options: Partial<TranspilerOptions> = {}) {\n    const imports = options.imports || [];\n    let js = \"\"; //'\"use strict\";'; (strict mode currently broken)\n    let prevfun = \"\";\n    let prevfunpublic = false;\n    let prevobj = \"\";\n    let prevobjpublic = false;\n    let previsfun = false;\n    let curlvl = 0;\n    let strayvar = [];\n    let took = 0;\n    const errcurlvls = [];\n\n    function getval(x) {\n      if (x === undefined) {\n        return \"\";\n      }\n      if (x[0] == \"ans\") {\n        const ans = strayvar[strayvar.length - 1];\n        strayvar = [];\n        return ans;\n      }\n      return x[1];\n    }\n\n    for (const a of this.asc) {\n      if (a.op == \"var\") {\n        for (let j = 0; j < a.count; j++) {\n          if (a.values[j] === undefined) {\n            a.values[j] = [];\n          }\n          let name = a.names[j];\n          let value = a.values[j][1];\n          if (name === undefined) {\n            name = this.nextTmpVar();\n            strayvar.push(name);\n          }\n          if (value === undefined) {\n            if (a.type == \"arr\") {\n              value = \"[]\";\n            } else if (a.type == \"num\") {\n              value = \"0\";\n            } else if (a.type == \"str\") {\n              value = `\"\"`;\n            } else if (a.type == \"bol\") {\n              value = \"false\";\n            } else if (a.type == \"fun\") {\n              value = \"_=>{}\";\n              prevfun = name;\n              prevfunpublic = a.public;\n            } else if (a.type == \"obj\") {\n              value = \"{}\";\n              prevobj = name;\n              prevobjpublic = a.public;\n            } else if (a.type == \"any\") {\n              value = \"void 0\";\n            }\n          }\n          js += `var ${name}=${a.public ? `this.${name}=` : \"\"}${value};`;\n        }\n      } else if (a.op == \"print\") {\n        js += `console.log(${strayvar.join(\",\")});`;\n        strayvar = [];\n      } else if (a.op == \"fun\") {\n        js += `${prevfun}=${prevfunpublic ? `this.${prevfun}=` : \"\"}${\n          a.args.length == 0\n            ? \"()=>\"\n            : a.args.map(arg => `${arg.name}=>`).join(\"\")\n        }{`;\n        curlvl++;\n      } else if (a.op == \"funbody\") {\n        if (!previsfun) {\n          js += `${prevfun}=${prevfunpublic ? `this.${prevfun}=` : \"\"}()=>{`;\n          curlvl++;\n        }\n      } else if (a.op == \"funend\") {\n        js += \"};\";\n        curlvl--;\n      } else if (a.op == \"objend\") {\n        js += \"};\";\n        curlvl--;\n      } else if (a.op == \"objbody\") {\n        js += `${prevobjpublic ? `${prevobj} = this.` : \"\"}${prevobj}={`;\n        curlvl++;\n      } else if (a.op == \"prop\") {\n        js += `${a.name}:${a.value[1]},`;\n      } else if (a.op == \"end\") {\n        js += \"};\";\n        curlvl--;\n      } else if (a.op == \"if\") {\n        if (a.elseif) {\n          js += \"}else \";\n          curlvl--;\n        }\n        js += \"if (\";\n        if (a.not) {\n          js += \"!(\";\n        }\n        let j = 0;\n        while (j < a.test.length) {\n          if (a.test[j][0] == \"cmp\") {\n            js += a.test[j][1];\n          } else if (a.test[j][0] == \"ctnr\") {\n            if (a.test[j][1] == \"subs\") {\n              if (a.test[j + 1][1] == \"rest\") {\n                js += \".slice(1)\";\n              } else {\n                if (a.test[j + 1][0] == \"lit\") {\n                  js += \"[\" + a.test[j + 1][1] + \"]\";\n                } else {\n                  js += \"[\" + a.test[j + 1][1] + \"-1]\";\n                }\n              }\n              j++;\n            } else if (a.test[j][1] == \"len\") {\n              js += \".length\";\n            }\n          } else {\n            js += getval(a.test[j]);\n          }\n          j++;\n        }\n        if (a.not) {\n          js += \")\";\n        }\n        js += \"){\";\n        curlvl++;\n      } else if (a.op == \"else\") {\n        js += \"}else{\";\n      } else if (a.op == \"return\") {\n        js += `return ${getval(a.value)};`;\n      } else if (a.op.startsWith(\"op\")) {\n        const _a = a as ASCNodeOperator;\n        const lhs = getval(_a.lhs);\n        const rhs = getval(_a.rhs);\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${lhs}${a.op.slice(2)}${rhs};`;\n        strayvar.push(vname);\n      } else if (a.op == \"name\") {\n        for (let j = 0; j < a.names.length; j++) {\n          js += `var ${a.names[j]}=${\n            strayvar[strayvar.length - a.names.length + j]\n          };`;\n        }\n        strayvar = strayvar.slice(0, strayvar.length - a.names.length);\n      } else if (a.op == \"call\") {\n        if (a.pop) {\n          let jj = \"\";\n          for (let j = 0; j < took; j++) {\n            jj += `(${strayvar[strayvar.length - took + j]})`;\n          }\n          strayvar = strayvar.slice(0, strayvar.length - took);\n          took = 0;\n          const vname = this.nextTmpVar();\n          if (!jj.length) {\n            jj = \"()\";\n          }\n          js += `const ${vname}=${getval(a.fun)}` + jj + \";\";\n          strayvar.push(vname);\n        } else {\n          const vname = this.nextTmpVar();\n          js += `const ${vname}=${getval(a.fun)}(${a.args\n            .map(x => getval(x))\n            .join(\")(\")});`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"subscript\") {\n        const idx = getval(a.value);\n        if (idx == \"rest\") {\n          const vname = this.nextTmpVar();\n          js += `const ${vname}=${getval(a.container)}.slice(1);`;\n          strayvar.push(vname);\n        } else {\n          const vname = this.nextTmpVar();\n          js += `const ${vname}=${getval(a.container)}[${idx}${\n            a.value[0] == \"lit\" ? \"\" : \"-1\"\n          }];`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"cat\") {\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${getval(a.containers[0])}.concat(${a.containers\n          .slice(1)\n          .map(x => x[1])\n          .join(\").concat(\")});`;\n        strayvar.push(vname);\n      } else if (a.op == \"push\") {\n        js += `${getval(a.container)}.push(${a.values\n          .map(x => getval(x))\n          .join(\",\")});`;\n      } else if (a.op == \"for\") {\n        js += `for(let ${a.iterator} of ${getval(a.container)}){`;\n        curlvl++;\n      } else if (a.op == \"whiletrue\") {\n        js += \"while(true){\";\n        curlvl++;\n      } else if (a.op == \"whilen\") {\n        const v = this.randVar();\n        js += `for(let ${v}=0;${v}<${getval(a.value)};${v}++){`;\n        curlvl++;\n      } else if (a.op == \"break\") {\n        js += \"break;\";\n      } else if (a.op == \"continue\") {\n        js += \"continue;\";\n      } else if (a.op == \"not\") {\n        const v = getval(a.value);\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=!${v};`;\n        strayvar.push(vname);\n      } else if (a.op == \"reassign\") {\n        if (a.del == true) {\n          const lhs = getval(a.lhs);\n          js += `delete ${lhs}[${a.lhssubs[1]}${\n            a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"\n          }];`;\n        } else {\n          let rhs = getval(a.rhs);\n          let lhs = getval(a.lhs);\n          if (a.lhssubs) {\n            lhs += `[${a.lhssubs[1]}${a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          if (a.rhssubs) {\n            rhs += `[${a.rhssubs[1]}${a.rhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          js += `${lhs}=${rhs};`;\n        }\n      } else if (a.op == \"length\") {\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${getval(a.container)}.length;`;\n        strayvar.push(vname);\n      } else if (a.op == \"temp\") {\n        const vname = this.nextTmpVar();\n        js += `const ${vname}=${a.iden[1]};`;\n        strayvar.push(vname);\n      } else if (a.op == \"discard\") {\n        strayvar = [];\n      } else if (a.op == \"take\") {\n        took = a.count;\n      } else if (a.op == \"import\") {\n        const f = a.file.replace(/\"/g, \"\");\n        for (const id of a.iden) {\n          js += `var ${id}=${f}.${id};`;\n        }\n        imports.push(f);\n      } else if (a.op == \"try\") {\n        js += `try{`;\n        curlvl++;\n      } else if (a.op == \"catch\") {\n        const r = this.randVar();\n        errcurlvls.push([curlvl, r]);\n        js += `}catch(${r}){`;\n        js += `${r}['名']=({'SyntaxError':'文法','RangeError':'逾界','TypeError':'異類','ReferenceError':'虛指'}[${r}.name])||${r}.name;`;\n        js += `${r}['文']=${r}.message; ${r}['蹤']=${r}.stack;`;\n        strayvar = [];\n      } else if (a.op == \"catcherr\") {\n        const ec = errcurlvls[errcurlvls.length - 1];\n        if (a.error === undefined) {\n          if (curlvl != ec[0]) {\n            js += `}else{`;\n          }\n        } else {\n          if (curlvl != ec[0]) {\n            js += `}else `;\n            curlvl--;\n          }\n          js += `if (${ec[1]}.name===${a.error[1]}||${ec[1]}['名']===${a.error[1]}){`;\n          curlvl++;\n        }\n        if (a.name != undefined) {\n          js += `const ${a.name}=${ec[1]};`;\n        }\n      } else if (a.op == \"tryend\") {\n        const ec = errcurlvls.pop();\n        if (curlvl != ec[0]) {\n          js += `}`;\n          curlvl--;\n        }\n        js += `}`;\n        curlvl--;\n        strayvar = [];\n      } else if (a.op == \"throw\") {\n        const r = this.randVar();\n        js += `{const ${r} = new Error(); ${r}.name=${\n          a.error[1]\n        }; ${r}.message=${a.message ? getval(a.message) : '\"\"'}; throw ${r};}`;\n      } else if (a.op == \"comment\") {\n        js += `/*${getval(a.value)}*/`;\n      } else {\n        console.log(a.op);\n      }\n      previsfun = a.op == \"fun\";\n    }\n    return { result: js, imports };\n  }\n}\n","import { BaseTranspiler, ModuleWrapperOptions } from \"./base\";\nimport { TranspilerOptions, ASCNodeOperator } from \"../types\";\n\nexport default class PythonTranspiler extends BaseTranspiler {\n  protected moduleWrapper({\n    src,\n    markerStart,\n    markerEnd\n  }: ModuleWrapperOptions) {\n    return `#${markerStart}\\n${src}\\n#${markerEnd}\\n`;\n  }\n\n  transpile(options: Partial<TranspilerOptions> = {}) {\n    var imports = options.imports || [];\n    var lop = {\n      \"||\": \" or \",\n      \"&&\": \" and \"\n    };\n\n    var py = this.lib;\n    var prevfun = \"\";\n    var prevobj = \"\";\n    var prevobjpublic = false;\n    var curlvl = 0;\n    var strayvar = [];\n    var funcurlvls = [];\n    var funcurnames = [];\n    var took = 0;\n    var globals = [];\n    var locals = [];\n    var funargs = [];\n\n    const getval = x => {\n      if (x === undefined) {\n        return \"\";\n      }\n      if (x[0] == \"ans\") {\n        var ans = strayvar[strayvar.length - 1];\n        strayvar = [];\n        return ans;\n      }\n      if (x[1] === undefined) {\n        return undefined;\n      }\n      if (x[1].toString() == \"true\") {\n        return \"True\";\n      }\n      if (x[1].toString() == \"false\") {\n        return \"False\";\n      }\n      return x[1];\n    };\n\n    for (var i = 0; i < this.asc.length; i++) {\n      var a = this.asc[i];\n      if (a.op == \"var\") {\n        for (var j = 0; j < a.count; j++) {\n          if (a.values[j] === undefined) {\n            a.values[j] = [];\n          }\n          var name = a.names[j];\n          var value = getval(a.values[j]);\n          if (name === undefined) {\n            name = this.nextTmpVar();\n            strayvar.push(name);\n          }\n          if (value === undefined) {\n            if (a.type == \"arr\") {\n              value = \"Ctnr()\";\n            } else if (a.type == \"num\") {\n              value = \"0\";\n            } else if (a.type == \"str\") {\n              value = `\"\"`;\n            } else if (a.type == \"bol\") {\n              value = \"False\";\n            } else if (a.type == \"fun\") {\n              value = \"lambda _:0\";\n              prevfun = name;\n            } else if (a.type == \"obj\") {\n              value = \"{}\";\n              prevobj = name;\n              prevobjpublic = a.public;\n            }\n          }\n          py += \"\\t\".repeat(curlvl);\n          py += `${name}=${value}\\n`;\n          if (name[0] != \"_\") {\n            if (curlvl == 0) {\n              globals.push(name);\n            } else {\n              if (!locals.length) {\n                locals.push([]);\n              }\n              locals[locals.length - 1].push(name);\n            }\n          }\n        }\n      } else if (a.op == \"print\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `print(`;\n        for (var j = 0; j < strayvar.length; j++) {\n          py += `${strayvar[j]}`;\n          if (j != strayvar.length - 1) {\n            py += \",\";\n          }\n        }\n        py += \");\\n\";\n        strayvar = [];\n      } else if (a.op == \"fun\") {\n        funcurlvls.push(curlvl);\n        py += \"\\t\".repeat(curlvl);\n        py += `def ${prevfun} (`;\n        for (var j = 0; j < a.arity; j++) {\n          curlvl++;\n          py += `${a.args[j].name}):\\n`;\n          funargs.push(a.args[j].name);\n\n          if (j != a.arity - 1) {\n            py += \"\\t\".repeat(curlvl);\n            var r = this.randVar();\n            py += `def ${r}(`;\n            funcurnames.push(r);\n          }\n        }\n        for (var j = 0; j < a.arity - 1; j++) {\n          py += \"\\t\".repeat(curlvl);\n          py += \"nonlocal \" + a.args[j].name + \";\\n\";\n        }\n      } else if (a.op == \"funbody\") {\n        if (this.asc[i - 1].op != \"fun\") {\n          funcurlvls.push(curlvl);\n          py += \"\\t\".repeat(curlvl);\n          py += `def ` + prevfun + \"():\\n\";\n          curlvl++;\n        }\n        // py += \"):\\n\";\n        for (var j = 0; j < globals.length; j++) {\n          if (funargs.includes(globals[j])) {\n            continue;\n          }\n          py += \"\\t\".repeat(curlvl);\n          py += \"global \" + globals[j] + \";\\n\";\n        }\n        if (locals.length) {\n          for (var j = 0; j < locals[locals.length - 1].length; j++) {\n            py += \"\\t\".repeat(curlvl);\n            py += \"nonlocal \" + locals[locals.length - 1][j] + \";\\n\";\n          }\n        }\n        locals.push([]);\n        funargs = [];\n      } else if (a.op == \"funend\") {\n        var cl = funcurlvls.pop();\n        var n = curlvl - cl - 1;\n        for (var j = 0; j < n; j++) {\n          curlvl--;\n          py += \"\\t\".repeat(curlvl);\n          py += `return ${funcurnames.pop()};\\n`;\n        }\n        locals.pop();\n        py += \"\\n\";\n        curlvl--;\n      } else if (a.op == \"objend\") {\n        py += \"};\\n\";\n      } else if (a.op == \"objbody\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `${prevobjpublic ? `${prevobj} = this.` : \"\"}${prevobj}={`;\n      } else if (a.op == \"prop\") {\n        py += `${a.name}:${a.value[1]},`;\n      } else if (a.op == \"end\") {\n        py += \"\\n\";\n        curlvl--;\n      } else if (a.op == \"if\") {\n        py += \"\\n\";\n        py += \"\\t\".repeat(curlvl);\n        py += \"if \";\n        var j = 0;\n        while (j < a.test.length) {\n          if (a.test[j][0] == \"cmp\") {\n            py += a.test[j][1];\n          } else if (a.test[j][0] == \"ctnr\") {\n            if (a.test[j][1] == \"subs\") {\n              if (a.test[j + 1][1] == \"rest\") {\n                py += \".slice(1)\";\n              } else {\n                if (a.test[j + 1][0] == \"lit\") {\n                  py += \"[\" + a.test[j + 1][1] + \"]\";\n                } else {\n                  py += \"[\" + a.test[j + 1][1] + \"-1]\";\n                }\n              }\n              j++;\n            } else if (a.test[j][1] == \"len\") {\n              py += \".length\";\n            }\n          } else {\n            py += getval(a.test[j]);\n          }\n          j++;\n        }\n        py += \":\\n\";\n        curlvl++;\n      } else if (a.op == \"else\") {\n        py += \"\\n\";\n        py += \"\\t\".repeat(curlvl - 1);\n        py += \"else:\\n\";\n      } else if (a.op == \"return\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `return ${getval(a.value)}\\n`;\n      } else if (a.op.startsWith(\"op\")) {\n        let _a = a as ASCNodeOperator;\n        py += \"\\t\".repeat(curlvl);\n        var lhs = getval(_a.lhs);\n        var rhs = getval(_a.rhs);\n        var vname = this.nextTmpVar();\n        py += `${vname}=${lhs}${\n          lop[a.op.slice(2)] ? lop[a.op.slice(2)] : a.op.slice(2)\n        }${rhs};\\n`;\n        strayvar.push(vname);\n      } else if (a.op == \"name\") {\n        for (var j = 0; j < a.names.length; j++) {\n          py += \"\\n\";\n          py += \"\\t\".repeat(curlvl);\n          py += `${a.names[j]}=${\n            strayvar[strayvar.length - a.names.length + j]\n          };\\n`;\n        }\n        strayvar = strayvar.slice(0, strayvar.length - a.names.length);\n      } else if (a.op == \"call\") {\n        py += \"\\t\".repeat(curlvl);\n        if (a.pop) {\n          var jj = \"\";\n          for (var j = 0; j < took; j++) {\n            jj += `(${strayvar[strayvar.length - took + j]})`;\n          }\n          strayvar = strayvar.slice(0, strayvar.length - took);\n          took = 0;\n          var vname = this.nextTmpVar();\n          if (!jj.length) {\n            jj = \"()\";\n          }\n          py += `${vname}=${getval(a.fun)}` + jj + \";\\n\";\n          strayvar.push(vname);\n        } else {\n          var vname = this.nextTmpVar();\n          py += `${vname}=${getval(a.fun)}(${a.args\n            .map(x => getval(x))\n            .join(\")(\")});\\n`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"subscript\") {\n        var idx = getval(a.value);\n        var vname = this.nextTmpVar();\n        py += \"\\t\".repeat(curlvl);\n        if (idx == \"rest\") {\n          py += `${vname}=${getval(a.container)}.slice(1);\\n`;\n        } else {\n          py += `${vname}=${getval(a.container)}[${idx}${\n            a.value[0] == \"lit\" ? \"\" : \"-1\"\n          }];\\n`;\n        }\n        strayvar.push(vname);\n      } else if (a.op == \"cat\") {\n        var vname = this.nextTmpVar();\n        py += \"\\t\".repeat(curlvl);\n        py +=\n          `${vname}=${getval(a.containers[0])}.concat(` +\n          a.containers\n            .slice(1)\n            .map(x => x[1])\n            .join(\").concat(\") +\n          \");\\n\";\n        strayvar.push(vname);\n      } else if (a.op == \"push\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `${getval(a.container)}.push(${a.values\n          .map(x => getval(x))\n          .join(\",\")})\\n`;\n      } else if (a.op == \"for\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `for ${a.iterator} in ${getval(a.container)}:\\n`;\n        curlvl++;\n      } else if (a.op == \"whiletrue\") {\n        py += \"\\t\".repeat(curlvl);\n        py += \"while (True):\\n\";\n        curlvl++;\n      } else if (a.op == \"whilen\") {\n        py += \"\\t\".repeat(curlvl);\n        let v = this.randVar();\n        py += `for ${v} in range(${getval(a.value)}):\\n`;\n        curlvl++;\n      } else if (a.op == \"break\") {\n        py += \"\\t\".repeat(curlvl);\n        py += \"break\\n\";\n      } else if (a.op == \"not\") {\n        py += \"\\t\".repeat(curlvl);\n        var v = getval(a.value);\n        var vname = this.nextTmpVar();\n        py += `${vname}=not ${v};`;\n        strayvar.push(vname);\n      } else if (a.op == \"reassign\") {\n        py += \"\\n\";\n\n        py += \"\\t\".repeat(curlvl);\n        if (a.del == true) {\n          var lhs = getval(a.lhs);\n          py += `del ${lhs}[${a.lhssubs[1]}${\n            a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"\n          }];\\n`;\n        } else {\n          var rhs = getval(a.rhs);\n          var lhs = getval(a.lhs);\n          if (a.lhssubs) {\n            lhs += `[${a.lhssubs[1]}${a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          if (a.rhssubs) {\n            rhs += `[${a.rhssubs[1]}${a.rhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n          }\n          py += `${lhs}=${rhs};\\n`;\n        }\n      } else if (a.op == \"temp\") {\n        py += \"\\t\".repeat(curlvl);\n        var vname = this.nextTmpVar();\n        py += `${vname}=${a.iden[1]};\\n`;\n        strayvar.push(vname);\n      } else if (a.op == \"discard\") {\n        strayvar = [];\n      } else if (a.op == \"take\") {\n        took = a.count;\n      } else if (a.op == \"import\") {\n        var f = a.file.replace(/\"/g, \"\");\n        for (var j = 0; j < a.iden.length; j++) {\n          py += `${a.iden[j]}=${a.iden[j]};`;\n        }\n        imports.push(f);\n      } else if (a.op == \"length\") {\n        py += \"\\t\".repeat(curlvl);\n        var vname = this.nextTmpVar();\n        var val = getval(a.container);\n        py += `${vname}=${val}.length if type(${val}) != str else len(${val});`;\n        strayvar.push(vname);\n      } else if (a.op == \"comment\") {\n        py += \"\\t\".repeat(curlvl);\n        py += `\"\"\" ${getval(a.value)} \"\"\"\\n`;\n      } else {\n        console.log(a.op);\n      }\n      // py+=\"\\n\"\n    }\n    return { result: py, imports };\n  }\n\n  lib = `# -*- coding: utf-8 -*-\n  class Ctnr:\n    def __init__(self):self.dict = dict();self.length = 0;self.it = -1;\n    def push(self,*args):\n      for arg in args:\n        self.dict[str(self.length)]=arg; self.length+=1\n    def __getitem__(self,i):\n      try: return self.dict[str(i)]\n      except: return None\n    def __setitem__(self,i,x):\n      self.dict[str(i)]=x\n      inti = None\n      try:\n        inti = int(i)\n        if (abs(inti - float(i))>0.0001): inti=None\n      except: pass\n      if (inti != None):\n        self.length=inti+1\n        for j in range(0,self.length):\n          try:  self.dict[str(j)]\n          except: self.dict[str(j)]=None\n    def slice(self,i):\n      ret = Ctnr();\n      for i in range(i,self.length): ret.push(self[i])\n      return ret\n    def concat(self,other):\n      ret = Ctnr();\n      for i in range(0,self.length): ret.push(self[i])\n      for i in range(0,other.length): ret.push(other[i])\n      return ret\n    def __str__(self):\n      if (len(self.dict.keys())==self.length):\n        ret = \"[\"\n        for k in range(0,self.length):\n          v = self[k]\n          if (isinstance(v,Ctnr)): ret += v.__str__()\n          else: ret += str(v)\n          ret+=\",\"\n        ret += \"]\"\n        return ret;\n      else:\n        ret = \"{\"\n        for k in self.dict.keys():\n          ret += str(k)+\":\"\n          v = self.dict[k]\n          if (isinstance(v,Ctnr)): ret += v.__str__()\n          else: ret += str(v)\n          ret+=\",\"\n        ret += \"}\"\n        return ret;\n    def __repr__(self):\n      return self.__str__()\n    def __iter__(self):\n      self.it = -1;\n      return self\n    def __next__(self):\n      self.it += 1\n      if (self.it >= self.length): raise StopIteration()\n      return self[self.it]\n  globals()['Ctnr']=Ctnr;\n  class JSON:\n    @staticmethod\n    def stringify(x):\n      return x;\n  #####`;\n}\n","import { BaseTranspiler, ModuleWrapperOptions } from \"./base\";\nimport { TranspilerOptions, ASCNodeOperator } from \"../types\";\n\nexport default class RubyCompiler extends BaseTranspiler {\n  protected moduleWrapper({\n    src,\n    markerStart,\n    markerEnd\n  }: ModuleWrapperOptions) {\n    return `#${markerStart}\\n${src}\\n#${markerEnd}\\n`;\n  }\n\n  rename(name) {\n    return name && `${name.toLowerCase()}`;\n  }\n\n  lowerAllPinYinAndMakeItGlobal(asc) {\n    for (let i = 0; i < asc.length; i++) {\n      const item = asc[i];\n      switch (item.op) {\n        case \"var\":\n        case \"name\":\n          item.names = item.names.map(e => this.rename(e));\n          break;\n        case \"call\":\n          if (item.fun[0] == \"iden\") {\n            item.fun[1] = this.rename(item.fun[1]);\n          }\n          item.args = item.args.map(arg => {\n            if (arg[0] == \"iden\") arg[1] = this.rename(arg[1]);\n            return arg;\n          });\n          break;\n        case \"fun\":\n          item.args = item.args.map(arg => {\n            arg.name = this.rename(arg.name);\n            return arg;\n          });\n          break;\n        case \"return\":\n          if (item.value[0] == \"iden\")\n            item.value[1] = this.rename(item.value[1]);\n          break;\n        case \"cat\":\n          item.containers = item.containers.map(e => this.rename(e));\n          break;\n        case \"for\":\n          if (item.container[0] == \"iden\") {\n            item.container[1] = this.rename(item.container[1]);\n          }\n          item.iterator = this.rename(item.iterator);\n          break;\n        case \"push\":\n        case \"length\":\n          if (item.container[0] == \"iden\") {\n            item.container[1] = this.rename(item.container[1]);\n          }\n          break;\n        case \"subscript\":\n          if (item.container[0] == \"iden\") {\n            item.container[1] = this.rename(item.container[1]);\n          }\n          if (item.value[0] == \"iden\") this.rename(item.value[1]);\n          break;\n        case \"if\":\n          item.test = item.test.map(condition => {\n            if (condition[0] == \"iden\")\n              condition[1] = this.rename(condition[1]);\n            return condition;\n          });\n        default:\n          break;\n      }\n      if (item.values) {\n        item.values.forEach(value => {\n          if (value[0] == \"iden\") value[1] = this.rename(value[1]);\n        });\n      }\n      [\"rhs\", \"lhs\", \"lhssubs\", \"value\"].forEach(key => {\n        if (item[key] && item[key][0] == \"iden\")\n          item[key][1] = this.rename(item[key][1]);\n      });\n    }\n    return asc;\n  }\n\n  transpile(options: Partial<TranspilerOptions> = {}) {\n    let imports = options.imports || [];\n    let asc = this.asc;\n    let lop = {\n      \"||\": \" or \",\n      \"&&\": \" and \"\n    };\n    let rb = this.lib;\n    var prevfun = \"\";\n    var prevobj = \"\";\n    var prevobjpublic = false;\n    let curlvl = 0;\n    let strayvar = [];\n    let lambdaList = [];\n    let methodIndex = 0;\n    let took = 0;\n    asc = this.lowerAllPinYinAndMakeItGlobal(asc);\n    const getval = x => {\n      if (!x) return \"\";\n      if (x[0] == \"ans\") {\n        var ans = strayvar[strayvar.length - 1];\n        strayvar = [];\n        return ans;\n      }\n      if (x[0] == \"iden\") return this.rename(x[1]);\n      if (x[1] === undefined) return \"nil\";\n      return x[1];\n    };\n    for (let i = 0; i < asc.length; i++) {\n      let a = asc[i];\n      if (a.op == \"var\") {\n        for (let j = 0; j < a.count; j++) {\n          if (a.values[j] === undefined) {\n            a.values[j] = [];\n          }\n          let name = a.names[j];\n          if (a.type == \"fun\") {\n            prevfun = name;\n            continue;\n          }\n          let value = getval(a.values[j]);\n          if (name === undefined) {\n            name = this.nextTmpVar();\n            strayvar.push(name);\n          }\n          if ([undefined, \"nil\"].includes(value)) {\n            if (a.type == \"arr\") {\n              value = \"Ctnr.new\";\n            } else if (a.type == \"num\") {\n              value = \"0\";\n            } else if (a.type == \"str\") {\n              value = `\"\"`;\n            } else if (a.type == \"bol\") {\n              value = \"false\";\n            }\n          }\n          rb += \"\\t\".repeat(curlvl);\n          rb += `${name}=${value}\\n`;\n        }\n      } else if (a.op == \"print\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `p([`;\n        rb += strayvar.join(\", \");\n        rb += \"].join)\\n\";\n        strayvar = [];\n      } else if (a.op == \"fun\") {\n        rb += \"\\t\".repeat(curlvl);\n        let argsStr = a.args.map(arg => arg.name).join(\",\");\n        if (methodIndex == 0) {\n          rb += `def ${prevfun}(${argsStr})`;\n        } else {\n          lambdaList.push(prevfun);\n          rb += `${prevfun} = proc {|${argsStr}|`;\n        }\n        methodIndex++;\n      } else if (a.op == \"funbody\") {\n        rb += \"\\t\".repeat(curlvl);\n        if (asc[i - 1].op != \"fun\") {\n          if (methodIndex == 0) {\n            rb += `def ${prevfun}()`;\n          } else {\n            lambdaList.push(prevfun);\n            rb += `${prevfun} = proc {|_|`;\n          }\n          methodIndex++;\n        }\n        rb += \"\\n\";\n        curlvl++;\n      } else if (a.op == \"funend\") {\n        curlvl--;\n        methodIndex--;\n        if (methodIndex == 0) {\n          rb += `${\"\\t\".repeat(curlvl)}end\\n`;\n        } else {\n          rb += `${\"\\t\".repeat(curlvl)}}`;\n        }\n        rb += \"\\n\";\n      } else if (a.op == \"end\") {\n        curlvl--;\n        rb += `${\"\\t\".repeat(curlvl)}end \\n`;\n      } else if (a.op == \"if\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += \"if \";\n        let j = 0;\n        while (j < a.test.length) {\n          if (a.test[j][0] == \"cmp\") {\n            rb += a.test[j][1];\n          } else if (a.test[j][0] == \"ctnr\") {\n            if (a.test[j][1] == \"subs\") {\n              if (a.test[j + 1][1] == \"rest\") {\n                rb += \".slice(1)\";\n              } else {\n                if (a.test[j + 1][0] == \"lit\") {\n                  rb += \"[\" + a.test[j + 1][1] + \"]\";\n                } else {\n                  rb += \"[\" + a.test[j + 1][1] + \"-1]\";\n                }\n              }\n              j++;\n            } else if (a.test[j][1] == \"len\") {\n              rb += \".length\";\n            }\n          } else {\n            rb += a.test[j][1];\n          }\n          j++;\n        }\n        rb += \"\\n\";\n        curlvl++;\n      } else if (a.op == \"else\") {\n        rb += \"\\t\".repeat(curlvl - 1);\n        rb += \"else\\n\";\n      } else if (a.op == \"return\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `return ${getval(a.value)}\\n`;\n      } else if (a.op.startsWith(\"op\")) {\n        rb += \"\\t\".repeat(curlvl);\n        let _a = a as ASCNodeOperator;\n        var lhs = getval(_a.lhs);\n        var rhs = getval(_a.rhs);\n        var vname = this.nextTmpVar();\n        rb += `${vname}=${lhs}${a.op.slice(2)}${rhs};`;\n        strayvar.push(vname);\n      } else if (a.op == \"name\") {\n        for (var j = 0; j < a.names.length; j++) {\n          rb += \"\\n\";\n          rb += \"\\t\".repeat(curlvl);\n          rb += `${a.names[j]}=${\n            strayvar[strayvar.length - a.names.length + j]\n          };`;\n        }\n        strayvar = strayvar.slice(0, strayvar.length - a.names.length);\n      } else if (a.op == \"call\") {\n        rb += \"\\t\".repeat(curlvl);\n        if (a.pop) {\n          var jj = \"\";\n          for (var j = 0; j < took; j++) {\n            jj += `(${strayvar[strayvar.length - took + j]})`;\n          }\n          strayvar = strayvar.slice(0, strayvar.length - took);\n          took = 0;\n          var vname = this.nextTmpVar();\n          if (!jj.length) {\n            jj = \"()\";\n          }\n          rb += `${vname}=${getval(a.fun)}` + jj + \";\";\n          strayvar.push(vname);\n        } else {\n          var vname = this.nextTmpVar();\n          rb += `${vname}=${getval(a.fun)}(${a.args\n            .map(x => getval(x))\n            .join(\")(\")});`;\n          strayvar.push(vname);\n        }\n      } else if (a.op == \"subscript\") {\n        var idx = getval(a.value);\n        var vname = this.nextTmpVar();\n        if (idx == \"rest\") {\n          rb += `${vname}=${getval(a.container)}.slice(1);`;\n        } else {\n          rb += `${vname}=${getval(a.container)}[${idx}${\n            a.value[0] == \"lit\" ? \"\" : \"-1\"\n          }];`;\n        }\n        strayvar.push(vname);\n      } else if (a.op == \"cat\") {\n        var vname = this.nextTmpVar();\n        rb +=\n          `${vname}=${getval(a.containers[0])}.concat(` +\n          a.containers\n            .slice(1)\n            .map(x => x[1])\n            .join(\").concat(\") +\n          \");\";\n        strayvar.push(vname);\n      } else if (a.op == \"push\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `${getval(a.container)}.push(${a.values\n          .map(x => getval(x))\n          .join(\",\")})\\n`;\n      } else if (a.op == \"for\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `${getval(a.container)}.each do |${a.iterator.toLowerCase()}|\\n`;\n        curlvl++;\n      } else if (a.op == \"whiletrue\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += \"while true do\\n\";\n        curlvl++;\n      } else if (a.op == \"whilen\") {\n        rb += \"\\t\".repeat(curlvl);\n        let v = this.randVar();\n        rb += `${getval(a.value)}.times do |${v}|\\n`;\n        curlvl++;\n      } else if (a.op == \"break\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += \"break\\n\";\n      } else if (a.op == \"not\") {\n        rb += \"\\t\".repeat(curlvl);\n        var v = getval(a.value);\n        var vname = this.nextTmpVar();\n        rb += `${vname}=!${v};`;\n        strayvar.push(vname);\n      } else if (a.op == \"reassign\") {\n        rb += \"\\t\".repeat(curlvl);\n        let rhs = getval(a.rhs);\n        let lhs = getval(a.lhs);\n        if (a.lhssubs) {\n          lhs += `[${a.lhssubs[1]}${a.lhssubs[0] == \"lit\" ? \"\" : \"-1\"}]`;\n        }\n        rb += `${lhs}=${rhs}\\n`;\n      } else if (a.op == \"temp\") {\n        var vname = this.nextTmpVar();\n        rb += `${vname}=${a.iden[1]};`;\n        strayvar.push(vname);\n      } else if (a.op == \"discard\") {\n        strayvar = [];\n      } else if (a.op == \"take\") {\n        took = a.count;\n      } else if (a.op == \"import\") {\n        var f = a.file.replace(/\"/g, \"\");\n        for (var j = 0; j < a.iden.length; j++) {\n          rb += `${a.iden[j]}=${f}.${a.iden[j]};`;\n        }\n        imports.push(f);\n      } else if (a.op == \"length\") {\n        var vname = this.nextTmpVar();\n        rb += `${vname}=${getval(a.container)}.length;`;\n        strayvar.push(vname);\n      } else if (a.op == \"comment\") {\n        rb += \"\\t\".repeat(curlvl);\n        rb += `# ${getval(a.value)}\\n`;\n        rb += \"\\t\".repeat(curlvl);\n      } else {\n      }\n    }\n    return { result: rb, imports };\n  }\n\n  lib = `# encoding: UTF-8\n  require 'forwardable'\n    class Ctnr\n      extend Forwardable\n      attr_accessor :dict, :length, :it\n      def initialize()\n        @dict = {}\n        @length = 0\n        @it = -1\n      end\n      def push(*args)\n        args.each do |arg|\n          @dict[@length.to_s] = arg\n          @length += 1\n        end\n      end\n      def [](i)\n        @dict[i.to_s]\n      end\n      def []=(i,x)\n        @dict[i.to_s] = x\n      end\n      def slice(i)\n        result = Ctnr.new;\n        i.times {|index| result.push(self[index])}\n        return result\n      end\n      def concat(other)\n        other.length.times {|i| push(other[i]) }\n        self\n      end\n      def values\n        @dict.values\n      end\n      def to_s\n        \"[#{@dict.values.join(\", \")}]\"\n      end\n      def_delegators :values, :each\n    end\n    module Math\n      def self.random(*args)\n        rand(*args)\n      end\n      def self.floor(number)\n        number.floor\n      end\n    end\n  #####\n  `;\n}\n","import { TargetLanguages, LogCallback, ExecuteOptions } from \"./types\";\nimport { num2hanzi, bool2hanzi } from \"./parser\";\n\nexport function isLangSupportedForEval(lang: TargetLanguages) {\n  if (lang !== \"js\")\n    throw new Error(\n      `Executing for target language \"${lang}\" is not supported in current environment`\n    );\n  return true;\n}\n\nfunction hanzinizeOuput(value: string) {\n  if (typeof value == \"number\") {\n    return num2hanzi(value);\n  } else if (typeof value == \"boolean\") {\n    return bool2hanzi(value);\n  } else if (Array.isArray(value)) {\n    return value.map(i => hanzinizeOuput(i)).join(\"。\");\n  } else {\n    return value;\n  }\n}\n\nexport function outputHanziWrapper(log: LogCallback, outputHanzi: boolean) {\n  return function output(...args) {\n    log(...args.map(i => (outputHanzi ? hanzinizeOuput(i) : i)));\n  };\n}\n\nexport function evalCompiled(\n  compiledCode: string,\n  options: Partial<ExecuteOptions> = {}\n) {\n  const {\n    outputHanzi = true,\n    scoped = false,\n    lang = \"js\",\n    output = console.log\n  } = options;\n\n  isLangSupportedForEval(lang);\n\n  let code = compiledCode;\n\n  (() => {\n    const _console_log = console.log;\n    console.log = outputHanziWrapper(output, outputHanzi);\n    try {\n      if (!scoped && \"window\" in this) {\n        window.eval(code);\n      } else {\n        eval(code);\n      }\n    } catch (e) {\n      throw e;\n    } finally {\n      console.log = _console_log;\n    }\n  })();\n}\n"],"sourceRoot":""}